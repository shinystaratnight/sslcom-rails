#!/usr/bin/env ruby
begin
  load File.expand_path('../spring', __FILE__)
rescue LoadError => e
  raise unless e.message.include?('spring')
end

#--begin ssl config for webrick
require 'rubygems'
require 'rails/commands/server'
require 'rack'
require 'webrick'
require 'webrick/https'

module Rails
  class Server < ::Rack::Server
    def default_options
      super.merge({
                      Port:  3000,
                      SSLEnable:  true,
                      SSLVerifyClient:  OpenSSL::SSL::VERIFY_NONE,
                      SSLCertName:  [["CN", "www.ssl.local"],["subjectAltName", "DNS.1=www.ssl.local, DNS.2=sandbox.ssl.local"]],
                      # comment out below 2 lines for JIT ssl gen or use the following line to generate a self signed cert
                      # openssl req -nodes -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -subj '/CN=www.ssl.local'  -extensions SAN -config <(cat /etc/ssl/openssl.cnf <(printf "[SAN]\nsubjectAltName='DNS.1:sandbox.ssl.local,DNS.2:www.ssl.local,DNS.3:sandbox2.ssl.local'"))
                      # test with
                      #  openssl x509 -noout -certopt no_sigdump,no_pubkey -text -in cert.pem
                      #  see https://dzone.com/articles/openssl-certificate-with-subjectaltname-one-liner
                      #  you will also need to import the self signed cert see http://blog.getpostman.com/2014/01/28/using-self-signed-certificates-with-postman/
                      SSLPrivateKey: OpenSSL::PKey::RSA.new(File.open(File.expand_path('../../config/cert/key.pem', __FILE__)).read),
                      SSLCertificate: OpenSSL::X509::Certificate.new(File.open(File.expand_path('../../config/cert/cert.pem', __FILE__)).read)
      })
    end
  end
end
#--end ssl config for webrick

APP_PATH = File.expand_path('../../config/application', __FILE__)
require_relative '../config/boot'
require 'rails/commands'
