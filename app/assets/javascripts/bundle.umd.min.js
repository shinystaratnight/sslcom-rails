!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.csrgen={})}(this,function(e){"use strict";function t(e,t,r){return e instanceof Object==!1?r:t in e?e[t]:r}function r(e,t=0,r=e.byteLength){let a="";for(const s of new Uint8Array(e,t,r)){const e=s.toString(16).toUpperCase();a=a+(1===e.length?"0":"")+e}return a}function a(e,t,r,a){return t instanceof ArrayBuffer==!1?(e.error='Wrong parameter: inputBuffer must be "ArrayBuffer"',!1):0===t.byteLength?(e.error="Wrong parameter: inputBuffer has zero length",!1):r<0?(e.error="Wrong parameter: inputOffset less than zero",!1):a<0?(e.error="Wrong parameter: inputLength less than zero",!1):!(t.byteLength-r-a<0)||(e.error="End of input reached before message was fully decoded (inconsistent offset and length values)",!1)}function s(e,t){let r=0;for(let a=e.length-1;a>=0;a--)r+=e[e.length-1-a]*Math.pow(2,t*a);return r}function n(e,t,r=0){const a=r||-1;let s=e,n=0,i=Math.pow(2,t);for(let r=1;r<8;r++){if(e<i){let e;if(a<0)e=new ArrayBuffer(r),n=r;else{if(a<r)return new ArrayBuffer(0);e=new ArrayBuffer(a),n=a}const i=new Uint8Array(e);for(let e=r-1;e>=0;e--){const r=Math.pow(2,e*t);i[n-e-1]=Math.floor(s/r),s-=i[n-e-1]*r}return e}i*=Math.pow(2,t)}return new ArrayBuffer(0)}function i(...e){let t=0,r=0;for(const r of e)t+=r.byteLength;const a=new ArrayBuffer(t),s=new Uint8Array(a);for(const t of e)s.set(new Uint8Array(t),r),r+=t.byteLength;return a}function o(...e){let t=0,r=0;for(const r of e)t+=r.length;const a=new ArrayBuffer(t),s=new Uint8Array(a);for(const t of e)s.set(t,r),r+=t.length;return s}function l(e,t){if(e.byteLength!==t.byteLength)return!1;const r=new Uint8Array(e),a=new Uint8Array(t);for(let e=0;e<r.length;e++)if(r[e]!==a[e])return!1;return!0}function c(e,t){const r=e.toString(10),a=t-r.length,s=new Array(a);for(let e=0;e<a;e++)s[e]="0";return s.join("").concat(r)}const u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=";const m=[new Uint8Array([1])],f="0123456789";class d{constructor(e={}){this.blockLength=t(e,"blockLength",0),this.error=t(e,"error",""),this.warnings=t(e,"warnings",[]),this.valueBeforeDecode="valueBeforeDecode"in e?e.valueBeforeDecode.slice(0):new ArrayBuffer(0)}static blockName(){return"baseBlock"}toJSON(){return{blockName:this.constructor.blockName(),blockLength:this.blockLength,error:this.error,warnings:this.warnings,valueBeforeDecode:r(this.valueBeforeDecode,0,this.valueBeforeDecode.byteLength)}}}const g=e=>(class extends e{constructor(e={}){super(e),this.isHexOnly=t(e,"isHexOnly",!1),this.valueHex="valueHex"in e?e.valueHex.slice(0):new ArrayBuffer(0)}static blockName(){return"hexBlock"}fromBER(e,t,r){if(!1===a(this,e,t,r))return-1;const s=new Uint8Array(e,t,r);return 0===s.length?(this.warnings.push("Zero buffer length"),t):(this.valueHex=e.slice(t,t+r),this.blockLength=r,t+r)}toBER(e=!1){return!0!==this.isHexOnly?(this.error='Flag "isHexOnly" is not set, abort',new ArrayBuffer(0)):!0===e?new ArrayBuffer(this.valueHex.byteLength):this.valueHex.slice(0)}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isHexOnly=this.isHexOnly,e.valueHex=r(this.valueHex,0,this.valueHex.byteLength),e}});class y extends(g(d)){constructor(e={}){super(),"idBlock"in e?(this.isHexOnly=t(e.idBlock,"isHexOnly",!1),this.valueHex=t(e.idBlock,"valueHex",new ArrayBuffer(0)),this.tagClass=t(e.idBlock,"tagClass",-1),this.tagNumber=t(e.idBlock,"tagNumber",-1),this.isConstructed=t(e.idBlock,"isConstructed",!1)):(this.tagClass=-1,this.tagNumber=-1,this.isConstructed=!1)}static blockName(){return"identificationBlock"}toBER(e=!1){let t,r,a=0;switch(this.tagClass){case 1:a|=0;break;case 2:a|=64;break;case 3:a|=128;break;case 4:a|=192;break;default:return this.error="Unknown tag class",new ArrayBuffer(0)}if(this.isConstructed&&(a|=32),this.tagNumber<31&&!this.isHexOnly){if(t=new ArrayBuffer(1),r=new Uint8Array(t),!e){let e=this.tagNumber;a|=e&=31,r[0]=a}return t}if(!1===this.isHexOnly){const s=n(this.tagNumber,7),i=new Uint8Array(s),o=s.byteLength;if(t=new ArrayBuffer(o+1),(r=new Uint8Array(t))[0]=31|a,!e){for(let e=0;e<o-1;e++)r[e+1]=128|i[e];r[o]=i[o-1]}return t}if(t=new ArrayBuffer(this.valueHex.byteLength+1),(r=new Uint8Array(t))[0]=31|a,!1===e){const e=new Uint8Array(this.valueHex);for(let t=0;t<e.length-1;t++)r[t+1]=128|e[t];r[this.valueHex.byteLength]=e[e.length-1]}return t}fromBER(e,t,r){if(!1===a(this,e,t,r))return-1;const n=new Uint8Array(e,t,r);if(0===n.length)return this.error="Zero buffer length",-1;const i=192&n[0];switch(i){case 0:this.tagClass=1;break;case 64:this.tagClass=2;break;case 128:this.tagClass=3;break;case 192:this.tagClass=4;break;default:return this.error="Unknown tag class",-1}this.isConstructed=32==(32&n[0]),this.isHexOnly=!1;const o=31&n[0];if(31!==o)this.tagNumber=o,this.blockLength=1;else{let e=1;this.valueHex=new ArrayBuffer(255);let t=255,r=new Uint8Array(this.valueHex);for(;128&n[e];){if(r[e-1]=127&n[e],++e>=n.length)return this.error="End of input reached before message was fully decoded",-1;if(e===t){t+=255;const e=new ArrayBuffer(t),a=new Uint8Array(e);for(let e=0;e<r.length;e++)a[e]=r[e];this.valueHex=new ArrayBuffer(t),r=new Uint8Array(this.valueHex)}}this.blockLength=e+1,r[e-1]=127&n[e];const a=new ArrayBuffer(e),i=new Uint8Array(a);for(let t=0;t<e;t++)i[t]=r[t];this.valueHex=new ArrayBuffer(e),(r=new Uint8Array(this.valueHex)).set(i),this.blockLength<=9?this.tagNumber=s(r,7):(this.isHexOnly=!0,this.warnings.push("Tag too long, represented as hex-coded"))}if(1===this.tagClass&&this.isConstructed)switch(this.tagNumber){case 1:case 2:case 5:case 6:case 9:case 14:case 23:case 24:case 31:case 32:case 33:case 34:return this.error="Constructed encoding used for primitive type",-1}return t+this.blockLength}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.tagClass=this.tagClass,e.tagNumber=this.tagNumber,e.isConstructed=this.isConstructed,e}}class v extends d{constructor(e={}){super(),"lenBlock"in e?(this.isIndefiniteForm=t(e.lenBlock,"isIndefiniteForm",!1),this.longFormUsed=t(e.lenBlock,"longFormUsed",!1),this.length=t(e.lenBlock,"length",0)):(this.isIndefiniteForm=!1,this.longFormUsed=!1,this.length=0)}static blockName(){return"lengthBlock"}fromBER(e,t,r){if(!1===a(this,e,t,r))return-1;const n=new Uint8Array(e,t,r);if(0===n.length)return this.error="Zero buffer length",-1;if(255===n[0])return this.error="Length block 0xFF is reserved by standard",-1;if(this.isIndefiniteForm=128===n[0],!0===this.isIndefiniteForm)return this.blockLength=1,t+this.blockLength;if(this.longFormUsed=!!(128&n[0]),!1===this.longFormUsed)return this.length=n[0],this.blockLength=1,t+this.blockLength;const i=127&n[0];if(i>8)return this.error="Too big integer",-1;if(i+1>n.length)return this.error="End of input reached before message was fully decoded",-1;const o=new Uint8Array(i);for(let e=0;e<i;e++)o[e]=n[e+1];return 0===o[i-1]&&this.warnings.push("Needlessly long encoded length"),this.length=s(o,8),this.longFormUsed&&this.length<=127&&this.warnings.push("Unneccesary usage of long length form"),this.blockLength=i+1,t+this.blockLength}toBER(e=!1){let t,r;if(this.length>127&&(this.longFormUsed=!0),this.isIndefiniteForm)return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=128),t;if(!0===this.longFormUsed){const a=n(this.length,8);if(a.byteLength>127)return this.error="Too big length",new ArrayBuffer(0);if(t=new ArrayBuffer(a.byteLength+1),!0===e)return t;const s=new Uint8Array(a);(r=new Uint8Array(t))[0]=128|a.byteLength;for(let e=0;e<a.byteLength;e++)r[e+1]=s[e];return t}return t=new ArrayBuffer(1),!1===e&&((r=new Uint8Array(t))[0]=this.length),t}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.blockName=this.constructor.blockName(),e.isIndefiniteForm=this.isIndefiniteForm,e.longFormUsed=this.longFormUsed,e.length=this.length,e}}class p extends d{constructor(e={}){super(e)}static blockName(){return"valueBlock"}fromBER(e,t,r){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}toBER(e=!1){throw TypeError('User need to make a specific function in a class which extends "LocalValueBlock"')}}class b extends d{constructor(e={},t=p){super(e),"name"in e&&(this.name=e.name),"optional"in e&&(this.optional=e.optional),"primitiveSchema"in e&&(this.primitiveSchema=e.primitiveSchema),this.idBlock=new y(e),this.lenBlock=new v(e),this.valueBlock=new t(e)}static blockName(){return"BaseBlock"}fromBER(e,t,r){const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}toBER(e=!1){let t;const r=this.idBlock.toBER(e),a=this.valueBlock.toBER(!0);this.lenBlock.length=a.byteLength;const s=this.lenBlock.toBER(e);let n;if(t=i(t=i(r,s),n=!1===e?this.valueBlock.toBER(e):new ArrayBuffer(this.lenBlock.length)),!0===this.lenBlock.isIndefiniteForm){const r=new ArrayBuffer(2);if(!1===e){const e=new Uint8Array(r);e[0]=0,e[1]=0}t=i(t,r)}return t}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.idBlock=this.idBlock.toJSON(),e.lenBlock=this.lenBlock.toJSON(),e.valueBlock=this.valueBlock.toJSON(),"name"in this&&(e.name=this.name),"optional"in this&&(e.optional=this.optional),"primitiveSchema"in this&&(e.primitiveSchema=this.primitiveSchema.toJSON()),e}}class w extends p{constructor(e={}){super(e),this.valueHex="valueHex"in e?e.valueHex.slice(0):new ArrayBuffer(0),this.isHexOnly=t(e,"isHexOnly",!0)}fromBER(e,t,r){if(!1===a(this,e,t,r))return-1;const s=new Uint8Array(e,t,r);if(0===s.length)return this.warnings.push("Zero buffer length"),t;this.valueHex=new ArrayBuffer(s.length);const n=new Uint8Array(this.valueHex);for(let e=0;e<s.length;e++)n[e]=s[e];return this.blockLength=r,t+r}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"PrimitiveValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueHex=r(this.valueHex,0,this.valueHex.byteLength),e.isHexOnly=this.isHexOnly,e}}class k extends b{constructor(e={}){super(e,w),this.idBlock.isConstructed=!1}static blockName(){return"PRIMITIVE"}}class A extends p{constructor(e={}){super(e),this.value=t(e,"value",[]),this.isIndefiniteForm=t(e,"isIndefiniteForm",!1)}fromBER(e,t,r){const s=t,n=r;if(!1===a(this,e,t,r))return-1;const i=new Uint8Array(e,t,r);if(0===i.length)return this.warnings.push("Zero buffer length"),t;function o(e,t){return!0===e?1:t}let l=t;for(;o(this.isIndefiniteForm,r)>0;){const t=ge(e,l,r);if(-1===t.offset)return this.error=t.result.error,this.warnings.concat(t.result.warnings),-1;if(l=t.offset,this.blockLength+=t.result.blockLength,r-=t.result.blockLength,this.value.push(t.result),!0===this.isIndefiniteForm&&t.result.constructor.blockName()===C.blockName())break}return!0===this.isIndefiniteForm&&(this.value[this.value.length-1].constructor.blockName()===C.blockName()?this.value.pop():this.warnings.push("No EndOfContent block encoded")),this.valueBeforeDecode=e.slice(s,s+n),l}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){t=i(t,this.value[r].toBER(e))}return t}static blockName(){return"ConstructedValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.isIndefiniteForm=this.isIndefiniteForm,e.value=[];for(let t=0;t<this.value.length;t++)e.value.push(this.value[t].toJSON());return e}}class B extends b{constructor(e={}){super(e,A),this.idBlock.isConstructed=!0}static blockName(){return"CONSTRUCTED"}fromBER(e,t,r){this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm;const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}}class S extends p{constructor(e={}){super(e)}fromBER(e,t,r){return t}toBER(e=!1){return new ArrayBuffer(0)}static blockName(){return"EndOfContentValueBlock"}}class C extends b{constructor(e={}){super(e,S),this.idBlock.tagClass=1,this.idBlock.tagNumber=0}static blockName(){return"EndOfContent"}}class N extends p{constructor(e={}){if(super(e),this.value=t(e,"value",!1),this.isHexOnly=t(e,"isHexOnly",!1),"valueHex"in e)this.valueHex=e.valueHex.slice(0);else if(this.valueHex=new ArrayBuffer(1),!0===this.value){var r=new Uint8Array(this.valueHex);r[0]=255}}fromBER(e,t,r){if(!1===a(this,e,t,r))return-1;const s=new Uint8Array(e,t,r);r>1&&this.warnings.push("Boolean value encoded in more then 1 octet"),this.value=0!==s[0],this.isHexOnly=!0,this.valueHex=new ArrayBuffer(s.length);const n=new Uint8Array(this.valueHex);for(let e=0;e<s.length;e++)n[e]=s[e];return this.blockLength=r,t+r}toBER(e=!1){return this.valueHex}static blockName(){return"BooleanValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e.isHexOnly=this.isHexOnly,e.valueHex=r(this.valueHex,0,this.valueHex.byteLength),e}}class x extends b{constructor(e={}){super(e,N),this.idBlock.tagClass=1,this.idBlock.tagNumber=1}static blockName(){return"Boolean"}}class P extends B{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=16}static blockName(){return"Sequence"}}class E extends B{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=17}static blockName(){return"Set"}}class I extends b{constructor(e={}){super(e,d),this.idBlock.tagClass=1,this.idBlock.tagNumber=5}static blockName(){return"Null"}fromBER(e,t,r){return this.lenBlock.length>0&&this.warnings.push("Non-zero length of value block for Null type"),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),this.blockLength+=r,t+r}toBER(e=!1){const t=new ArrayBuffer(2);if(!0===e)return t;const r=new Uint8Array(t);return r[0]=5,r[1]=0,t}}class H extends(g(A)){constructor(e={}){super(e),this.isConstructed=t(e,"isConstructed",!1)}fromBER(e,t,r){let a=0;if(!0===this.isConstructed){if(this.isHexOnly=!1,-1===(a=A.prototype.fromBER.call(this,e,t,r)))return a;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===C.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only",-1}if(t!==O.blockName())return this.error="OCTET STRING may consists of OCTET STRINGs only",-1}}else this.isHexOnly=!0,a=super.fromBER(e,t,r),this.blockLength=r;return a}toBER(e=!1){if(!0===this.isConstructed)return A.prototype.toBER.call(this,e);let t=new ArrayBuffer(this.valueHex.byteLength);return!0===e?t:0===this.valueHex.byteLength?t:t=this.valueHex.slice(0)}static blockName(){return"OctetStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=r(this.valueHex,0,this.valueHex.byteLength),e}}class O extends b{constructor(e={}){super(e,H),this.idBlock.tagClass=1,this.idBlock.tagNumber=4}fromBER(e,t,r){return this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,0===r?(0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),t):super.fromBER(e,t,r)}static blockName(){return"OctetString"}isEqual(e){return e instanceof O!=!1&&JSON.stringify(this)===JSON.stringify(e)}}class L extends(g(A)){constructor(e={}){super(e),this.unusedBits=t(e,"unusedBits",0),this.isConstructed=t(e,"isConstructed",!1),this.blockLength=this.valueHex.byteLength+1}fromBER(e,t,r){if(0===r)return t;let s=-1;if(!0===this.isConstructed){if(-1===(s=A.prototype.fromBER.call(this,e,t,r)))return s;for(let e=0;e<this.value.length;e++){const t=this.value[e].constructor.blockName();if(t===C.blockName()){if(!0===this.isIndefiniteForm)break;return this.error="EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only",-1}if(t!==R.blockName())return this.error="BIT STRING may consists of BIT STRINGs only",-1;if(this.unusedBits>0&&this.value[e].unusedBits>0)return this.error='Usign of "unused bits" inside constructive BIT STRING allowed for least one only',-1;if(this.unusedBits=this.value[e].unusedBits,this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1}return s}if(!1===a(this,e,t,r))return-1;const n=new Uint8Array(e,t,r);if(this.unusedBits=n[0],this.unusedBits>7)return this.error="Unused bits for BitString must be in range 0-7",-1;this.valueHex=new ArrayBuffer(n.length-1);const i=new Uint8Array(this.valueHex);for(let e=0;e<r-1;e++)i[e]=n[e+1];return this.blockLength=n.length,t+r}toBER(e=!1){if(!0===this.isConstructed)return A.prototype.toBER.call(this,e);if(!0===e)return new ArrayBuffer(this.valueHex.byteLength+1);if(0===this.valueHex.byteLength)return new ArrayBuffer(0);const t=new Uint8Array(this.valueHex),r=new ArrayBuffer(this.valueHex.byteLength+1),a=new Uint8Array(r);a[0]=this.unusedBits;for(let e=0;e<this.valueHex.byteLength;e++)a[e+1]=t[e];return r}static blockName(){return"BitStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.unusedBits=this.unusedBits,e.isConstructed=this.isConstructed,e.isHexOnly=this.isHexOnly,e.valueHex=r(this.valueHex,0,this.valueHex.byteLength),e}}class R extends b{constructor(e={}){super(e,L),this.idBlock.tagClass=1,this.idBlock.tagNumber=3}static blockName(){return"BitString"}fromBER(e,t,r){return 0===r?t:(this.valueBlock.isConstructed=this.idBlock.isConstructed,this.valueBlock.isIndefiniteForm=this.lenBlock.isIndefiniteForm,super.fromBER(e,t,r))}isEqual(e){return e instanceof R!=!1&&JSON.stringify(this)===JSON.stringify(e)}}class U extends(g(p)){constructor(e={}){super(e),"value"in e&&(this.valueDec=e.value)}set valueHex(e){this._valueHex=e.slice(0),e.byteLength>=4?(this.warnings.push("Too big Integer for decoding, hex only"),this.isHexOnly=!0,this._valueDec=0):(this.isHexOnly=!1,e.byteLength>0&&(this._valueDec=function(){const e=new Uint8Array(this.valueHex);if(this.valueHex.byteLength>=2){const t=255===e[0]&&128&e[1],r=0===e[0]&&0==(128&e[1]);(t||r)&&this.warnings.push("Needlessly long format")}const t=new ArrayBuffer(this.valueHex.byteLength),r=new Uint8Array(t);for(let e=0;e<this.valueHex.byteLength;e++)r[e]=0;r[0]=128&e[0];const a=s(r,8),n=new ArrayBuffer(this.valueHex.byteLength),i=new Uint8Array(n);for(let t=0;t<this.valueHex.byteLength;t++)i[t]=e[t];return i[0]&=127,s(i,8)-a}.call(this)))}get valueHex(){return this._valueHex}set valueDec(e){this._valueDec=e,this.isHexOnly=!1,this._valueHex=function(e){const t=e<0?-1*e:e;let r=128;for(let a=1;a<8;a++){if(t<=r){if(e<0){const e=n(r-t,8,a);return new Uint8Array(e)[0]|=128,e}let s=n(t,8,a),i=new Uint8Array(s);if(128&i[0]){const e=s.slice(0),t=new Uint8Array(e);s=new ArrayBuffer(s.byteLength+1),i=new Uint8Array(s);for(let r=0;r<e.byteLength;r++)i[r+1]=t[r];i[0]=0}return s}r*=Math.pow(2,8)}return new ArrayBuffer(0)}(e)}get valueDec(){return this._valueDec}fromDER(e,t,r,a=0){const s=this.fromBER(e,t,r);if(-1===s)return s;const n=new Uint8Array(this._valueHex);if(0===n[0]&&0!=(128&n[1])){const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}else if(0!==a&&this._valueHex.byteLength<a){a-this._valueHex.byteLength>1&&(a=this._valueHex.byteLength+1);const e=new ArrayBuffer(a);new Uint8Array(e).set(n,a-this._valueHex.byteLength),this._valueHex=e.slice(0)}return s}toDER(e=!1){const t=new Uint8Array(this._valueHex);switch(!0){case 0!=(128&t[0]):{const e=new ArrayBuffer(this._valueHex.byteLength+1),r=new Uint8Array(e);r[0]=0,r.set(t,1),this._valueHex=e.slice(0)}break;case 0===t[0]&&0==(128&t[1]):{const e=new ArrayBuffer(this._valueHex.byteLength-1);new Uint8Array(e).set(new Uint8Array(this._valueHex,1,this._valueHex.byteLength-1)),this._valueHex=e.slice(0)}}return this.toBER(e)}fromBER(e,t,r){const a=super.fromBER(e,t,r);return-1===a?a:(this.blockLength=r,t+r)}toBER(e=!1){return this.valueHex.slice(0)}static blockName(){return"IntegerValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e}toString(){function e(e,t){const r=new Uint8Array([0]);let a=new Uint8Array(e),s=new Uint8Array(t),n=a.slice(0);const i=n.length-1;let l=s.slice(0);const c=l.length-1;let u=0;let h=0;for(let e=c<i?i:c;e>=0;e--,h++){switch(!0){case h<l.length:u=n[i-h]+l[c-h]+r[0];break;default:u=n[i-h]+r[0]}switch(r[0]=u/10,!0){case h>=n.length:n=o(new Uint8Array([u%10]),n);break;default:n[i-h]=u%10}}return r[0]>0&&(n=o(r,n)),n.slice(0)}function t(e){if(e>=m.length)for(let t=m.length;t<=e;t++){const e=new Uint8Array([0]);let r=m[t-1].slice(0);for(let t=r.length-1;t>=0;t--){const a=new Uint8Array([(r[t]<<1)+e[0]]);e[0]=a[0]/10,r[t]=a[0]%10}e[0]>0&&(r=o(e,r)),m.push(r)}return m[e]}function r(e,t){let r=0,a=new Uint8Array(e),s=new Uint8Array(t),n=a.slice(0);const i=n.length-1;let o=s.slice(0);const l=o.length-1;let c,u=0;for(let e=l;e>=0;e--,u++)switch(c=n[i-u]-o[l-u]-r,!0){case c<0:r=1,n[i-u]=c+10;break;default:r=0,n[i-u]=c}if(r>0)for(let e=i-l+1;e>=0;e--,u++){if(!((c=n[i-u]-r)<0)){r=0,n[i-u]=c;break}r=1,n[i-u]=c+10}return n.slice()}const a=8*this._valueHex.byteLength-1;let s,n=new Uint8Array(8*this._valueHex.byteLength/3),i=0;const l=new Uint8Array(this._valueHex);let c="",u=!1;for(let o=this._valueHex.byteLength-1;o>=0;o--){s=l[o];for(let o=0;o<8;o++){if(1==(1&s))switch(i){case a:n=r(t(i),n),c="-";break;default:n=e(n,t(i))}i++,s>>=1}}for(let e=0;e<n.length;e++)n[e]&&(u=!0),u&&(c+=f.charAt(n[e]));return!1===u&&(c+=f.charAt(0)),c}}class D extends b{constructor(e={}){super(e,U),this.idBlock.tagClass=1,this.idBlock.tagNumber=2}static blockName(){return"Integer"}isEqual(e){return e instanceof D?this.valueBlock.isHexOnly&&e.valueBlock.isHexOnly?l(this.valueBlock.valueHex,e.valueBlock.valueHex):this.valueBlock.isHexOnly===e.valueBlock.isHexOnly&&this.valueBlock.valueDec===e.valueBlock.valueDec:e instanceof ArrayBuffer&&l(this.valueBlock.valueHex,e)}convertToDER(){const e=new D({valueHex:this.valueBlock.valueHex});return e.valueBlock.toDER(),e}convertFromDER(){const e=this.valueBlock.valueHex.byteLength%2?this.valueBlock.valueHex.byteLength+1:this.valueBlock.valueHex.byteLength,t=new D({valueHex:this.valueBlock.valueHex});return t.valueBlock.fromDER(t.valueBlock.valueHex,0,t.valueBlock.valueHex.byteLength,e),t}}class V extends D{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=10}static blockName(){return"Enumerated"}}class j extends(g(d)){constructor(e={}){super(e),this.valueDec=t(e,"valueDec",-1),this.isFirstSid=t(e,"isFirstSid",!1)}static blockName(){return"sidBlock"}fromBER(e,t,r){if(0===r)return t;if(!1===a(this,e,t,r))return-1;const n=new Uint8Array(e,t,r);this.valueHex=new ArrayBuffer(r);let i=new Uint8Array(this.valueHex);for(let e=0;e<r&&(i[e]=127&n[e],this.blockLength++,0!=(128&n[e]));e++);const o=new ArrayBuffer(this.blockLength),l=new Uint8Array(o);for(let e=0;e<this.blockLength;e++)l[e]=i[e];return this.valueHex=o.slice(0),i=new Uint8Array(this.valueHex),0!=(128&n[this.blockLength-1])?(this.error="End of input reached before message was fully decoded",-1):(0===i[0]&&this.warnings.push("Needlessly long format of SID encoding"),this.blockLength<=8?this.valueDec=s(i,7):(this.isHexOnly=!0,this.warnings.push("Too big SID for decoding, hex only")),t+this.blockLength)}toBER(e=!1){let t,r;if(this.isHexOnly){if(!0===e)return new ArrayBuffer(this.valueHex.byteLength);const a=new Uint8Array(this.valueHex);t=new ArrayBuffer(this.blockLength),r=new Uint8Array(t);for(let e=0;e<this.blockLength-1;e++)r[e]=128|a[e];return r[this.blockLength-1]=a[this.blockLength-1],t}const a=n(this.valueDec,7);if(0===a.byteLength)return this.error="Error during encoding SID value",new ArrayBuffer(0);if(t=new ArrayBuffer(a.byteLength),!1===e){const e=new Uint8Array(a);r=new Uint8Array(t);for(let t=0;t<a.byteLength-1;t++)r[t]=128|e[t];r[a.byteLength-1]=e[a.byteLength-1]}return t}toString(){let e="";if(!0===this.isHexOnly)e=r(this.valueHex,0,this.valueHex.byteLength);else if(this.isFirstSid){let t=this.valueDec;this.valueDec<=39?e="0.":this.valueDec<=79?(e="1.",t-=40):(e="2.",t-=80),e+=t.toString()}else e=this.valueDec.toString();return e}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.valueDec=this.valueDec,e.isFirstSid=this.isFirstSid,e}}class K extends p{constructor(e={}){super(e),this.fromString(t(e,"value",""))}fromBER(e,t,r){let a=t;for(;r>0;){const t=new j;if(-1===(a=t.fromBER(e,a,r)))return this.blockLength=0,this.error=t.error,a;0===this.value.length&&(t.isFirstSid=!0),this.blockLength+=t.blockLength,r-=t.blockLength,this.value.push(t)}return a}toBER(e=!1){let t=new ArrayBuffer(0);for(let r=0;r<this.value.length;r++){const a=this.value[r].toBER(e);if(0===a.byteLength)return this.error=this.value[r].error,new ArrayBuffer(0);t=i(t,a)}return t}fromString(e){this.value=[];let t=0,r=0,a="",s=!1;do{if(a=-1===(r=e.indexOf(".",t))?e.substr(t):e.substr(t,r-t),t=r+1,s){const e=this.value[0];let t=0;switch(e.valueDec){case 0:break;case 1:t=40;break;case 2:t=80;break;default:return this.value=[],!1}const r=parseInt(a,10);if(isNaN(r))return!0;e.valueDec=r+t,s=!1}else{const e=new j;if(e.valueDec=parseInt(a,10),isNaN(e.valueDec))return!0;0===this.value.length&&(e.isFirstSid=!0,s=!0),this.value.push(e)}}while(-1!==r);return!0}toString(){let e="",t=!1;for(let r=0;r<this.value.length;r++){t=this.value[r].isHexOnly;let a=this.value[r].toString();0!==r&&(e=`${e}.`),t?(a=`{${a}}`,this.value[r].isFirstSid?e=`2.{${a} - 80}`:e+=a):e+=a}return e}static blockName(){return"ObjectIdentifierValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}e.value=this.toString(),e.sidArray=[];for(let t=0;t<this.value.length;t++)e.sidArray.push(this.value[t].toJSON());return e}}class J extends b{constructor(e={}){super(e,K),this.idBlock.tagClass=1,this.idBlock.tagNumber=6}static blockName(){return"ObjectIdentifier"}}class T extends(g(d)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"Utf8StringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class F extends b{constructor(e={}){super(e,T),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=12}static blockName(){return"Utf8String"}fromBER(e,t,r){const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e));try{this.valueBlock.value=decodeURIComponent(escape(this.valueBlock.value))}catch(e){this.warnings.push(`Error during "decodeURIComponent": ${e}, using raw string`)}}fromString(e){const t=unescape(encodeURIComponent(e)),r=t.length;this.valueBlock.valueHex=new ArrayBuffer(r);const a=new Uint8Array(this.valueBlock.valueHex);for(let e=0;e<r;e++)a[e]=t.charCodeAt(e);this.valueBlock.value=e}}class $ extends(g(d)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"BmpStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class M extends b{constructor(e={}){super(e,$),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=30}static blockName(){return"BmpString"}fromBER(e,t,r){const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=2){const t=r[e];r[e]=r[e+1],r[e+1]=t}this.valueBlock.value=String.fromCharCode.apply(null,new Uint16Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(2*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let a=0;a<t;a++){const t=n(e.charCodeAt(a),8),s=new Uint8Array(t);if(s.length>2)continue;const i=2-s.length;for(let e=s.length-1;e>=0;e--)r[2*a+e+i]=s[e]}this.valueBlock.value=e}}class q extends(g(d)){constructor(e={}){super(e),this.isHexOnly=!0,this.value=""}static blockName(){return"UniversalStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class _ extends b{constructor(e={}){super(e,q),"value"in e&&this.fromString(e.value),this.idBlock.tagClass=1,this.idBlock.tagNumber=28}static blockName(){return"UniversalString"}fromBER(e,t,r){const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}fromBuffer(e){const t=e.slice(0),r=new Uint8Array(t);for(let e=0;e<r.length;e+=4)r[e]=r[e+3],r[e+1]=r[e+2],r[e+2]=0,r[e+3]=0;this.valueBlock.value=String.fromCharCode.apply(null,new Uint32Array(t))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(4*t);const r=new Uint8Array(this.valueBlock.valueHex);for(let a=0;a<t;a++){const t=n(e.charCodeAt(a),8),s=new Uint8Array(t);if(s.length>4)continue;const i=4-s.length;for(let e=s.length-1;e>=0;e--)r[4*a+e+i]=s[e]}this.valueBlock.value=e}}class W extends(g(d)){constructor(e={}){super(e),this.value="",this.isHexOnly=!0}static blockName(){return"SimpleStringValueBlock"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.value=this.value,e}}class G extends b{constructor(e={}){super(e,W),"value"in e&&this.fromString(e.value)}static blockName(){return"SIMPLESTRING"}fromBER(e,t,r){const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}fromBuffer(e){this.valueBlock.value=String.fromCharCode.apply(null,new Uint8Array(e))}fromString(e){const t=e.length;this.valueBlock.valueHex=new ArrayBuffer(t);const r=new Uint8Array(this.valueBlock.valueHex);for(let a=0;a<t;a++)r[a]=e.charCodeAt(a);this.valueBlock.value=e}}class Q extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=18}static blockName(){return"NumericString"}}class z extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=19}static blockName(){return"PrintableString"}}class Z extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=20}static blockName(){return"TeletexString"}}class Y extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=21}static blockName(){return"VideotexString"}}class X extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=22}static blockName(){return"IA5String"}}class ee extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=25}static blockName(){return"GraphicString"}}class te extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=26}static blockName(){return"VisibleString"}}class re extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=27}static blockName(){return"GeneralString"}}class ae extends G{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=29}static blockName(){return"CharacterString"}}class se extends te{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=23}fromBER(e,t,r){const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second))}fromString(e){const t=/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})Z/gi,r=t.exec(e);if(null===r)return void(this.error="Wrong input string for convertion");const a=parseInt(r[1],10);this.year=a>=50?1900+a:2e3+a,this.month=parseInt(r[2],10),this.day=parseInt(r[3],10),this.hour=parseInt(r[4],10),this.minute=parseInt(r[5],10),this.second=parseInt(r[6],10)}toString(){const e=new Array(7);return e[0]=c(this.year<2e3?this.year-1900:this.year-2e3,2),e[1]=c(this.month,2),e[2]=c(this.day,2),e[3]=c(this.hour,2),e[4]=c(this.minute,2),e[5]=c(this.second,2),e[6]="Z",e.join("")}static blockName(){return"UTCTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e}}class ne extends te{constructor(e={}){if(super(e),this.year=0,this.month=0,this.day=0,this.hour=0,this.minute=0,this.second=0,this.millisecond=0,"value"in e){this.fromString(e.value),this.valueBlock.valueHex=new ArrayBuffer(e.value.length);const t=new Uint8Array(this.valueBlock.valueHex);for(let r=0;r<e.value.length;r++)t[r]=e.value.charCodeAt(r)}"valueDate"in e&&(this.fromDate(e.valueDate),this.valueBlock.valueHex=this.toBuffer()),this.idBlock.tagClass=1,this.idBlock.tagNumber=24}fromBER(e,t,r){const a=this.valueBlock.fromBER(e,t,!0===this.lenBlock.isIndefiniteForm?r:this.lenBlock.length);return-1===a?(this.error=this.valueBlock.error,a):(this.fromBuffer(this.valueBlock.valueHex),0===this.idBlock.error.length&&(this.blockLength+=this.idBlock.blockLength),0===this.lenBlock.error.length&&(this.blockLength+=this.lenBlock.blockLength),0===this.valueBlock.error.length&&(this.blockLength+=this.valueBlock.blockLength),a)}fromBuffer(e){this.fromString(String.fromCharCode.apply(null,new Uint8Array(e)))}toBuffer(){const e=this.toString(),t=new ArrayBuffer(e.length),r=new Uint8Array(t);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return t}fromDate(e){this.year=e.getUTCFullYear(),this.month=e.getUTCMonth()+1,this.day=e.getUTCDate(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}toDate(){return new Date(Date.UTC(this.year,this.month-1,this.day,this.hour,this.minute,this.second,this.millisecond))}fromString(e){let t,r=!1,a="",s="",n=0,i=0,o=0;if("Z"===e[e.length-1])a=e.substr(0,e.length-1),r=!0;else{const t=new Number(e[e.length-1]);if(isNaN(t.valueOf()))throw new Error("Wrong input string for convertion");a=e}if(r){if(-1!==a.indexOf("+"))throw new Error("Wrong input string for convertion");if(-1!==a.indexOf("-"))throw new Error("Wrong input string for convertion")}else{let e=1,t=a.indexOf("+"),r="";if(-1===t&&(t=a.indexOf("-"),e=-1),-1!==t){if(r=a.substr(t+1),a=a.substr(0,t),2!==r.length&&4!==r.length)throw new Error("Wrong input string for convertion");let s=new Number(r.substr(0,2));if(isNaN(s.valueOf()))throw new Error("Wrong input string for convertion");if(i=e*s,4===r.length){if(s=new Number(r.substr(2,2)),isNaN(s.valueOf()))throw new Error("Wrong input string for convertion");o=e*s}}}let l=a.indexOf(".");if(-1===l&&(l=a.indexOf(",")),-1!==l){const e=new Number(`0${a.substr(l)}`);if(isNaN(e.valueOf()))throw new Error("Wrong input string for convertion");n=e.valueOf(),s=a.substr(0,l)}else s=a;switch(!0){case 8===s.length:if(t=/(\d{4})(\d{2})(\d{2})/gi,-1!==l)throw new Error("Wrong input string for convertion");break;case 10===s.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*n;this.minute=Math.floor(e),e=60*(e-this.minute),this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 12===s.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){let e=60*n;this.second=Math.floor(e),e=1e3*(e-this.second),this.millisecond=Math.floor(e)}break;case 14===s.length:if(t=/(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/gi,-1!==l){const e=1e3*n;this.millisecond=Math.floor(e)}break;default:throw new Error("Wrong input string for convertion")}const c=t.exec(s);if(null===c)throw new Error("Wrong input string for convertion");for(let e=1;e<c.length;e++)switch(e){case 1:this.year=parseInt(c[e],10);break;case 2:this.month=parseInt(c[e],10);break;case 3:this.day=parseInt(c[e],10);break;case 4:this.hour=parseInt(c[e],10)+i;break;case 5:this.minute=parseInt(c[e],10)+o;break;case 6:this.second=parseInt(c[e],10);break;default:throw new Error("Wrong input string for convertion")}if(!1===r){const e=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second,this.millisecond);this.year=e.getUTCFullYear(),this.month=e.getUTCMonth(),this.day=e.getUTCDay(),this.hour=e.getUTCHours(),this.minute=e.getUTCMinutes(),this.second=e.getUTCSeconds(),this.millisecond=e.getUTCMilliseconds()}}toString(){const e=[];return e.push(c(this.year,4)),e.push(c(this.month,2)),e.push(c(this.day,2)),e.push(c(this.hour,2)),e.push(c(this.minute,2)),e.push(c(this.second,2)),0!==this.millisecond&&(e.push("."),e.push(c(this.millisecond,3))),e.push("Z"),e.join("")}static blockName(){return"GeneralizedTime"}toJSON(){let e={};try{e=super.toJSON()}catch(e){}return e.year=this.year,e.month=this.month,e.day=this.day,e.hour=this.hour,e.minute=this.minute,e.second=this.second,e.millisecond=this.millisecond,e}}class ie extends F{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=31}static blockName(){return"DATE"}}class oe extends F{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=32}static blockName(){return"TimeOfDay"}}class le extends F{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=33}static blockName(){return"DateTime"}}class ce extends F{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=34}static blockName(){return"Duration"}}class ue extends F{constructor(e={}){super(e),this.idBlock.tagClass=1,this.idBlock.tagNumber=14}static blockName(){return"TIME"}}class he{constructor(e={}){this.value=t(e,"value",[]),this.optional=t(e,"optional",!1)}}class me{constructor(e={}){this.name=t(e,"name",""),this.optional=t(e,"optional",!1)}}class fe{constructor(e={}){this.name=t(e,"name",""),this.optional=t(e,"optional",!1),this.value=t(e,"value",new me),this.local=t(e,"local",!1)}}class de{constructor(e={}){this.data=t(e,"data",new ArrayBuffer(0))}fromBER(e,t,r){this.data=e.slice(t,r)}toBER(e=!1){return this.data}}function ge(e,t,r){const s=t;let n=new b({},Object);if(!1===a(new d,e,t,r))return n.error="Wrong input parameters",{offset:-1,result:n};if(0===new Uint8Array(e,t,r).length)return this.error="Zero buffer length",{offset:-1,result:n};let i=n.idBlock.fromBER(e,t,r);if(n.warnings.concat(n.idBlock.warnings),-1===i)return n.error=n.idBlock.error,{offset:-1,result:n};if(t=i,r-=n.idBlock.blockLength,i=n.lenBlock.fromBER(e,t,r),n.warnings.concat(n.lenBlock.warnings),-1===i)return n.error=n.lenBlock.error,{offset:-1,result:n};if(t=i,r-=n.lenBlock.blockLength,!1===n.idBlock.isConstructed&&!0===n.lenBlock.isIndefiniteForm)return n.error="Indefinite length form used for primitive encoding form",{offset:-1,result:n};let o=b;switch(n.idBlock.tagClass){case 1:if(n.idBlock.tagNumber>=37&&!1===n.idBlock.isHexOnly)return n.error="UNIVERSAL 37 and upper tags are reserved by ASN.1 standard",{offset:-1,result:n};switch(n.idBlock.tagNumber){case 0:if(!0===n.idBlock.isConstructed&&n.lenBlock.length>0)return n.error="Type [UNIVERSAL 0] is reserved",{offset:-1,result:n};o=C;break;case 1:o=x;break;case 2:o=D;break;case 3:o=R;break;case 4:o=O;break;case 5:o=I;break;case 6:o=J;break;case 10:o=V;break;case 12:o=F;break;case 14:o=ue;break;case 15:return n.error="[UNIVERSAL 15] is reserved by ASN.1 standard",{offset:-1,result:n};case 16:o=P;break;case 17:o=E;break;case 18:o=Q;break;case 19:o=z;break;case 20:o=Z;break;case 21:o=Y;break;case 22:o=X;break;case 23:o=se;break;case 24:o=ne;break;case 25:o=ee;break;case 26:o=te;break;case 27:o=re;break;case 28:o=_;break;case 29:o=ae;break;case 30:o=M;break;case 31:o=ie;break;case 32:o=oe;break;case 33:o=le;break;case 34:o=ce;break;default:{let a;(a=!0===n.idBlock.isConstructed?new B:new k).idBlock=n.idBlock,a.lenBlock=n.lenBlock,a.warnings=n.warnings,i=(n=a).fromBER(e,t,r)}}break;case 2:case 3:case 4:default:o=!0===n.idBlock.isConstructed?B:k}return i=(n=function(e,t){if(e instanceof t)return e;const r=new t;return r.idBlock=e.idBlock,r.lenBlock=e.lenBlock,r.warnings=e.warnings,r.valueBeforeDecode=e.valueBeforeDecode.slice(0),r}(n,o)).fromBER(e,t,!0===n.lenBlock.isIndefiniteForm?r:n.lenBlock.length),n.valueBeforeDecode=e.slice(s,s+n.blockLength),{offset:i,result:n}}function ye(e){if(0===e.byteLength){const e=new b({},Object);return e.error="Input buffer has zero length",{offset:-1,result:e}}return ge(e,0,e.byteLength)}function ve(e,t,r){if(r instanceof he){for(let a=0;a<r.value.length;a++){if(!0===ve(e,t,r.value[a]).verified)return{verified:!0,result:e}}{const e={verified:!1,result:{error:"Wrong values for Choice type"}};return r.hasOwnProperty("name")&&(e.name=r.name),e}}if(r instanceof me)return r.hasOwnProperty("name")&&(e[r.name]=t),{verified:!0,result:e};if(e instanceof Object==!1)return{verified:!1,result:{error:"Wrong root object"}};if(t instanceof Object==!1)return{verified:!1,result:{error:"Wrong ASN.1 data"}};if(r instanceof Object==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("idBlock"in r==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("fromBER"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if("toBER"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const a=r.idBlock.toBER(!1);if(0===a.byteLength)return{verified:!1,result:{error:"Error encoding idBlock for ASN.1 schema"}};if(-1===r.idBlock.fromBER(a,0,a.byteLength))return{verified:!1,result:{error:"Error decoding idBlock for ASN.1 schema"}};if(!1===r.idBlock.hasOwnProperty("tagClass"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagClass!==t.idBlock.tagClass)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty("tagNumber"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.tagNumber!==t.idBlock.tagNumber)return{verified:!1,result:e};if(!1===r.idBlock.hasOwnProperty("isConstructed"))return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isConstructed!==t.idBlock.isConstructed)return{verified:!1,result:e};if("isHexOnly"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};if(r.idBlock.isHexOnly!==t.idBlock.isHexOnly)return{verified:!1,result:e};if(!0===r.idBlock.isHexOnly){if("valueHex"in r.idBlock==!1)return{verified:!1,result:{error:"Wrong ASN.1 schema"}};const a=new Uint8Array(r.idBlock.valueHex),s=new Uint8Array(t.idBlock.valueHex);if(a.length!==s.length)return{verified:!1,result:e};for(let t=0;t<a.length;t++)if(a[t]!==s[1])return{verified:!1,result:e}}if(r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(e[r.name]=t)),!0===r.idBlock.isConstructed){let a=0,s={verified:!1},n=r.valueBlock.value.length;if(n>0&&r.valueBlock.value[0]instanceof fe&&(n=t.valueBlock.value.length),0===n)return{verified:!0,result:e};if(0===t.valueBlock.value.length&&0!==r.valueBlock.value.length){let t=!0;for(let e=0;e<r.valueBlock.value.length;e++)t=t&&(r.valueBlock.value[e].optional||!1);return!0===t?{verified:!0,result:e}:(r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),e.error="Inconsistent object length",{verified:!1,result:e})}for(let i=0;i<n;i++)if(i-a>=t.valueBlock.value.length){if(!1===r.valueBlock.value[i].optional){const t={verified:!1,result:e};return e.error="Inconsistent length between ASN.1 data and schema",r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}}else if(r.valueBlock.value[0]instanceof fe){if(!1===(s=ve(e,t.valueBlock.value[i],r.valueBlock.value[0].value)).verified){if(!0!==r.valueBlock.value[0].optional)return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),s;a++}if("name"in r.valueBlock.value[0]&&r.valueBlock.value[0].name.length>0){let a={};void 0===(a="local"in r.valueBlock.value[0]&&!0===r.valueBlock.value[0].local?t:e)[r.valueBlock.value[0].name]&&(a[r.valueBlock.value[0].name]=[]),a[r.valueBlock.value[0].name].push(t.valueBlock.value[i])}}else if(!1===(s=ve(e,t.valueBlock.value[i-a],r.valueBlock.value[i])).verified){if(!0!==r.valueBlock.value[i].optional)return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&delete e[r.name]),s;a++}if(!1===s.verified){const t={verified:!1,result:e};return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return{verified:!0,result:e}}if("primitiveSchema"in r&&"valueHex"in t.valueBlock){const a=ye(t.valueBlock.valueHex);if(-1===a.offset){const t={verified:!1,result:a.result};return r.hasOwnProperty("name")&&(r.name=r.name.replace(/^\s+|\s+$/g,""),""!==r.name&&(delete e[r.name],t.name=r.name)),t}return ve(e,a.result,r.primitiveSchema)}return{verified:!0,result:e}}function pe(e,t,r){return e instanceof Object==!1?r:t in e?e[t]:r}function be(...e){let t=0,r=0;for(const r of e)t+=r.byteLength;const a=new ArrayBuffer(t),s=new Uint8Array(a);for(const t of e)s.set(new Uint8Array(t),r),r+=t.byteLength;return a}function we(e,t){if(e.byteLength!==t.byteLength)return!1;const r=new Uint8Array(e),a=new Uint8Array(t);for(let e=0;e<r.length;e++)if(r[e]!==a[e])return!1;return!0}const ke="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",Ae="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=";function Be(e,t=!1,r=!1,a=!1){let s=0,n=0,i=0,o="";const l=t?Ae:ke;if(a){let t=0;for(let r=0;r<e.length;r++)if(0!==e.charCodeAt(r)){t=r;break}e=e.slice(t)}for(;s<e.length;){const t=e.charCodeAt(s++);s>=e.length&&(n=1);const a=e.charCodeAt(s++);s>=e.length&&(i=1);const c=e.charCodeAt(s++),u=t>>2,h=(3&t)<<4|a>>4;let m=(15&a)<<2|c>>6,f=63&c;1===n?m=f=64:1===i&&(f=64),o+=r?64===m?`${l.charAt(u)}${l.charAt(h)}`:64===f?`${l.charAt(u)}${l.charAt(h)}${l.charAt(m)}`:`${l.charAt(u)}${l.charAt(h)}${l.charAt(m)}${l.charAt(f)}`:`${l.charAt(u)}${l.charAt(h)}${l.charAt(m)}${l.charAt(f)}`}return o}function Se(e,t=!1,r=!1){const a=t?Ae:ke;function s(e){for(let t=0;t<64;t++)if(a.charAt(t)===e)return t;return 64}function n(e){return 64===e?0:e}let i=0,o="";for(;i<e.length;){const t=s(e.charAt(i++)),r=i>=e.length?0:s(e.charAt(i++)),a=i>=e.length?0:s(e.charAt(i++)),l=i>=e.length?0:s(e.charAt(i++)),c=n(t)<<2|n(r)>>4,u=(15&n(r))<<4|n(a)>>2,h=(3&n(a))<<6|n(l);o+=String.fromCharCode(c),64!==a&&(o+=String.fromCharCode(u)),64!==l&&(o+=String.fromCharCode(h))}if(r){let e=-1;for(let t=o.length-1;t>=0;t--)if(0!==o.charCodeAt(t)){e=t;break}-1!==e&&(o=o.slice(0,e+1))}return o}function Ce(e){let t="";const r=new Uint8Array(e);for(const e of r)t+=String.fromCharCode(e);return t}function Ne(e){const t=e.length,r=new ArrayBuffer(t),a=new Uint8Array(r);for(let r=0;r<t;r++)a[r]=e.charCodeAt(r);return r}const xe=Math.log(2);class Pe{constructor(e={}){this.algorithmId=pe(e,"algorithmId",Pe.defaultValues("algorithmId")),"algorithmParams"in e&&(this.algorithmParams=pe(e,"algorithmParams",Pe.defaultValues("algorithmParams"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"algorithmId":return"";case"algorithmParams":return new me;default:throw new Error(`Invalid member name for AlgorithmIdentifier class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"algorithmId":return""===t;case"algorithmParams":return t instanceof me;default:throw new Error(`Invalid member name for AlgorithmIdentifier class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",optional:t.optional||!1,value:[new J({name:t.algorithmIdentifier||""}),new me({name:t.algorithmParams||"",optional:!0})]})}fromSchema(e){const t=ve(e,e,Pe.schema({names:{algorithmIdentifier:"algorithm",algorithmParams:"params"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AlgorithmIdentifier");this.algorithmId=t.result.algorithm.valueBlock.toString(),"params"in t.result&&(this.algorithmParams=t.result.params)}toSchema(){const e=[];return e.push(new J({value:this.algorithmId})),"algorithmParams"in this&&this.algorithmParams instanceof me==!1&&e.push(this.algorithmParams),new P({value:e})}toJSON(){const e={algorithmId:this.algorithmId};return"algorithmParams"in this&&this.algorithmParams instanceof me==!1&&(e.algorithmParams=this.algorithmParams.toJSON()),e}isEqual(e){return e instanceof Pe!=!1&&(this.algorithmId===e.algorithmId&&("algorithmParams"in this?"algorithmParams"in e&&JSON.stringify(this.algorithmParams)===JSON.stringify(e.algorithmParams):!("algorithmParams"in e)))}}class Ee{constructor(e={}){this.x=pe(e,"x",Ee.defaultValues("x")),this.y=pe(e,"y",Ee.defaultValues("y")),this.namedCurve=pe(e,"namedCurve",Ee.defaultValues("namedCurve")),"schema"in e&&this.fromSchema(e.schema),"json"in e&&this.fromJSON(e.json)}static defaultValues(e){switch(e){case"x":case"y":return new ArrayBuffer(0);case"namedCurve":return"";default:throw new Error(`Invalid member name for ECCPublicKey class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"x":case"y":return we(t,Ee.defaultValues(e));case"namedCurve":return""===t;default:throw new Error(`Invalid member name for ECCPublicKey class: ${e}`)}}static schema(e={}){return new de}fromSchema(e){if(e instanceof ArrayBuffer==!1)throw new Error("Object's schema was not verified against input data for ECPublicKey");const t=new Uint8Array(e);if(4!==t[0])throw new Error("Object's schema was not verified against input data for ECPublicKey");let r;switch(this.namedCurve){case"1.2.840.10045.3.1.7":r=32;break;case"1.3.132.0.34":r=48;break;case"1.3.132.0.35":r=66;break;default:throw new Error(`Incorrect curve OID: ${this.namedCurve}`)}if(e.byteLength!==2*r+1)throw new Error("Object's schema was not verified against input data for ECPublicKey");this.x=e.slice(1,r+1),this.y=e.slice(1+r,2*r+1)}toSchema(){return new de({data:be(new Uint8Array([4]).buffer,this.x,this.y)})}toJSON(){let e="";switch(this.namedCurve){case"1.2.840.10045.3.1.7":e="P-256";break;case"1.3.132.0.34":e="P-384";break;case"1.3.132.0.35":e="P-521"}return{crv:e,x:Be(Ce(this.x),!0,!0,!1),y:Be(Ce(this.y),!0,!0,!1)}}fromJSON(e){let t=0;if(!("crv"in e))throw new Error('Absent mandatory parameter "crv"');switch(e.crv.toUpperCase()){case"P-256":this.namedCurve="1.2.840.10045.3.1.7",t=32;break;case"P-384":this.namedCurve="1.3.132.0.34",t=48;break;case"P-521":this.namedCurve="1.3.132.0.35",t=66}if(!("x"in e))throw new Error('Absent mandatory parameter "x"');{const r=Ne(Se(e.x,!0));if(r.byteLength<t){this.x=new ArrayBuffer(t);const e=new Uint8Array(this.x),a=new Uint8Array(r);e.set(1,a)}else this.x=r.slice(0,t)}if(!("y"in e))throw new Error('Absent mandatory parameter "y"');{const r=Ne(Se(e.y,!0));if(r.byteLength<t){this.y=new ArrayBuffer(t);const e=new Uint8Array(this.y),a=new Uint8Array(r);e.set(1,a)}else this.y=r.slice(0,t)}}}class Ie{constructor(e={}){this.modulus=pe(e,"modulus",Ie.defaultValues("modulus")),this.publicExponent=pe(e,"publicExponent",Ie.defaultValues("publicExponent")),"schema"in e&&this.fromSchema(e.schema),"json"in e&&this.fromJSON(e.json)}static defaultValues(e){switch(e){case"modulus":case"publicExponent":return new D;default:throw new Error(`Invalid member name for RSAPublicKey class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new D({name:t.modulus||""}),new D({name:t.publicExponent||""})]})}fromSchema(e){const t=ve(e,e,Ie.schema({names:{modulus:"modulus",publicExponent:"publicExponent"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSAPublicKey");this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent}toSchema(){return new P({value:[this.modulus.convertToDER(),this.publicExponent]})}toJSON(){return{n:Be(Ce(this.modulus.valueBlock.valueHex),!0,!0,!0),e:Be(Ce(this.publicExponent.valueBlock.valueHex),!0,!0,!0)}}fromJSON(e){if(!("n"in e))throw new Error('Absent mandatory parameter "n"');{const t=Ne(Se(e.n,!0));this.modulus=new D({valueHex:t.slice(0,Math.pow(2,function(e){const t=Math.log(e)/xe,r=Math.floor(t),a=Math.round(t);return r===a?r:a}(t.byteLength)))})}if(!("e"in e))throw new Error('Absent mandatory parameter "e"');this.publicExponent=new D({valueHex:Ne(Se(e.e,!0)).slice(0,3)})}}class He{constructor(e={}){this.algorithm=pe(e,"algorithm",He.defaultValues("algorithm")),this.subjectPublicKey=pe(e,"subjectPublicKey",He.defaultValues("subjectPublicKey")),"parsedKey"in e&&(this.parsedKey=pe(e,"parsedKey",He.defaultValues("parsedKey"))),"schema"in e&&this.fromSchema(e.schema),"json"in e&&this.fromJSON(e.json)}static defaultValues(e){switch(e){case"algorithm":return new Pe;case"subjectPublicKey":return new R;default:throw new Error(`Invalid member name for PublicKeyInfo class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[Pe.schema(t.algorithm||{}),new R({name:t.subjectPublicKey||""})]})}fromSchema(e){const t=ve(e,e,He.schema({names:{algorithm:{names:{blockName:"algorithm"}},subjectPublicKey:"subjectPublicKey"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PUBLIC_KEY_INFO");switch(this.algorithm=new Pe({schema:t.result.algorithm}),this.subjectPublicKey=t.result.subjectPublicKey,this.algorithm.algorithmId){case"1.2.840.10045.2.1":if("algorithmParams"in this.algorithm&&this.algorithm.algorithmParams instanceof J)try{this.parsedKey=new Ee({namedCurve:this.algorithm.algorithmParams.valueBlock.toString(),schema:this.subjectPublicKey.valueBlock.valueHex})}catch(e){}break;case"1.2.840.113549.1.1.1":{const e=ye(this.subjectPublicKey.valueBlock.valueHex);if(-1!==e.offset)try{this.parsedKey=new Ie({schema:e.result})}catch(e){}}}}toSchema(){return new P({value:[this.algorithm.toSchema(),this.subjectPublicKey]})}toJSON(){if("parsedKey"in this==!1)return{algorithm:this.algorithm.toJSON(),subjectPublicKey:this.subjectPublicKey.toJSON()};const e={};switch(this.algorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();for(const r of Object.keys(t))e[r]=t[r];return e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new Ee({json:e}),this.algorithm=new Pe({algorithmId:"1.2.840.10045.2.1",algorithmParams:new J({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new Ie({json:e}),this.algorithm=new Pe({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new I});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.subjectPublicKey=new R({valueHex:this.parsedKey.toSchema().toBER(!1)})}}importKey(e){let t=Promise.resolve();const r=this;if(void 0===e)return Promise.reject("Need to provide publicKey input parameter");const a=$e();return void 0===a?Promise.reject("Unable to create WebCrypto object"):t=(t=t.then(()=>a.exportKey("spki",e))).then(e=>{const t=ye(e);try{r.fromSchema(t.result)}catch(e){return Promise.reject("Error during initializing object from schema")}},e=>Promise.reject(`Error during exporting public key: ${e}`))}}class Oe{constructor(e={}){this.type=pe(e,"type",Oe.defaultValues("type")),this.values=pe(e,"values",Oe.defaultValues("values")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"type":return"";case"values":return[];default:throw new Error(`Invalid member name for Attribute class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"type":return""===t;case"values":return 0===t.length;default:throw new Error(`Invalid member name for Attribute class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.type||""}),new E({name:t.setName||"",value:[new fe({name:t.values||"",value:new me})]})]})}fromSchema(e){const t=ve(e,e,Oe.schema({names:{type:"type",values:"values"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ATTRIBUTE");this.type=t.result.type.valueBlock.toString(),this.values=t.result.values}toSchema(){return new P({value:[new J({value:this.type}),new E({value:this.values})]})}toJSON(){return{type:this.type,values:Array.from(this.values,e=>e.toJSON())}}}class Le{constructor(e={}){this.version=pe(e,"version",Le.defaultValues("version")),this.privateKey=pe(e,"privateKey",Le.defaultValues("privateKey")),"namedCurve"in e&&(this.namedCurve=pe(e,"namedCurve",Le.defaultValues("namedCurve"))),"publicKey"in e&&(this.publicKey=pe(e,"publicKey",Le.defaultValues("publicKey"))),"schema"in e&&this.fromSchema(e.schema),"json"in e&&this.fromJSON(e.json)}static defaultValues(e){switch(e){case"version":return 1;case"privateKey":return new O;case"namedCurve":return"";case"publicKey":return new Ee;default:throw new Error(`Invalid member name for ECCPrivateKey class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"version":return t===Le.defaultValues(e);case"privateKey":return t.isEqual(Le.defaultValues(e));case"namedCurve":return""===t;case"publicKey":return Ee.compareWithDefault("namedCurve",t.namedCurve)&&Ee.compareWithDefault("x",t.x)&&Ee.compareWithDefault("y",t.y);default:throw new Error(`Invalid member name for ECCPrivateKey class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new D({name:t.version||""}),new O({name:t.privateKey||""}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new J({name:t.namedCurve||""})]}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new R({name:t.publicKey||""})]})]})}fromSchema(e){const t=ve(e,e,Le.schema({names:{version:"version",privateKey:"privateKey",namedCurve:"namedCurve",publicKey:"publicKey"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ECPrivateKey");if(this.version=t.result.version.valueBlock.valueDec,this.privateKey=t.result.privateKey,"namedCurve"in t.result&&(this.namedCurve=t.result.namedCurve.valueBlock.toString()),"publicKey"in t.result){const e={schema:t.result.publicKey.valueBlock.valueHex};"namedCurve"in this&&(e.namedCurve=this.namedCurve),this.publicKey=new Ee(e)}}toSchema(){const e=[new D({value:this.version}),this.privateKey];return"namedCurve"in this&&e.push(new B({idBlock:{tagClass:3,tagNumber:0},value:[new J({value:this.namedCurve})]})),"publicKey"in this&&e.push(new B({idBlock:{tagClass:3,tagNumber:1},value:[new R({valueHex:this.publicKey.toSchema().toBER(!1)})]})),new P({value:e})}toJSON(){if("namedCurve"in this==!1||Le.compareWithDefault("namedCurve",this.namedCurve))throw new Error('Not enough information for making JSON: absent "namedCurve" value');let e="";switch(this.namedCurve){case"1.2.840.10045.3.1.7":e="P-256";break;case"1.3.132.0.34":e="P-384";break;case"1.3.132.0.35":e="P-521"}const t={crv:e,d:Be(Ce(this.privateKey.valueBlock.valueHex),!0,!0,!1)};if("publicKey"in this){const e=this.publicKey.toJSON();t.x=e.x,t.y=e.y}return t}fromJSON(e){let t=0;if(!("crv"in e))throw new Error('Absent mandatory parameter "crv"');switch(e.crv.toUpperCase()){case"P-256":this.namedCurve="1.2.840.10045.3.1.7",t=32;break;case"P-384":this.namedCurve="1.3.132.0.34",t=48;break;case"P-521":this.namedCurve="1.3.132.0.35",t=66}if(!("d"in e))throw new Error('Absent mandatory parameter "d"');{const r=Ne(Se(e.d,!0));if(r.byteLength<t){const e=new ArrayBuffer(t),a=new Uint8Array(e),s=new Uint8Array(r);a.set(1,s),this.privateKey=new O({valueHex:e})}else this.privateKey=new O({valueHex:r.slice(0,t)})}"x"in e&&"y"in e&&(this.publicKey=new Ee({json:e}))}}class Re{constructor(e={}){this.prime=pe(e,"prime",Re.defaultValues("prime")),this.exponent=pe(e,"exponent",Re.defaultValues("exponent")),this.coefficient=pe(e,"coefficient",Re.defaultValues("coefficient")),"schema"in e&&this.fromSchema(e.schema),"json"in e&&this.fromJSON(e.json)}static defaultValues(e){switch(e){case"prime":case"exponent":case"coefficient":return new D;default:throw new Error(`Invalid member name for OtherPrimeInfo class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new D({name:t.prime||""}),new D({name:t.exponent||""}),new D({name:t.coefficient||""})]})}fromSchema(e){const t=ve(e,e,Re.schema({names:{prime:"prime",exponent:"exponent",coefficient:"coefficient"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for OtherPrimeInfo");this.prime=t.result.prime.convertFromDER(),this.exponent=t.result.exponent.convertFromDER(),this.coefficient=t.result.coefficient.convertFromDER()}toSchema(){return new P({value:[this.prime.convertToDER(),this.exponent.convertToDER(),this.coefficient.convertToDER()]})}toJSON(){return{r:Be(Ce(this.prime.valueBlock.valueHex),!0,!0),d:Be(Ce(this.exponent.valueBlock.valueHex),!0,!0),t:Be(Ce(this.coefficient.valueBlock.valueHex),!0,!0)}}fromJSON(e){if(!("r"in e))throw new Error('Absent mandatory parameter "r"');if(this.prime=new D({valueHex:Ne(Se(e.r,!0))}),!("d"in e))throw new Error('Absent mandatory parameter "d"');if(this.exponent=new D({valueHex:Ne(Se(e.d,!0))}),!("t"in e))throw new Error('Absent mandatory parameter "t"');this.coefficient=new D({valueHex:Ne(Se(e.t,!0))})}}class Ue{constructor(e={}){this.version=pe(e,"version",Ue.defaultValues("version")),this.modulus=pe(e,"modulus",Ue.defaultValues("modulus")),this.publicExponent=pe(e,"publicExponent",Ue.defaultValues("publicExponent")),this.privateExponent=pe(e,"privateExponent",Ue.defaultValues("privateExponent")),this.prime1=pe(e,"prime1",Ue.defaultValues("prime1")),this.prime2=pe(e,"prime2",Ue.defaultValues("prime2")),this.exponent1=pe(e,"exponent1",Ue.defaultValues("exponent1")),this.exponent2=pe(e,"exponent2",Ue.defaultValues("exponent2")),this.coefficient=pe(e,"coefficient",Ue.defaultValues("coefficient")),"otherPrimeInfos"in e&&(this.otherPrimeInfos=pe(e,"otherPrimeInfos",Ue.defaultValues("otherPrimeInfos"))),"schema"in e&&this.fromSchema(e.schema),"json"in e&&this.fromJSON(e.json)}static defaultValues(e){switch(e){case"version":return 0;case"modulus":case"publicExponent":case"privateExponent":case"prime1":case"prime2":case"exponent1":case"exponent2":case"coefficient":return new D;case"otherPrimeInfos":return[];default:throw new Error(`Invalid member name for RSAPrivateKey class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new D({name:t.version||""}),new D({name:t.modulus||""}),new D({name:t.publicExponent||""}),new D({name:t.privateExponent||""}),new D({name:t.prime1||""}),new D({name:t.prime2||""}),new D({name:t.exponent1||""}),new D({name:t.exponent2||""}),new D({name:t.coefficient||""}),new P({optional:!0,value:[new fe({name:t.otherPrimeInfosName||"",value:Re.schema(t.otherPrimeInfo||{})})]})]})}fromSchema(e){const t=ve(e,e,Ue.schema({names:{version:"version",modulus:"modulus",publicExponent:"publicExponent",privateExponent:"privateExponent",prime1:"prime1",prime2:"prime2",exponent1:"exponent1",exponent2:"exponent2",coefficient:"coefficient",otherPrimeInfo:{names:{blockName:"otherPrimeInfos"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSAPrivateKey");this.version=t.result.version.valueBlock.valueDec,this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent,this.privateExponent=t.result.privateExponent.convertFromDER(256),this.prime1=t.result.prime1.convertFromDER(128),this.prime2=t.result.prime2.convertFromDER(128),this.exponent1=t.result.exponent1.convertFromDER(128),this.exponent2=t.result.exponent2.convertFromDER(128),this.coefficient=t.result.coefficient.convertFromDER(128),"otherPrimeInfos"in t.result&&(this.otherPrimeInfos=Array.from(t.result.otherPrimeInfos,e=>new Re({schema:e})))}toSchema(){const e=[];return e.push(new D({value:this.version})),e.push(this.modulus.convertToDER()),e.push(this.publicExponent),e.push(this.privateExponent.convertToDER()),e.push(this.prime1.convertToDER()),e.push(this.prime2.convertToDER()),e.push(this.exponent1.convertToDER()),e.push(this.exponent2.convertToDER()),e.push(this.coefficient.convertToDER()),"otherPrimeInfos"in this&&e.push(new P({value:Array.from(this.otherPrimeInfos,e=>e.toSchema())})),new P({value:e})}toJSON(){const e={n:Be(Ce(this.modulus.valueBlock.valueHex),!0,!0,!0),e:Be(Ce(this.publicExponent.valueBlock.valueHex),!0,!0,!0),d:Be(Ce(this.privateExponent.valueBlock.valueHex),!0,!0,!0),p:Be(Ce(this.prime1.valueBlock.valueHex),!0,!0,!0),q:Be(Ce(this.prime2.valueBlock.valueHex),!0,!0,!0),dp:Be(Ce(this.exponent1.valueBlock.valueHex),!0,!0,!0),dq:Be(Ce(this.exponent2.valueBlock.valueHex),!0,!0,!0),qi:Be(Ce(this.coefficient.valueBlock.valueHex),!0,!0,!0)};return"otherPrimeInfos"in this&&(e.oth=Array.from(this.otherPrimeInfos,e=>e.toJSON())),e}fromJSON(e){if(!("n"in e))throw new Error('Absent mandatory parameter "n"');if(this.modulus=new D({valueHex:Ne(Se(e.n,!0,!0))}),!("e"in e))throw new Error('Absent mandatory parameter "e"');if(this.publicExponent=new D({valueHex:Ne(Se(e.e,!0,!0))}),!("d"in e))throw new Error('Absent mandatory parameter "d"');if(this.privateExponent=new D({valueHex:Ne(Se(e.d,!0,!0))}),!("p"in e))throw new Error('Absent mandatory parameter "p"');if(this.prime1=new D({valueHex:Ne(Se(e.p,!0,!0))}),!("q"in e))throw new Error('Absent mandatory parameter "q"');if(this.prime2=new D({valueHex:Ne(Se(e.q,!0,!0))}),!("dp"in e))throw new Error('Absent mandatory parameter "dp"');if(this.exponent1=new D({valueHex:Ne(Se(e.dp,!0,!0))}),!("dq"in e))throw new Error('Absent mandatory parameter "dq"');if(this.exponent2=new D({valueHex:Ne(Se(e.dq,!0,!0))}),!("qi"in e))throw new Error('Absent mandatory parameter "qi"');this.coefficient=new D({valueHex:Ne(Se(e.qi,!0,!0))}),"oth"in e&&(this.otherPrimeInfos=Array.from(e.oth,e=>new Re({json:e})))}}class De{constructor(e={}){this.version=pe(e,"version",De.defaultValues("version")),this.privateKeyAlgorithm=pe(e,"privateKeyAlgorithm",De.defaultValues("privateKeyAlgorithm")),this.privateKey=pe(e,"privateKey",De.defaultValues("privateKey")),"attributes"in e&&(this.attributes=pe(e,"attributes",De.defaultValues("attributes"))),"parsedKey"in e&&(this.parsedKey=pe(e,"parsedKey",De.defaultValues("parsedKey"))),"schema"in e&&this.fromSchema(e.schema),"json"in e&&this.fromJSON(e.json)}static defaultValues(e){switch(e){case"version":return 0;case"privateKeyAlgorithm":return new Pe;case"privateKey":return new O;case"attributes":return[];default:throw new Error(`Invalid member name for PrivateKeyInfo class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new D({name:t.version||""}),Pe.schema(t.privateKeyAlgorithm||{}),new O({name:t.privateKey||""}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new fe({name:t.attributes||"",value:Oe.schema()})]})]})}fromSchema(e){const t=ve(e,e,De.schema({names:{version:"version",privateKeyAlgorithm:{names:{blockName:"privateKeyAlgorithm"}},privateKey:"privateKey",attributes:"attributes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PKCS8");switch(this.version=t.result.version.valueBlock.valueDec,this.privateKeyAlgorithm=new Pe({schema:t.result.privateKeyAlgorithm}),this.privateKey=t.result.privateKey,"attributes"in t.result&&(this.attributes=Array.from(t.result.attributes,e=>new Oe({schema:e}))),this.privateKeyAlgorithm.algorithmId){case"1.2.840.113549.1.1.1":{const e=ye(this.privateKey.valueBlock.valueHex);-1!==e.offset&&(this.parsedKey=new Ue({schema:e.result}))}break;case"1.2.840.10045.2.1":if("algorithmParams"in this.privateKeyAlgorithm&&this.privateKeyAlgorithm.algorithmParams instanceof J){const e=ye(this.privateKey.valueBlock.valueHex);-1!==e.offset&&(this.parsedKey=new Le({namedCurve:this.privateKeyAlgorithm.algorithmParams.valueBlock.toString(),schema:e.result}))}}}toSchema(){const e=[new D({value:this.version}),this.privateKeyAlgorithm.toSchema(),this.privateKey];return"attributes"in this&&e.push(new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.attributes,e=>e.toSchema())})),new P({value:e})}toJSON(){if("parsedKey"in this==!1){const e={version:this.version,privateKeyAlgorithm:this.privateKeyAlgorithm.toJSON(),privateKey:this.privateKey.toJSON()};return"attributes"in this&&(e.attributes=Array.from(this.attributes,e=>e.toJSON())),e}const e={};switch(this.privateKeyAlgorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();for(const r of Object.keys(t))e[r]=t[r];return e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new Le({json:e}),this.privateKeyAlgorithm=new Pe({algorithmId:"1.2.840.10045.2.1",algorithmParams:new J({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new Ue({json:e}),this.privateKeyAlgorithm=new Pe({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new I});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.privateKey=new O({valueHex:this.parsedKey.toSchema().toBER(!1)})}}}class Ve{constructor(e={}){if(this.contentType=pe(e,"contentType",Ve.defaultValues("contentType")),this.contentEncryptionAlgorithm=pe(e,"contentEncryptionAlgorithm",Ve.defaultValues("contentEncryptionAlgorithm")),"encryptedContent"in e&&(this.encryptedContent=e.encryptedContent,1===this.encryptedContent.idBlock.tagClass&&4===this.encryptedContent.idBlock.tagNumber&&!1===this.encryptedContent.idBlock.isConstructed)){const e=new O({idBlock:{isConstructed:!0},isConstructed:!0});let t=0,r=this.encryptedContent.valueBlock.valueHex.byteLength;for(;r>0;){const a=new Uint8Array(this.encryptedContent.valueBlock.valueHex,t,t+1024>this.encryptedContent.valueBlock.valueHex.byteLength?this.encryptedContent.valueBlock.valueHex.byteLength-t:1024),s=new ArrayBuffer(a.length),n=new Uint8Array(s);for(let e=0;e<n.length;e++)n[e]=a[e];e.valueBlock.value.push(new O({valueHex:s})),r-=a.length,t+=a.length}this.encryptedContent=e}"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"contentType":return"";case"contentEncryptionAlgorithm":return new Pe;case"encryptedContent":return new O;default:throw new Error(`Invalid member name for EncryptedContentInfo class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"contentType":return""===t;case"contentEncryptionAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case"encryptedContent":return t.isEqual(Ve.defaultValues(e));default:throw new Error(`Invalid member name for EncryptedContentInfo class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.contentType||""}),Pe.schema(t.contentEncryptionAlgorithm||{}),new he({value:[new B({name:t.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0},value:[new fe({value:new O})]}),new k({name:t.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0}})]})]})}fromSchema(e){const t=ve(e,e,Ve.schema({names:{contentType:"contentType",contentEncryptionAlgorithm:{names:{blockName:"contentEncryptionAlgorithm"}},encryptedContent:"encryptedContent"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for EncryptedContentInfo");this.contentType=t.result.contentType.valueBlock.toString(),this.contentEncryptionAlgorithm=new Pe({schema:t.result.contentEncryptionAlgorithm}),"encryptedContent"in t.result&&(this.encryptedContent=t.result.encryptedContent,this.encryptedContent.idBlock.tagClass=1,this.encryptedContent.idBlock.tagNumber=4)}toSchema(){const e={isIndefiniteForm:!1},t=[];if(t.push(new J({value:this.contentType})),t.push(this.contentEncryptionAlgorithm.toSchema()),"encryptedContent"in this){e.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed;const r=this.encryptedContent;r.idBlock.tagClass=3,r.idBlock.tagNumber=0,r.lenBlock.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed,t.push(r)}return new P({lenBlock:e,value:t})}toJSON(){const e={contentType:this.contentType,contentEncryptionAlgorithm:this.contentEncryptionAlgorithm.toJSON()};return"encryptedContent"in this&&(e.encryptedContent=this.encryptedContent.toJSON()),e}}class je{constructor(e={}){this.hashAlgorithm=pe(e,"hashAlgorithm",je.defaultValues("hashAlgorithm")),this.maskGenAlgorithm=pe(e,"maskGenAlgorithm",je.defaultValues("maskGenAlgorithm")),this.saltLength=pe(e,"saltLength",je.defaultValues("saltLength")),this.trailerField=pe(e,"trailerField",je.defaultValues("trailerField")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"hashAlgorithm":return new Pe({algorithmId:"1.3.14.3.2.26",algorithmParams:new I});case"maskGenAlgorithm":return new Pe({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:new Pe({algorithmId:"1.3.14.3.2.26",algorithmParams:new I}).toSchema()});case"saltLength":return 20;case"trailerField":return 1;default:throw new Error(`Invalid member name for RSASSAPSSParams class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new B({idBlock:{tagClass:3,tagNumber:0},optional:!0,value:[Pe.schema(t.hashAlgorithm||{})]}),new B({idBlock:{tagClass:3,tagNumber:1},optional:!0,value:[Pe.schema(t.maskGenAlgorithm||{})]}),new B({idBlock:{tagClass:3,tagNumber:2},optional:!0,value:[new D({name:t.saltLength||""})]}),new B({idBlock:{tagClass:3,tagNumber:3},optional:!0,value:[new D({name:t.trailerField||""})]})]})}fromSchema(e){const t=ve(e,e,je.schema({names:{hashAlgorithm:{names:{blockName:"hashAlgorithm"}},maskGenAlgorithm:{names:{blockName:"maskGenAlgorithm"}},saltLength:"saltLength",trailerField:"trailerField"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RSASSA_PSS_params");"hashAlgorithm"in t.result&&(this.hashAlgorithm=new Pe({schema:t.result.hashAlgorithm})),"maskGenAlgorithm"in t.result&&(this.maskGenAlgorithm=new Pe({schema:t.result.maskGenAlgorithm})),"saltLength"in t.result&&(this.saltLength=t.result.saltLength.valueBlock.valueDec),"trailerField"in t.result&&(this.trailerField=t.result.trailerField.valueBlock.valueDec)}toSchema(){const e=[];return this.hashAlgorithm.isEqual(je.defaultValues("hashAlgorithm"))||e.push(new B({idBlock:{tagClass:3,tagNumber:0},value:[this.hashAlgorithm.toSchema()]})),this.maskGenAlgorithm.isEqual(je.defaultValues("maskGenAlgorithm"))||e.push(new B({idBlock:{tagClass:3,tagNumber:1},value:[this.maskGenAlgorithm.toSchema()]})),this.saltLength!==je.defaultValues("saltLength")&&e.push(new B({idBlock:{tagClass:3,tagNumber:2},value:[new D({value:this.saltLength})]})),this.trailerField!==je.defaultValues("trailerField")&&e.push(new B({idBlock:{tagClass:3,tagNumber:3},value:[new D({value:this.trailerField})]})),new P({value:e})}toJSON(){const e={};return this.hashAlgorithm.isEqual(je.defaultValues("hashAlgorithm"))||(e.hashAlgorithm=this.hashAlgorithm.toJSON()),this.maskGenAlgorithm.isEqual(je.defaultValues("maskGenAlgorithm"))||(e.maskGenAlgorithm=this.maskGenAlgorithm.toJSON()),this.saltLength!==je.defaultValues("saltLength")&&(e.saltLength=this.saltLength),this.trailerField!==je.defaultValues("trailerField")&&(e.trailerField=this.trailerField),e}}class Ke{constructor(e={}){this.salt=pe(e,"salt",Ke.defaultValues("salt")),this.iterationCount=pe(e,"iterationCount",Ke.defaultValues("iterationCount")),"keyLength"in e&&(this.keyLength=pe(e,"keyLength",Ke.defaultValues("keyLength"))),"prf"in e&&(this.prf=pe(e,"prf",Ke.defaultValues("prf"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"salt":return{};case"iterationCount":return-1;case"keyLength":return 0;case"prf":return new Pe({algorithmId:"1.3.14.3.2.26",algorithmParams:new I});default:throw new Error(`Invalid member name for PBKDF2Params class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new he({value:[new O({name:t.saltPrimitive||""}),Pe.schema(t.saltConstructed||{})]}),new D({name:t.iterationCount||""}),new D({name:t.keyLength||"",optional:!0}),Pe.schema(t.prf||{names:{optional:!0}})]})}fromSchema(e){const t=ve(e,e,Ke.schema({names:{saltPrimitive:"salt",saltConstructed:{names:{blockName:"salt"}},iterationCount:"iterationCount",keyLength:"keyLength",prf:{names:{blockName:"prf",optional:!0}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PBKDF2_params");this.salt=t.result.salt,this.iterationCount=t.result.iterationCount.valueBlock.valueDec,"keyLength"in t.result&&(this.keyLength=t.result.keyLength.valueBlock.valueDec),"prf"in t.result&&(this.prf=new Pe({schema:t.result.prf}))}toSchema(){const e=[];return e.push(this.salt),e.push(new D({value:this.iterationCount})),"keyLength"in this&&Ke.defaultValues("keyLength")!==this.keyLength&&e.push(new D({value:this.keyLength})),"prf"in this&&!1===Ke.defaultValues("prf").isEqual(this.prf)&&e.push(this.prf.toSchema()),new P({value:e})}toJSON(){const e={salt:this.salt.toJSON(),iterationCount:this.iterationCount};return"keyLength"in this&&Ke.defaultValues("keyLength")!==this.keyLength&&(e.keyLength=this.keyLength),"prf"in this&&!1===Ke.defaultValues("prf").isEqual(this.prf)&&(e.prf=this.prf.toJSON()),e}}class Je{constructor(e={}){this.keyDerivationFunc=pe(e,"keyDerivationFunc",Je.defaultValues("keyDerivationFunc")),this.encryptionScheme=pe(e,"encryptionScheme",Je.defaultValues("encryptionScheme")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"keyDerivationFunc":case"encryptionScheme":return new Pe;default:throw new Error(`Invalid member name for PBES2Params class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[Pe.schema(t.keyDerivationFunc||{}),Pe.schema(t.encryptionScheme||{})]})}fromSchema(e){const t=ve(e,e,Je.schema({names:{keyDerivationFunc:{names:{blockName:"keyDerivationFunc"}},encryptionScheme:{names:{blockName:"encryptionScheme"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PBES2_params");this.keyDerivationFunc=new Pe({schema:t.result.keyDerivationFunc}),this.encryptionScheme=new Pe({schema:t.result.encryptionScheme})}toSchema(){return new P({value:[this.keyDerivationFunc.toSchema(),this.encryptionScheme.toSchema()]})}toJSON(){return{keyDerivationFunc:this.keyDerivationFunc.toJSON(),encryptionScheme:this.encryptionScheme.toJSON()}}}function Te(e,t,r,a,s,n){let i,o;const l=[];switch(t.toUpperCase()){case"SHA-1":i=20,o=64;break;case"SHA-256":i=32,o=64;break;case"SHA-384":i=48,o=128;break;case"SHA-512":i=64,o=128;break;default:throw new Error("Unsupported hashing algorithm")}const c=new Uint8Array(a),u=new ArrayBuffer(2*a.byteLength+2),h=new Uint8Array(u);for(let e=0;e<c.length;e++)h[2*e]=0,h[2*e+1]=c[e];h[h.length-2]=0,h[h.length-1]=0,a=u.slice(0);const m=new ArrayBuffer(o),f=new Uint8Array(m);for(let e=0;e<m.byteLength;e++)f[e]=3;const d=s.byteLength,g=o*Math.ceil(d/o),y=new ArrayBuffer(g),v=new Uint8Array(y),p=new Uint8Array(s);for(let e=0;e<g;e++)v[e]=p[e%d];const b=a.byteLength,w=o*Math.ceil(b/o),k=new ArrayBuffer(w),A=new Uint8Array(k),B=new Uint8Array(a);for(let e=0;e<w;e++)A[e]=B[e%b];const S=y.byteLength+k.byteLength;let C=new ArrayBuffer(S),N=new Uint8Array(C);N.set(v),N.set(A,v.length);const x=Math.ceil((r>>3)/i);let P=Promise.resolve(C);for(let r=0;r<=x;r++){P=P.then(e=>{const t=new ArrayBuffer(m.byteLength+e.byteLength),r=new Uint8Array(t);return r.set(f),r.set(N,f.length),t});for(let r=0;r<n;r++)P=P.then(r=>e.digest({name:t},new Uint8Array(r)));P=P.then(e=>{const t=new ArrayBuffer(o),r=new Uint8Array(t);for(let a=0;a<t.byteLength;a++)r[a]=e[a%e.length];const a=Math.ceil(d/o)+Math.ceil(b/o),s=[];let n=0,i=o;for(let e=0;e<a;e++){const e=Array.from(new Uint8Array(C.slice(n,n+i)));(n+=o)+o>C.byteLength&&(i=C.byteLength-n);let a=511;for(let s=t.byteLength-1;s>=0;s--)a>>=8,a+=r[s]+e[s],e[s]=255&a;s.push(...e)}return C=new ArrayBuffer(s.length),(N=new Uint8Array(C)).set(s),l.push(...new Uint8Array(e)),C})}return P=P.then(()=>{const e=new ArrayBuffer(r>>3);return new Uint8Array(e).set(new Uint8Array(l).slice(0,r>>3)),e})}let Fe={name:"none",crypto:null,subtle:null};!function(){if("undefined"!=typeof self&&"crypto"in self){let e="webcrypto";const t=self.crypto;let r=null;if("webkitSubtle"in self.crypto){try{r=self.crypto.webkitSubtle}catch(e){r=self.crypto.subtle}e="safari"}"subtle"in self.crypto&&(r=self.crypto.subtle),Fe={name:e,crypto:t,subtle:new class{constructor(e={}){this.crypto=pe(e,"crypto",{}),this.subtle=pe(e,"subtle",{}),this.name=pe(e,"name","")}importKey(e,t,r,a,s){let n={};switch(t instanceof Uint8Array&&(t=t.buffer),e.toLowerCase()){case"raw":return this.subtle.importKey("raw",t,r,a,s);case"spki":{const e=ye(t);if(-1===e.offset)return Promise.reject("Incorrect keyData");const i=new He;try{i.fromSchema(e.result)}catch(e){return Promise.reject("Incorrect keyData")}switch(r.name.toUpperCase()){case"RSA-PSS":switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="PS1";break;case"SHA-256":n.alg="PS256";break;case"SHA-384":n.alg="PS384";break;case"SHA-512":n.alg="PS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(s=["verify"],n.kty="RSA",n.ext=a,n.key_ops=s,"1.2.840.113549.1.1.1"!==i.algorithm.algorithmId)return Promise.reject(`Incorrect public key algorithm: ${i.algorithm.algorithmId}`);if("alg"in n==0)switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RS1";break;case"SHA-256":n.alg="RS256";break;case"SHA-384":n.alg="RS384";break;case"SHA-512":n.alg="RS512";break;default:return Promise.reject(`Incorrect public key algorithm: ${i.algorithm.algorithmId}`)}const e=i.toJSON();for(const t of Object.keys(e))n[t]=e[t]}break;case"ECDSA":s=["verify"];case"ECDH":{if(n={kty:"EC",ext:a,key_ops:s},"1.2.840.10045.2.1"!==i.algorithm.algorithmId)return Promise.reject(`Incorrect public key algorithm: ${i.algorithm.algorithmId}`);const e=i.toJSON();for(const t of Object.keys(e))n[t]=e[t]}break;case"RSA-OAEP":{if(n.kty="RSA",n.ext=a,n.key_ops=s,"safari"===this.name.toLowerCase())n.alg="RSA-OAEP";else switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RSA-OAEP-1";break;case"SHA-256":n.alg="RSA-OAEP-256";break;case"SHA-384":n.alg="RSA-OAEP-384";break;case"SHA-512":n.alg="RSA-OAEP-512";break;default:return Promise.reject(`Incorrect public key algorithm: ${i.algorithm.algorithmId}`)}const e=i.toJSON();for(const t of Object.keys(e))n[t]=e[t]}break;default:return Promise.reject(`Incorrect algorithm name: ${r.name.toUpperCase()}`)}}break;case"pkcs8":{const e=new De,i=ye(t);if(-1===i.offset)return Promise.reject("Incorrect keyData");try{e.fromSchema(i.result)}catch(e){return Promise.reject("Incorrect keyData")}switch(r.name.toUpperCase()){case"RSA-PSS":switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="PS1";break;case"SHA-256":n.alg="PS256";break;case"SHA-384":n.alg="PS384";break;case"SHA-512":n.alg="PS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(s=["sign"],n.kty="RSA",n.ext=a,n.key_ops=s,"1.2.840.113549.1.1.1"!==e.privateKeyAlgorithm.algorithmId)return Promise.reject(`Incorrect private key algorithm: ${e.privateKeyAlgorithm.algorithmId}`);if("alg"in n==0)switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RS1";break;case"SHA-256":n.alg="RS256";break;case"SHA-384":n.alg="RS384";break;case"SHA-512":n.alg="RS512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const t=e.toJSON();for(const e of Object.keys(t))n[e]=t[e]}break;case"ECDSA":s=["sign"];case"ECDH":{if(n={kty:"EC",ext:a,key_ops:s},"1.2.840.10045.2.1"!==e.privateKeyAlgorithm.algorithmId)return Promise.reject(`Incorrect algorithm: ${e.privateKeyAlgorithm.algorithmId}`);const t=e.toJSON();for(const e of Object.keys(t))n[e]=t[e]}break;case"RSA-OAEP":{if(n.kty="RSA",n.ext=a,n.key_ops=s,"safari"===this.name.toLowerCase())n.alg="RSA-OAEP";else switch(r.hash.name.toUpperCase()){case"SHA-1":n.alg="RSA-OAEP-1";break;case"SHA-256":n.alg="RSA-OAEP-256";break;case"SHA-384":n.alg="RSA-OAEP-384";break;case"SHA-512":n.alg="RSA-OAEP-512";break;default:return Promise.reject(`Incorrect hash algorithm: ${r.hash.name.toUpperCase()}`)}const t=e.toJSON();for(const e of Object.keys(t))n[e]=t[e]}break;default:return Promise.reject(`Incorrect algorithm name: ${r.name.toUpperCase()}`)}}break;case"jwk":n=t;break;default:return Promise.reject(`Incorrect format: ${e}`)}return"safari"===this.name.toLowerCase()?Promise.resolve().then(()=>this.subtle.importKey("jwk",Ne(JSON.stringify(n)),r,a,s)).then(e=>e,e=>this.subtle.importKey("jwk",n,r,a,s)):this.subtle.importKey("jwk",n,r,a,s)}exportKey(e,t){let r=this.subtle.exportKey("jwk",t);switch("safari"===this.name.toLowerCase()&&(r=r.then(e=>e instanceof ArrayBuffer?JSON.parse(Ce(e)):e)),e.toLowerCase()){case"raw":return this.subtle.exportKey("raw",t);case"spki":r=r.then(e=>{const t=new He;try{t.fromJSON(e)}catch(e){return Promise.reject("Incorrect key data")}return t.toSchema().toBER(!1)});break;case"pkcs8":r=r.then(e=>{const t=new De;try{t.fromJSON(e)}catch(e){return Promise.reject("Incorrect key data")}return t.toSchema().toBER(!1)});break;case"jwk":break;default:return Promise.reject(`Incorrect format: ${e}`)}return r}convert(e,t,r,a,s,n){switch(e.toLowerCase()){case"raw":switch(t.toLowerCase()){case"raw":return Promise.resolve(r);case"spki":return Promise.resolve().then(()=>this.importKey("raw",r,a,s,n)).then(e=>this.exportKey("spki",e));case"pkcs8":return Promise.resolve().then(()=>this.importKey("raw",r,a,s,n)).then(e=>this.exportKey("pkcs8",e));case"jwk":return Promise.resolve().then(()=>this.importKey("raw",r,a,s,n)).then(e=>this.exportKey("jwk",e));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"spki":switch(t.toLowerCase()){case"raw":return Promise.resolve().then(()=>this.importKey("spki",r,a,s,n)).then(e=>this.exportKey("raw",e));case"spki":return Promise.resolve(r);case"pkcs8":return Promise.reject("Impossible to convert between SPKI/PKCS8");case"jwk":return Promise.resolve().then(()=>this.importKey("spki",r,a,s,n)).then(e=>this.exportKey("jwk",e));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"pkcs8":switch(t.toLowerCase()){case"raw":return Promise.resolve().then(()=>this.importKey("pkcs8",r,a,s,n)).then(e=>this.exportKey("raw",e));case"spki":return Promise.reject("Impossible to convert between SPKI/PKCS8");case"pkcs8":return Promise.resolve(r);case"jwk":return Promise.resolve().then(()=>this.importKey("pkcs8",r,a,s,n)).then(e=>this.exportKey("jwk",e));default:return Promise.reject(`Incorrect outputFormat: ${t}`)}case"jwk":switch(t.toLowerCase()){case"raw":return Promise.resolve().then(()=>this.importKey("jwk",r,a,s,n)).then(e=>this.exportKey("raw",e));case"spki":return Promise.resolve().then(()=>this.importKey("jwk",r,a,s,n)).then(e=>this.exportKey("spki",e));case"pkcs8":return Promise.resolve().then(()=>this.importKey("jwk",r,a,s,n)).then(e=>this.exportKey("pkcs8",e));case"jwk":return Promise.resolve(r);default:return Promise.reject(`Incorrect outputFormat: ${t}`)}default:return Promise.reject(`Incorrect inputFormat: ${e}`)}}encrypt(...e){return this.subtle.encrypt(...e)}decrypt(...e){return this.subtle.decrypt(...e)}sign(...e){return this.subtle.sign(...e)}verify(...e){return this.subtle.verify(...e)}digest(...e){return this.subtle.digest(...e)}generateKey(...e){return this.subtle.generateKey(...e)}deriveKey(...e){return this.subtle.deriveKey(...e)}deriveBits(...e){return this.subtle.deriveBits(...e)}wrapKey(...e){return this.subtle.wrapKey(...e)}unwrapKey(...e){return this.subtle.unwrapKey(...e)}getRandomValues(e){if("getRandomValues"in this.crypto==0)throw new Error("No support for getRandomValues");return this.crypto.getRandomValues(e)}getAlgorithmByOID(e){switch(e){case"1.2.840.113549.1.1.1":case"1.2.840.113549.1.1.5":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-1"}};case"1.2.840.113549.1.1.11":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"1.2.840.113549.1.1.12":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-384"}};case"1.2.840.113549.1.1.13":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}};case"1.2.840.113549.1.1.10":return{name:"RSA-PSS"};case"1.2.840.113549.1.1.7":return{name:"RSA-OAEP"};case"1.2.840.10045.2.1":case"1.2.840.10045.4.1":return{name:"ECDSA",hash:{name:"SHA-1"}};case"1.2.840.10045.4.3.2":return{name:"ECDSA",hash:{name:"SHA-256"}};case"1.2.840.10045.4.3.3":return{name:"ECDSA",hash:{name:"SHA-384"}};case"1.2.840.10045.4.3.4":return{name:"ECDSA",hash:{name:"SHA-512"}};case"1.3.133.16.840.63.0.2":return{name:"ECDH",kdf:"SHA-1"};case"1.3.132.1.11.1":return{name:"ECDH",kdf:"SHA-256"};case"1.3.132.1.11.2":return{name:"ECDH",kdf:"SHA-384"};case"1.3.132.1.11.3":return{name:"ECDH",kdf:"SHA-512"};case"2.16.840.1.101.3.4.1.2":return{name:"AES-CBC",length:128};case"2.16.840.1.101.3.4.1.22":return{name:"AES-CBC",length:192};case"2.16.840.1.101.3.4.1.42":return{name:"AES-CBC",length:256};case"2.16.840.1.101.3.4.1.6":return{name:"AES-GCM",length:128};case"2.16.840.1.101.3.4.1.26":return{name:"AES-GCM",length:192};case"2.16.840.1.101.3.4.1.46":return{name:"AES-GCM",length:256};case"2.16.840.1.101.3.4.1.4":return{name:"AES-CFB",length:128};case"2.16.840.1.101.3.4.1.24":return{name:"AES-CFB",length:192};case"2.16.840.1.101.3.4.1.44":return{name:"AES-CFB",length:256};case"2.16.840.1.101.3.4.1.5":return{name:"AES-KW",length:128};case"2.16.840.1.101.3.4.1.25":return{name:"AES-KW",length:192};case"2.16.840.1.101.3.4.1.45":return{name:"AES-KW",length:256};case"1.2.840.113549.2.7":return{name:"HMAC",hash:{name:"SHA-1"}};case"1.2.840.113549.2.9":return{name:"HMAC",hash:{name:"SHA-256"}};case"1.2.840.113549.2.10":return{name:"HMAC",hash:{name:"SHA-384"}};case"1.2.840.113549.2.11":return{name:"HMAC",hash:{name:"SHA-512"}};case"1.2.840.113549.1.9.16.3.5":return{name:"DH"};case"1.3.14.3.2.26":return{name:"SHA-1"};case"2.16.840.1.101.3.4.2.1":return{name:"SHA-256"};case"2.16.840.1.101.3.4.2.2":return{name:"SHA-384"};case"2.16.840.1.101.3.4.2.3":return{name:"SHA-512"};case"1.2.840.113549.1.5.12":return{name:"PBKDF2"};case"1.2.840.10045.3.1.7":return{name:"P-256"};case"1.3.132.0.34":return{name:"P-384"};case"1.3.132.0.35":return{name:"P-521"}}return{}}getOIDByAlgorithm(e){let t="";switch(e.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.113549.1.1.5";break;case"SHA-256":t="1.2.840.113549.1.1.11";break;case"SHA-384":t="1.2.840.113549.1.1.12";break;case"SHA-512":t="1.2.840.113549.1.1.13"}break;case"RSA-PSS":t="1.2.840.113549.1.1.10";break;case"RSA-OAEP":t="1.2.840.113549.1.1.7";break;case"ECDSA":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.10045.4.1";break;case"SHA-256":t="1.2.840.10045.4.3.2";break;case"SHA-384":t="1.2.840.10045.4.3.3";break;case"SHA-512":t="1.2.840.10045.4.3.4"}break;case"ECDH":switch(e.kdf.toUpperCase()){case"SHA-1":t="1.3.133.16.840.63.0.2";break;case"SHA-256":t="1.3.132.1.11.1";break;case"SHA-384":t="1.3.132.1.11.2";break;case"SHA-512":t="1.3.132.1.11.3"}break;case"AES-CTR":break;case"AES-CBC":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.2";break;case 192:t="2.16.840.1.101.3.4.1.22";break;case 256:t="2.16.840.1.101.3.4.1.42"}break;case"AES-CMAC":break;case"AES-GCM":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.6";break;case 192:t="2.16.840.1.101.3.4.1.26";break;case 256:t="2.16.840.1.101.3.4.1.46"}break;case"AES-CFB":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.4";break;case 192:t="2.16.840.1.101.3.4.1.24";break;case 256:t="2.16.840.1.101.3.4.1.44"}break;case"AES-KW":switch(e.length){case 128:t="2.16.840.1.101.3.4.1.5";break;case 192:t="2.16.840.1.101.3.4.1.25";break;case 256:t="2.16.840.1.101.3.4.1.45"}break;case"HMAC":switch(e.hash.name.toUpperCase()){case"SHA-1":t="1.2.840.113549.2.7";break;case"SHA-256":t="1.2.840.113549.2.9";break;case"SHA-384":t="1.2.840.113549.2.10";break;case"SHA-512":t="1.2.840.113549.2.11"}break;case"DH":t="1.2.840.113549.1.9.16.3.5";break;case"SHA-1":t="1.3.14.3.2.26";break;case"SHA-256":t="2.16.840.1.101.3.4.2.1";break;case"SHA-384":t="2.16.840.1.101.3.4.2.2";break;case"SHA-512":t="2.16.840.1.101.3.4.2.3";break;case"CONCAT":case"HKDF":break;case"PBKDF2":t="1.2.840.113549.1.5.12";break;case"P-256":t="1.2.840.10045.3.1.7";break;case"P-384":t="1.3.132.0.34";break;case"P-521":t="1.3.132.0.35"}return t}getAlgorithmParameters(e,t){let r={algorithm:{},usages:[]};switch(e.toUpperCase()){case"RSASSA-PKCS1-V1_5":switch(t.toLowerCase()){case"generatekey":r={algorithm:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["sign","verify"]};break;case"verify":case"sign":case"importkey":r={algorithm:{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},usages:["verify"]};break;case"exportkey":default:return{algorithm:{name:"RSASSA-PKCS1-v1_5"},usages:[]}}break;case"RSA-PSS":switch(t.toLowerCase()){case"sign":case"verify":r={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"},saltLength:20},usages:["sign","verify"]};break;case"generatekey":r={algorithm:{name:"RSA-PSS",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-1"}},usages:["sign","verify"]};break;case"importkey":r={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"}},usages:["verify"]};break;case"exportkey":default:return{algorithm:{name:"RSA-PSS"},usages:[]}}break;case"RSA-OAEP":switch(t.toLowerCase()){case"encrypt":case"decrypt":r={algorithm:{name:"RSA-OAEP"},usages:["encrypt","decrypt"]};break;case"generatekey":r={algorithm:{name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"importkey":r={algorithm:{name:"RSA-OAEP",hash:{name:"SHA-256"}},usages:["encrypt"]};break;case"exportkey":default:return{algorithm:{name:"RSA-OAEP"},usages:[]}}break;case"ECDSA":switch(t.toLowerCase()){case"generatekey":r={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["sign","verify"]};break;case"importkey":r={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["verify"]};break;case"verify":case"sign":r={algorithm:{name:"ECDSA",hash:{name:"SHA-256"}},usages:["sign"]};break;default:return{algorithm:{name:"ECDSA"},usages:[]}}break;case"ECDH":switch(t.toLowerCase()){case"exportkey":case"importkey":case"generatekey":r={algorithm:{name:"ECDH",namedCurve:"P-256"},usages:["deriveKey","deriveBits"]};break;case"derivekey":case"derivebits":r={algorithm:{name:"ECDH",namedCurve:"P-256",public:[]},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"ECDH"},usages:[]}}break;case"AES-CTR":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-CTR",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-CTR",counter:new Uint8Array(16),length:10},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CTR"},usages:[]}}break;case"AES-CBC":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-CBC",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-CBC",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CBC"},usages:[]}}break;case"AES-GCM":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"AES-GCM",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":r={algorithm:{name:"AES-GCM",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-GCM"},usages:[]}}break;case"AES-KW":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":case"wrapkey":case"unwrapkey":r={algorithm:{name:"AES-KW",length:256},usages:["wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-KW"},usages:[]}}break;case"HMAC":switch(t.toLowerCase()){case"sign":case"verify":r={algorithm:{name:"HMAC"},usages:["sign","verify"]};break;case"importkey":case"exportkey":case"generatekey":r={algorithm:{name:"HMAC",length:32,hash:{name:"SHA-256"}},usages:["sign","verify"]};break;default:return{algorithm:{name:"HMAC"},usages:[]}}break;case"HKDF":switch(t.toLowerCase()){case"derivekey":r={algorithm:{name:"HKDF",hash:"SHA-256",salt:new Uint8Array([]),info:new Uint8Array([])},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"HKDF"},usages:[]}}break;case"PBKDF2":switch(t.toLowerCase()){case"derivekey":r={algorithm:{name:"PBKDF2",hash:{name:"SHA-256"},salt:new Uint8Array([]),iterations:1e4},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"PBKDF2"},usages:[]}}}return r}getHashAlgorithm(e){let t="";switch(e.algorithmId){case"1.2.840.10045.4.1":case"1.2.840.113549.1.1.5":t="SHA-1";break;case"1.2.840.10045.4.3.2":case"1.2.840.113549.1.1.11":t="SHA-256";break;case"1.2.840.10045.4.3.3":case"1.2.840.113549.1.1.12":t="SHA-384";break;case"1.2.840.10045.4.3.4":case"1.2.840.113549.1.1.13":t="SHA-512";break;case"1.2.840.113549.1.1.10":try{const r=new je({schema:e.algorithmParams});if("hashAlgorithm"in r){const e=this.getAlgorithmByOID(r.hashAlgorithm.algorithmId);if("name"in e==0)return"";t=e.name}else t="SHA-1"}catch(e){}}return t}encryptEncryptedContentInfo(e){if(e instanceof Object==0)return Promise.reject('Parameters must have type "Object"');if("password"in e==0)return Promise.reject('Absent mandatory parameter "password"');if("contentEncryptionAlgorithm"in e==0)return Promise.reject('Absent mandatory parameter "contentEncryptionAlgorithm"');if("hmacHashAlgorithm"in e==0)return Promise.reject('Absent mandatory parameter "hmacHashAlgorithm"');if("iterationCount"in e==0)return Promise.reject('Absent mandatory parameter "iterationCount"');if("contentToEncrypt"in e==0)return Promise.reject('Absent mandatory parameter "contentToEncrypt"');if("contentType"in e==0)return Promise.reject('Absent mandatory parameter "contentType"');const t=this.getOIDByAlgorithm(e.contentEncryptionAlgorithm);if(""===t)return Promise.reject('Wrong "contentEncryptionAlgorithm" value');const r=this.getOIDByAlgorithm({name:"PBKDF2"});if(""===r)return Promise.reject("Can not find OID for PBKDF2");const a=this.getOIDByAlgorithm({name:"HMAC",hash:{name:e.hmacHashAlgorithm}});if(""===a)return Promise.reject(`Incorrect value for "hmacHashAlgorithm": ${e.hmacHashAlgorithm}`);let s=Promise.resolve();const n=new ArrayBuffer(16),i=new Uint8Array(n);this.getRandomValues(i);const o=new ArrayBuffer(64),l=new Uint8Array(o);this.getRandomValues(l);const c=new Uint8Array(e.contentToEncrypt),u=new Ke({salt:new O({valueHex:o}),iterationCount:e.iterationCount,prf:new Pe({algorithmId:a,algorithmParams:new I})});return s=(s=(s=(s=s.then(()=>{const t=new Uint8Array(e.password);return this.importKey("raw",t,"PBKDF2",!1,["deriveKey"])},e=>Promise.reject(e))).then(t=>this.deriveKey({name:"PBKDF2",hash:{name:e.hmacHashAlgorithm},salt:l,iterations:e.iterationCount},t,e.contentEncryptionAlgorithm,!1,["encrypt"]),e=>Promise.reject(e))).then(t=>this.encrypt({name:e.contentEncryptionAlgorithm.name,iv:i},t,c),e=>Promise.reject(e))).then(a=>{const s=new Je({keyDerivationFunc:new Pe({algorithmId:r,algorithmParams:u.toSchema()}),encryptionScheme:new Pe({algorithmId:t,algorithmParams:new O({valueHex:n})})});return new Ve({contentType:e.contentType,contentEncryptionAlgorithm:new Pe({algorithmId:"1.2.840.113549.1.5.13",algorithmParams:s.toSchema()}),encryptedContent:new O({valueHex:a})})},e=>Promise.reject(e))}decryptEncryptedContentInfo(e){if(e instanceof Object==0)return Promise.reject('Parameters must have type "Object"');if("password"in e==0)return Promise.reject('Absent mandatory parameter "password"');if("encryptedContentInfo"in e==0)return Promise.reject('Absent mandatory parameter "encryptedContentInfo"');if("1.2.840.113549.1.5.13"!==e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId)return Promise.reject(`Unknown "contentEncryptionAlgorithm": ${e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId}`);let t,r=Promise.resolve();try{t=new Je({schema:e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams})}catch(e){return Promise.reject('Incorrectly encoded "pbes2Parameters"')}let a;try{a=new Ke({schema:t.keyDerivationFunc.algorithmParams})}catch(e){return Promise.reject('Incorrectly encoded "pbkdf2Params"')}const s=this.getAlgorithmByOID(t.encryptionScheme.algorithmId);if("name"in s==0)return Promise.reject(`Incorrect OID for "contentEncryptionAlgorithm": ${t.encryptionScheme.algorithmId}`);const n=t.encryptionScheme.algorithmParams.valueBlock.valueHex,i=new Uint8Array(n),o=a.salt.valueBlock.valueHex,l=new Uint8Array(o),c=a.iterationCount;let u="SHA-1";if("prf"in a){const e=this.getAlgorithmByOID(a.prf.algorithmId);if("name"in e==0)return Promise.reject("Incorrect OID for HMAC hash algorithm");u=e.hash.name}return r=(r=(r=r.then(()=>this.importKey("raw",e.password,"PBKDF2",!1,["deriveKey"]),e=>Promise.reject(e))).then(e=>this.deriveKey({name:"PBKDF2",hash:{name:u},salt:l,iterations:c},e,s,!1,["decrypt"]),e=>Promise.reject(e))).then(t=>{let r=new ArrayBuffer(0);if(!1===e.encryptedContentInfo.encryptedContent.idBlock.isConstructed)r=e.encryptedContentInfo.encryptedContent.valueBlock.valueHex;else for(const t of e.encryptedContentInfo.encryptedContent.valueBlock.value)r=be(r,t.valueBlock.valueHex);return this.decrypt({name:s.name,iv:i},t,r)},e=>Promise.reject(e))}stampDataWithPassword(e){if(e instanceof Object==0)return Promise.reject('Parameters must have type "Object"');if("password"in e==0)return Promise.reject('Absent mandatory parameter "password"');if("hashAlgorithm"in e==0)return Promise.reject('Absent mandatory parameter "hashAlgorithm"');if("salt"in e==0)return Promise.reject('Absent mandatory parameter "iterationCount"');if("iterationCount"in e==0)return Promise.reject('Absent mandatory parameter "salt"');if("contentToStamp"in e==0)return Promise.reject('Absent mandatory parameter "contentToStamp"');let t;switch(e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:return Promise.reject(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}let r=Promise.resolve();const a={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}};return r=(r=(r=r.then(()=>Te(this,e.hashAlgorithm,t,e.password,e.salt,e.iterationCount))).then(e=>this.importKey("raw",new Uint8Array(e),a,!1,["sign"]))).then(t=>this.sign(a,t,new Uint8Array(e.contentToStamp)),e=>Promise.reject(e))}verifyDataStampedWithPassword(e){if(e instanceof Object==0)return Promise.reject('Parameters must have type "Object"');if("password"in e==0)return Promise.reject('Absent mandatory parameter "password"');if("hashAlgorithm"in e==0)return Promise.reject('Absent mandatory parameter "hashAlgorithm"');if("salt"in e==0)return Promise.reject('Absent mandatory parameter "iterationCount"');if("iterationCount"in e==0)return Promise.reject('Absent mandatory parameter "salt"');if("contentToVerify"in e==0)return Promise.reject('Absent mandatory parameter "contentToVerify"');if("signatureToVerify"in e==0)return Promise.reject('Absent mandatory parameter "signatureToVerify"');let t;switch(e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:return Promise.reject(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}let r=Promise.resolve();const a={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}};return r=(r=(r=r.then(()=>Te(this,e.hashAlgorithm,t,e.password,e.salt,e.iterationCount))).then(e=>this.importKey("raw",new Uint8Array(e),a,!1,["verify"]))).then(t=>this.verify(a,t,new Uint8Array(e.signatureToVerify),new Uint8Array(e.contentToVerify)),e=>Promise.reject(e))}getSignatureParameters(e,t="SHA-1"){const r=this.getOIDByAlgorithm({name:t});if(""===r)return Promise.reject(`Unsupported hash algorithm: ${t}`);const a=new Pe,s=this.getAlgorithmParameters(e.algorithm.name,"sign");switch(s.algorithm.hash.name=t,e.algorithm.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":case"ECDSA":a.algorithmId=this.getOIDByAlgorithm(s.algorithm);break;case"RSA-PSS":{switch(t.toUpperCase()){case"SHA-256":s.algorithm.saltLength=32;break;case"SHA-384":s.algorithm.saltLength=48;break;case"SHA-512":s.algorithm.saltLength=64}const e={};if("SHA-1"!==t.toUpperCase()){const r=this.getOIDByAlgorithm({name:t});if(""===r)return Promise.reject(`Unsupported hash algorithm: ${t}`);e.hashAlgorithm=new Pe({algorithmId:r,algorithmParams:new I}),e.maskGenAlgorithm=new Pe({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:e.hashAlgorithm.toSchema()})}20!==s.algorithm.saltLength&&(e.saltLength=s.algorithm.saltLength);const r=new je(e);a.algorithmId="1.2.840.113549.1.1.10",a.algorithmParams=r.toSchema()}break;default:return Promise.reject(`Unsupported signature algorithm: ${e.algorithm.name}`)}return Promise.resolve().then(()=>({signatureAlgorithm:a,parameters:s}))}signWithPrivateKey(e,t,r){return this.sign(r.algorithm,t,new Uint8Array(e)).then(e=>("ECDSA"===r.algorithm.name&&(e=function(e){if(e.byteLength%2!=0)return new ArrayBuffer(0);const t=e.byteLength/2,r=new ArrayBuffer(t);new Uint8Array(r).set(new Uint8Array(e,0,t));const a=new D({valueHex:r}),s=new ArrayBuffer(t);new Uint8Array(s).set(new Uint8Array(e,t,t));const n=new D({valueHex:s});return new P({value:[a.convertToDER(),n.convertToDER()]}).toBER(!1)}(e)),e),e=>Promise.reject(`Signing error: ${e}`))}verifyWithPublicKey(e,t,r,a){let s=Promise.resolve();const n=this.getHashAlgorithm(a);return""===n?Promise.reject(`Unsupported signature algorithm: ${a.algorithmId}`):s=(s=s.then(()=>{const e=this.getAlgorithmByOID(a.algorithmId);if("name"in e==="")return Promise.reject(`Unsupported public key algorithm: ${a.algorithmId}`);const t=this.getAlgorithmParameters(e.name,"importkey");if("hash"in t.algorithm&&(t.algorithm.hash.name=n),"ECDSA"===e.name){let e=!1;if("algorithmParams"in r.algorithm==1&&"idBlock"in r.algorithm.algorithmParams&&1===r.algorithm.algorithmParams.idBlock.tagClass&&6===r.algorithm.algorithmParams.idBlock.tagNumber&&(e=!0),!1===e)return Promise.reject("Incorrect type for ECDSA public key parameters");const a=this.getAlgorithmByOID(r.algorithm.algorithmParams.valueBlock.toString());if("name"in a==0)return Promise.reject(`Unsupported named curve algorithm: ${r.algorithm.algorithmParams.valueBlock.toString()}`);t.algorithm.namedCurve=a.name}const s=r.toSchema().toBER(!1),i=new Uint8Array(s);return this.importKey("spki",i,t.algorithm,!0,t.usages)})).then(r=>{const s=this.getAlgorithmParameters(r.algorithm.name,"verify");"hash"in s.algorithm&&(s.algorithm.hash.name=n);let i=t.valueBlock.valueHex;if("ECDSA"===r.algorithm.name&&(i=_e(ye(i).result)),"RSA-PSS"===r.algorithm.name){let e;try{e=new je({schema:a.algorithmParams})}catch(e){return Promise.reject(e)}s.algorithm.saltLength="saltLength"in e?e.saltLength:20;let t="SHA-1";if("hashAlgorithm"in e){const r=this.getAlgorithmByOID(e.hashAlgorithm.algorithmId);if("name"in r==0)return Promise.reject(`Unrecognized hash algorithm: ${e.hashAlgorithm.algorithmId}`);t=r.name}s.algorithm.hash.name=t}return this.verify(s.algorithm,r,new Uint8Array(i),new Uint8Array(e))})}}({name:e,crypto:self.crypto,subtle:r})}}}();function $e(){if(null!==Fe.subtle)return Fe.subtle}function Me(e,t){return Fe.subtle.getAlgorithmParameters(e,t)}function qe(e){let t=!1,r="";const a=e.trim();for(let e=0;e<a.length;e++)32===a.charCodeAt(e)?!1===t&&(t=!0):(t&&(r+=" ",t=!1),r+=a[e]);return r.toLowerCase()}function _e(e){if(e instanceof P==!1)return new ArrayBuffer(0);if(2!==e.valueBlock.value.length)return new ArrayBuffer(0);if(e.valueBlock.value[0]instanceof D==!1)return new ArrayBuffer(0);if(e.valueBlock.value[1]instanceof D==!1)return new ArrayBuffer(0);const t=e.valueBlock.value[0].convertFromDER(),r=e.valueBlock.value[1].convertFromDER();switch(!0){case t.valueBlock.valueHex.byteLength<r.valueBlock.valueHex.byteLength:{if(r.valueBlock.valueHex.byteLength-t.valueBlock.valueHex.byteLength!=1)throw new Error("Incorrect DER integer decoding");const e=r.valueBlock.valueHex.byteLength,a=new Uint8Array(t.valueBlock.valueHex),s=new ArrayBuffer(e),n=new Uint8Array(s);return n.set(a,1),n[0]=0,be(s,r.valueBlock.valueHex)}case t.valueBlock.valueHex.byteLength>r.valueBlock.valueHex.byteLength:{if(t.valueBlock.valueHex.byteLength-r.valueBlock.valueHex.byteLength!=1)throw new Error("Incorrect DER integer decoding");const e=t.valueBlock.valueHex.byteLength,a=new Uint8Array(r.valueBlock.valueHex),s=new ArrayBuffer(e),n=new Uint8Array(s);return n.set(a,1),n[0]=0,be(t.valueBlock.valueHex,s)}default:if(t.valueBlock.valueHex.byteLength%2){const e=t.valueBlock.valueHex.byteLength+1,a=new Uint8Array(t.valueBlock.valueHex),s=new ArrayBuffer(e),n=new Uint8Array(s);n.set(a,1),n[0]=0;const i=new Uint8Array(r.valueBlock.valueHex),o=new ArrayBuffer(e),l=new Uint8Array(o);return l.set(i,1),l[0]=0,be(s,o)}}return be(t.valueBlock.valueHex,r.valueBlock.valueHex)}function We(e){return Fe.subtle.getAlgorithmByOID(e)}function Ge(e){return Fe.subtle.getHashAlgorithm(e)}class Qe{constructor(e={}){this.type=pe(e,"type",Qe.defaultValues("type")),this.value=pe(e,"value",Qe.defaultValues("value")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"type":return"";case"value":return{};default:throw new Error(`Invalid member name for AttributeTypeAndValue class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.type||""}),new me({name:t.value||""})]})}fromSchema(e){const t=ve(e,e,Qe.schema({names:{type:"type",value:"typeValue"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ATTR_TYPE_AND_VALUE");this.type=t.result.type.valueBlock.toString(),this.value=t.result.typeValue}toSchema(){return new P({value:[new J({value:this.type}),this.value]})}toJSON(){const e={type:this.type};return 0!==Object.keys(this.value).length?e.value=this.value.toJSON():e.value=this.value,e}isEqual(e){if(e instanceof Qe){if(this.type!==e.type)return!1;if(this.value instanceof F&&e.value instanceof F||this.value instanceof M&&e.value instanceof M||this.value instanceof _&&e.value instanceof _||this.value instanceof Q&&e.value instanceof Q||this.value instanceof z&&e.value instanceof z||this.value instanceof Z&&e.value instanceof Z||this.value instanceof Y&&e.value instanceof Y||this.value instanceof X&&e.value instanceof X||this.value instanceof ee&&e.value instanceof ee||this.value instanceof te&&e.value instanceof te||this.value instanceof re&&e.value instanceof re||this.value instanceof ae&&e.value instanceof ae){const t=qe(this.value.valueBlock.value),r=qe(e.value.valueBlock.value);if(0!==t.localeCompare(r))return!1}else if(!1===we(this.value.valueBeforeDecode,e.value.valueBeforeDecode))return!1;return!0}return e instanceof ArrayBuffer&&we(this.value.valueBeforeDecode,e)}}class ze{constructor(e={}){this.typesAndValues=pe(e,"typesAndValues",ze.defaultValues("typesAndValues")),this.valueBeforeDecode=pe(e,"valueBeforeDecode",ze.defaultValues("valueBeforeDecode")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"typesAndValues":return[];case"valueBeforeDecode":return new ArrayBuffer(0);default:throw new Error(`Invalid member name for RelativeDistinguishedNames class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"typesAndValues":return 0===t.length;case"valueBeforeDecode":return 0===t.byteLength;default:throw new Error(`Invalid member name for RelativeDistinguishedNames class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.repeatedSequence||"",value:new E({value:[new fe({name:t.repeatedSet||"",value:Qe.schema(t.typeAndValue||{})})]})})]})}fromSchema(e){const t=ve(e,e,ze.schema({names:{blockName:"RDN",repeatedSet:"typesAndValues"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for RDN");"typesAndValues"in t.result&&(this.typesAndValues=Array.from(t.result.typesAndValues,e=>new Qe({schema:e}))),this.valueBeforeDecode=t.result.RDN.valueBeforeDecode}toSchema(){if(0===this.valueBeforeDecode.byteLength)return new P({value:[new E({value:Array.from(this.typesAndValues,e=>e.toSchema())})]});const e=ye(this.valueBeforeDecode);return e.result}toJSON(){return{typesAndValues:Array.from(this.typesAndValues,e=>e.toJSON())}}isEqual(e){if(e instanceof ze){if(this.typesAndValues.length!==e.typesAndValues.length)return!1;for(const[t,r]of this.typesAndValues.entries())if(!1===r.isEqual(e.typesAndValues[t]))return!1;return!0}return e instanceof ArrayBuffer&&we(this.valueBeforeDecode,e)}}class Ze{constructor(e={}){this.type=pe(e,"type",Ze.defaultValues("type")),this.value=pe(e,"value",Ze.defaultValues("value")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"type":return 9;case"value":return{};default:throw new Error(`Invalid member name for GeneralName class: ${e}`)}}static compareWithDefault(e,t){switch(e){case"type":return t===Ze.defaultValues(e);case"value":return 0===Object.keys(t).length;default:throw new Error(`Invalid member name for GeneralName class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new he({value:[new B({idBlock:{tagClass:3,tagNumber:0},name:t.blockName||"",value:[new J,new B({idBlock:{tagClass:3,tagNumber:0},value:[new me]})]}),new k({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:1}}),new k({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:2}}),new B({idBlock:{tagClass:3,tagNumber:3},name:t.blockName||"",value:[function(e={},t=!1){const r=pe(e,"names",{});return new P({optional:t,value:[new B({optional:!0,idBlock:{tagClass:2,tagNumber:1},name:r.country_name||"",value:[new he({value:[new Q,new z]})]}),new B({optional:!0,idBlock:{tagClass:2,tagNumber:2},name:r.administration_domain_name||"",value:[new he({value:[new Q,new z]})]}),new k({optional:!0,idBlock:{tagClass:3,tagNumber:0},name:r.network_address||"",isHexOnly:!0}),new k({optional:!0,idBlock:{tagClass:3,tagNumber:1},name:r.terminal_identifier||"",isHexOnly:!0}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:2},name:r.private_domain_name||"",value:[new he({value:[new Q,new z]})]}),new k({optional:!0,idBlock:{tagClass:3,tagNumber:3},name:r.organization_name||"",isHexOnly:!0}),new k({optional:!0,name:r.numeric_user_identifier||"",idBlock:{tagClass:3,tagNumber:4},isHexOnly:!0}),new B({optional:!0,name:r.personal_name||"",idBlock:{tagClass:3,tagNumber:5},value:[new k({idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new k({optional:!0,idBlock:{tagClass:3,tagNumber:1},isHexOnly:!0}),new k({optional:!0,idBlock:{tagClass:3,tagNumber:2},isHexOnly:!0}),new k({optional:!0,idBlock:{tagClass:3,tagNumber:3},isHexOnly:!0})]}),new B({optional:!0,name:r.organizational_unit_names||"",idBlock:{tagClass:3,tagNumber:6},value:[new fe({value:new z})]})]})}(t.builtInStandardAttributes||{},!1),function(e=!1){return new P({optional:e,value:[new z,new z]})}(!0),function(e=!1){return new E({optional:e,value:[new k({optional:!0,idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new me]})]})}(!0)]}),new B({idBlock:{tagClass:3,tagNumber:4},name:t.blockName||"",value:[ze.schema(t.directoryName||{})]}),new B({idBlock:{tagClass:3,tagNumber:5},name:t.blockName||"",value:[new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new he({value:[new Z,new z,new _,new F,new M]})]}),new B({idBlock:{tagClass:3,tagNumber:1},value:[new he({value:[new Z,new z,new _,new F,new M]})]})]}),new k({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:6}}),new k({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:7}}),new k({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:8}})]})}fromSchema(e){const t=ve(e,e,Ze.schema({names:{blockName:"blockName",otherName:"otherName",rfc822Name:"rfc822Name",dNSName:"dNSName",x400Address:"x400Address",directoryName:{names:{blockName:"directoryName"}},ediPartyName:"ediPartyName",uniformResourceIdentifier:"uniformResourceIdentifier",iPAddress:"iPAddress",registeredID:"registeredID"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GENERAL_NAME");switch(this.type=t.result.blockName.idBlock.tagNumber,this.type){case 0:this.value=t.result.blockName;break;case 1:case 2:case 6:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=22;const r=e.toBER(!1);this.value=ye(r).result.valueBlock.value}break;case 3:this.value=t.result.blockName;break;case 4:this.value=new ze({schema:t.result.directoryName});break;case 5:this.value=t.result.ediPartyName;break;case 7:this.value=new O({valueHex:t.result.blockName.valueBlock.valueHex});break;case 8:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=6;const r=e.toBER(!1);this.value=ye(r).result.valueBlock.toString()}}}toSchema(){switch(this.type){case 0:case 3:case 5:return new B({idBlock:{tagClass:3,tagNumber:this.type},value:[this.value]});case 1:case 2:case 6:{const e=new X({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 4:return new B({idBlock:{tagClass:3,tagNumber:4},value:[this.value.toSchema()]});case 7:{const e=this.value;return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 8:{const e=new J({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}default:return Ze.schema()}}toJSON(){const e={type:this.type};return"string"==typeof this.value?e.value=this.value:e.value=this.value.toJSON(),e}}class Ye{constructor(e={}){this.accessMethod=pe(e,"accessMethod",Ye.defaultValues("accessMethod")),this.accessLocation=pe(e,"accessLocation",Ye.defaultValues("accessLocation")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"accessMethod":return"";case"accessLocation":return new Ze;default:throw new Error(`Invalid member name for AccessDescription class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.accessMethod||""}),Ze.schema(t.accessLocation||{})]})}fromSchema(e){const t=ve(e,e,Ye.schema({names:{accessMethod:"accessMethod",accessLocation:{names:{blockName:"accessLocation"}}}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AccessDescription");this.accessMethod=t.result.accessMethod.valueBlock.toString(),this.accessLocation=new Ze({schema:t.result.accessLocation})}toSchema(){return new P({value:[new J({value:this.accessMethod}),this.accessLocation.toSchema()]})}toJSON(){return{accessMethod:this.accessMethod,accessLocation:this.accessLocation.toJSON()}}}class Xe{constructor(e={}){this.altNames=pe(e,"altNames",Xe.defaultValues("altNames")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"altNames":return[];default:throw new Error(`Invalid member name for AltName class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.altNames||"",value:Ze.schema()})]})}fromSchema(e){const t=ve(e,e,Xe.schema({names:{altNames:"altNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AltName");"altNames"in t.result&&(this.altNames=Array.from(t.result.altNames,e=>new Ze({schema:e})))}toSchema(){return new P({value:Array.from(this.altNames,e=>e.toSchema())})}toJSON(){return{altNames:Array.from(this.altNames,e=>e.toJSON())}}}class et{constructor(e={}){this.attributes=pe(e,"attributes",et.defaultValues("attributes")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"attributes":return[];default:throw new Error(`Invalid member name for SubjectDirectoryAttributes class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.attributes||"",value:Oe.schema()})]})}fromSchema(e){const t=ve(e,e,et.schema({names:{attributes:"attributes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for SubjectDirectoryAttributes");this.attributes=Array.from(t.result.attributes,e=>new Oe({schema:e}))}toSchema(){return new P({value:Array.from(this.attributes,e=>e.toSchema())})}toJSON(){return{attributes:Array.from(this.attributes,e=>e.toJSON())}}}class tt{constructor(e={}){"notBefore"in e&&(this.notBefore=pe(e,"notBefore",tt.defaultValues("notBefore"))),"notAfter"in e&&(this.notAfter=pe(e,"notAfter",tt.defaultValues("notAfter"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"notBefore":case"notAfter":return new Date;default:throw new Error(`Invalid member name for PrivateKeyUsagePeriod class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new k({name:t.notBefore||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new k({name:t.notAfter||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){const t=ve(e,e,tt.schema({names:{notBefore:"notBefore",notAfter:"notAfter"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PrivateKeyUsagePeriod");if("notBefore"in t.result){const e=new ne;e.fromBuffer(t.result.notBefore.valueBlock.valueHex),this.notBefore=e.toDate()}if("notAfter"in t.result){const e=new ne({valueHex:t.result.notAfter.valueBlock.valueHex});e.fromBuffer(t.result.notAfter.valueBlock.valueHex),this.notAfter=e.toDate()}}toSchema(){const e=[];return"notBefore"in this&&e.push(new k({idBlock:{tagClass:3,tagNumber:0},valueHex:new ne({valueDate:this.notBefore}).valueBlock.valueHex})),"notAfter"in this&&e.push(new k({idBlock:{tagClass:3,tagNumber:1},valueHex:new ne({valueDate:this.notAfter}).valueBlock.valueHex})),new P({value:e})}toJSON(){const e={};return"notBefore"in this&&(e.notBefore=this.notBefore),"notAfter"in this&&(e.notAfter=this.notAfter),e}}class rt{constructor(e={}){this.cA=pe(e,"cA",!1),"pathLenConstraint"in e&&(this.pathLenConstraint=pe(e,"pathLenConstraint",0)),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"cA":return!1;default:throw new Error(`Invalid member name for BasicConstraints class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new x({optional:!0,name:t.cA||""}),new D({optional:!0,name:t.pathLenConstraint||""})]})}fromSchema(e){const t=ve(e,e,rt.schema({names:{cA:"cA",pathLenConstraint:"pathLenConstraint"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for BasicConstraints");"cA"in t.result&&(this.cA=t.result.cA.valueBlock.value),"pathLenConstraint"in t.result&&(t.result.pathLenConstraint.valueBlock.isHexOnly?this.pathLenConstraint=t.result.pathLenConstraint:this.pathLenConstraint=t.result.pathLenConstraint.valueBlock.valueDec)}toSchema(){const e=[];return this.cA!==rt.defaultValues("cA")&&e.push(new x({value:this.cA})),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof D?e.push(this.pathLenConstraint):e.push(new D({value:this.pathLenConstraint}))),new P({value:e})}toJSON(){const e={};return this.cA!==rt.defaultValues("cA")&&(e.cA=this.cA),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof D?e.pathLenConstraint=this.pathLenConstraint.toJSON():e.pathLenConstraint=this.pathLenConstraint),e}}class at{constructor(e={}){"distributionPoint"in e&&(this.distributionPoint=pe(e,"distributionPoint",at.defaultValues("distributionPoint"))),this.onlyContainsUserCerts=pe(e,"onlyContainsUserCerts",at.defaultValues("onlyContainsUserCerts")),this.onlyContainsCACerts=pe(e,"onlyContainsCACerts",at.defaultValues("onlyContainsCACerts")),"onlySomeReasons"in e&&(this.onlySomeReasons=pe(e,"onlySomeReasons",at.defaultValues("onlySomeReasons"))),this.indirectCRL=pe(e,"indirectCRL",at.defaultValues("indirectCRL")),this.onlyContainsAttributeCerts=pe(e,"onlyContainsAttributeCerts",at.defaultValues("onlyContainsAttributeCerts")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"distributionPoint":return[];case"onlyContainsUserCerts":case"onlyContainsCACerts":return!1;case"onlySomeReasons":return 0;case"indirectCRL":case"onlyContainsAttributeCerts":return!1;default:throw new Error(`Invalid member name for IssuingDistributionPoint class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new he({value:[new B({name:t.distributionPoint||"",idBlock:{tagClass:3,tagNumber:0},value:[new fe({name:t.distributionPointNames||"",value:Ze.schema()})]}),new B({name:t.distributionPoint||"",idBlock:{tagClass:3,tagNumber:1},value:ze.schema().valueBlock.value})]})]}),new k({name:t.onlyContainsUserCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new k({name:t.onlyContainsCACerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}}),new k({name:t.onlySomeReasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:3}}),new k({name:t.indirectCRL||"",optional:!0,idBlock:{tagClass:3,tagNumber:4}}),new k({name:t.onlyContainsAttributeCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:5}})]})}fromSchema(e){const t=ve(e,e,at.schema({names:{distributionPoint:"distributionPoint",distributionPointNames:"distributionPointNames",onlyContainsUserCerts:"onlyContainsUserCerts",onlyContainsCACerts:"onlyContainsCACerts",onlySomeReasons:"onlySomeReasons",indirectCRL:"indirectCRL",onlyContainsAttributeCerts:"onlyContainsAttributeCerts"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for IssuingDistributionPoint");if("distributionPoint"in t.result)switch(!0){case 0===t.result.distributionPoint.idBlock.tagNumber:this.distributionPoint=Array.from(t.result.distributionPointNames,e=>new Ze({schema:e}));break;case 1===t.result.distributionPoint.idBlock.tagNumber:t.result.distributionPoint.idBlock.tagClass=1,t.result.distributionPoint.idBlock.tagNumber=16,this.distributionPoint=new ze({schema:t.result.distributionPoint});break;default:throw new Error("Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}")}if("onlyContainsUserCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsUserCerts.valueBlock.valueHex);this.onlyContainsUserCerts=0!==e[0]}if("onlyContainsCACerts"in t.result){const e=new Uint8Array(t.result.onlyContainsCACerts.valueBlock.valueHex);this.onlyContainsCACerts=0!==e[0]}if("onlySomeReasons"in t.result){const e=new Uint8Array(t.result.onlySomeReasons.valueBlock.valueHex);this.onlySomeReasons=e[0]}if("indirectCRL"in t.result){const e=new Uint8Array(t.result.indirectCRL.valueBlock.valueHex);this.indirectCRL=0!==e[0]}if("onlyContainsAttributeCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsAttributeCerts.valueBlock.valueHex);this.onlyContainsAttributeCerts=0!==e[0]}}toSchema(){const e=[];if("distributionPoint"in this){let t;this.distributionPoint instanceof Array?t=new B({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,e=>e.toSchema())}):((t=this.distributionPoint.toSchema()).idBlock.tagClass=3,t.idBlock.tagNumber=1),e.push(t)}if(this.onlyContainsUserCerts!==at.defaultValues("onlyContainsUserCerts")&&e.push(new k({idBlock:{tagClass:3,tagNumber:1},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsCACerts!==at.defaultValues("onlyContainsCACerts")&&e.push(new k({idBlock:{tagClass:3,tagNumber:2},valueHex:new Uint8Array([255]).buffer})),"onlySomeReasons"in this){const t=new ArrayBuffer(1);new Uint8Array(t)[0]=this.onlySomeReasons,e.push(new k({idBlock:{tagClass:3,tagNumber:3},valueHex:t}))}return this.indirectCRL!==at.defaultValues("indirectCRL")&&e.push(new k({idBlock:{tagClass:3,tagNumber:4},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsAttributeCerts!==at.defaultValues("onlyContainsAttributeCerts")&&e.push(new k({idBlock:{tagClass:3,tagNumber:5},valueHex:new Uint8Array([255]).buffer})),new P({value:e})}toJSON(){const e={};return"distributionPoint"in this&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,e=>e.toJSON()):e.distributionPoint=this.distributionPoint.toJSON()),this.onlyContainsUserCerts!==at.defaultValues("onlyContainsUserCerts")&&(e.onlyContainsUserCerts=this.onlyContainsUserCerts),this.onlyContainsCACerts!==at.defaultValues("onlyContainsCACerts")&&(e.onlyContainsCACerts=this.onlyContainsCACerts),"onlySomeReasons"in this&&(e.onlySomeReasons=this.onlySomeReasons),this.indirectCRL!==at.defaultValues("indirectCRL")&&(e.indirectCRL=this.indirectCRL),this.onlyContainsAttributeCerts!==at.defaultValues("onlyContainsAttributeCerts")&&(e.onlyContainsAttributeCerts=this.onlyContainsAttributeCerts),e}}class st{constructor(e={}){this.names=pe(e,"names",st.defaultValues("names")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"names":return[];default:throw new Error(`Invalid member name for GeneralNames class: ${e}`)}}static schema(e={},t=!1){const r=pe(e,"names",{});return new P({optional:t,name:r.blockName||"",value:[new fe({name:r.generalNames||"",value:Ze.schema()})]})}fromSchema(e){const t=ve(e,e,st.schema({names:{blockName:"names",generalNames:"generalNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for GeneralNames");this.names=Array.from(t.result.generalNames,e=>new Ze({schema:e}))}toSchema(){return new P({value:Array.from(this.names,e=>e.toSchema())})}toJSON(){return{names:Array.from(this.names,e=>e.toJSON())}}}class nt{constructor(e={}){this.base=pe(e,"base",nt.defaultValues("base")),this.minimum=pe(e,"minimum",nt.defaultValues("minimum")),"maximum"in e&&(this.maximum=pe(e,"maximum",nt.defaultValues("maximum"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"base":return new Ze;case"minimum":case"maximum":return 0;default:throw new Error(`Invalid member name for GeneralSubtree class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[Ze.schema(t.base||{}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new D({name:t.minimum||""})]}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new D({name:t.maximum||""})]})]})}fromSchema(e){const t=ve(e,e,nt.schema({names:{base:{names:{blockName:"base"}},minimum:"minimum",maximum:"maximum"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ");this.base=new Ze({schema:t.result.base}),"minimum"in t.result&&(t.result.minimum.valueBlock.isHexOnly?this.minimum=t.result.minimum:this.minimum=t.result.minimum.valueBlock.valueDec),"maximum"in t.result&&(t.result.maximum.valueBlock.isHexOnly?this.maximum=t.result.maximum:this.maximum=t.result.maximum.valueBlock.valueDec)}toSchema(){const e=[];if(e.push(this.base.toSchema()),0!==this.minimum){let t=0;t=this.minimum instanceof D?this.minimum:new D({value:this.minimum}),e.push(new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[t]}))}if("maximum"in this){let t=0;t=this.maximum instanceof D?this.maximum:new D({value:this.maximum}),e.push(new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[t]}))}return new P({value:e})}toJSON(){const e={base:this.base.toJSON()};return 0!==this.minimum&&("number"==typeof this.minimum?e.minimum=this.minimum:e.minimum=this.minimum.toJSON()),"maximum"in this&&("number"==typeof this.maximum?e.maximum=this.maximum:e.maximum=this.maximum.toJSON()),e}}class it{constructor(e={}){"permittedSubtrees"in e&&(this.permittedSubtrees=pe(e,"permittedSubtrees",it.defaultValues("permittedSubtrees"))),"excludedSubtrees"in e&&(this.excludedSubtrees=pe(e,"excludedSubtrees",it.defaultValues("excludedSubtrees"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"permittedSubtrees":case"excludedSubtrees":return[];default:throw new Error(`Invalid member name for NameConstraints class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new fe({name:t.permittedSubtrees||"",value:nt.schema()})]}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new fe({name:t.excludedSubtrees||"",value:nt.schema()})]})]})}fromSchema(e){const t=ve(e,e,it.schema({names:{permittedSubtrees:"permittedSubtrees",excludedSubtrees:"excludedSubtrees"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for NameConstraints");"permittedSubtrees"in t.result&&(this.permittedSubtrees=Array.from(t.result.permittedSubtrees,e=>new nt({schema:e}))),"excludedSubtrees"in t.result&&(this.excludedSubtrees=Array.from(t.result.excludedSubtrees,e=>new nt({schema:e})))}toSchema(){const e=[];return"permittedSubtrees"in this&&e.push(new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new P({value:Array.from(this.permittedSubtrees,e=>e.toSchema())})]})),"excludedSubtrees"in this&&e.push(new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new P({value:Array.from(this.excludedSubtrees,e=>e.toSchema())})]})),new P({value:e})}toJSON(){const e={};return"permittedSubtrees"in this&&(e.permittedSubtrees=Array.from(this.permittedSubtrees,e=>e.toJSON())),"excludedSubtrees"in this&&(e.excludedSubtrees=Array.from(this.excludedSubtrees,e=>e.toJSON())),e}}class ot{constructor(e={}){"distributionPoint"in e&&(this.distributionPoint=pe(e,"distributionPoint",ot.defaultValues("distributionPoint"))),"reasons"in e&&(this.reasons=pe(e,"reasons",ot.defaultValues("reasons"))),"cRLIssuer"in e&&(this.cRLIssuer=pe(e,"cRLIssuer",ot.defaultValues("cRLIssuer"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"distributionPoint":return[];case"reasons":return new R;case"cRLIssuer":return[];default:throw new Error(`Invalid member name for DistributionPoint class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new he({value:[new B({name:t.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new fe({name:t.distributionPointNames||"",value:Ze.schema()})]}),new B({name:t.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:1},value:ze.schema().valueBlock.value})]})]}),new k({name:t.reasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new B({name:t.cRLIssuer||"",optional:!0,idBlock:{tagClass:3,tagNumber:2},value:[new fe({name:t.cRLIssuerNames||"",value:Ze.schema()})]})]})}fromSchema(e){const t=ve(e,e,ot.schema({names:{distributionPoint:"distributionPoint",distributionPointNames:"distributionPointNames",reasons:"reasons",cRLIssuer:"cRLIssuer",cRLIssuerNames:"cRLIssuerNames"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for DistributionPoint");"distributionPoint"in t.result&&(0===t.result.distributionPoint.idBlock.tagNumber&&(this.distributionPoint=Array.from(t.result.distributionPointNames,e=>new Ze({schema:e}))),1===t.result.distributionPoint.idBlock.tagNumber&&(t.result.distributionPoint.idBlock.tagClass=1,t.result.distributionPoint.idBlock.tagNumber=16,this.distributionPoint=new ze({schema:t.result.distributionPoint}))),"reasons"in t.result&&(this.reasons=new R({valueHex:t.result.reasons.valueBlock.valueHex})),"cRLIssuer"in t.result&&(this.cRLIssuer=Array.from(t.result.cRLIssuerNames,e=>new Ze({schema:e})))}toSchema(){const e=[];if("distributionPoint"in this){let t;t=this.distributionPoint instanceof Array?new B({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,e=>e.toSchema())}):new B({idBlock:{tagClass:3,tagNumber:1},value:[this.distributionPoint.toSchema()]}),e.push(new B({idBlock:{tagClass:3,tagNumber:0},value:[t]}))}return"reasons"in this&&e.push(new k({idBlock:{tagClass:3,tagNumber:1},valueHex:this.reasons.valueBlock.valueHex})),"cRLIssuer"in this&&e.push(new B({idBlock:{tagClass:3,tagNumber:2},value:Array.from(this.cRLIssuer,e=>e.toSchema())})),new P({value:e})}toJSON(){const e={};return"distributionPoint"in this&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,e=>e.toJSON()):e.distributionPoint=this.distributionPoint.toJSON()),"reasons"in this&&(e.reasons=this.reasons.toJSON()),"cRLIssuer"in this&&(e.cRLIssuer=Array.from(this.cRLIssuer,e=>e.toJSON())),e}}class lt{constructor(e={}){this.distributionPoints=pe(e,"distributionPoints",lt.defaultValues("distributionPoints")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"distributionPoints":return[];default:throw new Error(`Invalid member name for CRLDistributionPoints class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.distributionPoints||"",value:ot.schema()})]})}fromSchema(e){const t=ve(e,e,lt.schema({names:{distributionPoints:"distributionPoints"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CRLDistributionPoints");this.distributionPoints=Array.from(t.result.distributionPoints,e=>new ot({schema:e}))}toSchema(){return new P({value:Array.from(this.distributionPoints,e=>e.toSchema())})}toJSON(){return{distributionPoints:Array.from(this.distributionPoints,e=>e.toJSON())}}}class ct{constructor(e={}){this.policyQualifierId=pe(e,"policyQualifierId",ct.defaultValues("policyQualifierId")),this.qualifier=pe(e,"qualifier",ct.defaultValues("qualifier")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"policyQualifierId":return"";case"qualifier":return new me;default:throw new Error(`Invalid member name for PolicyQualifierInfo class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.policyQualifierId||""}),new me({name:t.qualifier||""})]})}fromSchema(e){const t=ve(e,e,ct.schema({names:{policyQualifierId:"policyQualifierId",qualifier:"qualifier"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyQualifierInfo");this.policyQualifierId=t.result.policyQualifierId.valueBlock.toString(),this.qualifier=t.result.qualifier}toSchema(){return new P({value:[new J({value:this.policyQualifierId}),this.qualifier]})}toJSON(){return{policyQualifierId:this.policyQualifierId,qualifier:this.qualifier.toJSON()}}}class ut{constructor(e={}){this.policyIdentifier=pe(e,"policyIdentifier",ut.defaultValues("policyIdentifier")),"policyQualifiers"in e&&(this.policyQualifiers=pe(e,"policyQualifiers",ut.defaultValues("policyQualifiers"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"policyIdentifier":return"";case"policyQualifiers":return[];default:throw new Error(`Invalid member name for PolicyInformation class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.policyIdentifier||""}),new P({optional:!0,value:[new fe({name:t.policyQualifiers||"",value:ct.schema()})]})]})}fromSchema(e){const t=ve(e,e,ut.schema({names:{policyIdentifier:"policyIdentifier",policyQualifiers:"policyQualifiers"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyInformation");this.policyIdentifier=t.result.policyIdentifier.valueBlock.toString(),"policyQualifiers"in t.result&&(this.policyQualifiers=Array.from(t.result.policyQualifiers,e=>new ct({schema:e})))}toSchema(){const e=[];return e.push(new J({value:this.policyIdentifier})),"policyQualifiers"in this&&e.push(new P({value:Array.from(this.policyQualifiers,e=>e.toSchema())})),new P({value:e})}toJSON(){const e={policyIdentifier:this.policyIdentifier};return"policyQualifiers"in this&&(e.policyQualifiers=Array.from(this.policyQualifiers,e=>e.toJSON())),e}}class ht{constructor(e={}){this.certificatePolicies=pe(e,"certificatePolicies",ht.defaultValues("certificatePolicies")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"certificatePolicies":return[];default:throw new Error(`Invalid member name for CertificatePolicies class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.certificatePolicies||"",value:ut.schema()})]})}fromSchema(e){const t=ve(e,e,ht.schema({names:{certificatePolicies:"certificatePolicies"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for CertificatePolicies");this.certificatePolicies=Array.from(t.result.certificatePolicies,e=>new ut({schema:e}))}toSchema(){return new P({value:Array.from(this.certificatePolicies,e=>e.toSchema())})}toJSON(){return{certificatePolicies:Array.from(this.certificatePolicies,e=>e.toJSON())}}}class mt{constructor(e={}){this.issuerDomainPolicy=pe(e,"issuerDomainPolicy",mt.defaultValues("issuerDomainPolicy")),this.subjectDomainPolicy=pe(e,"subjectDomainPolicy",mt.defaultValues("subjectDomainPolicy")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"issuerDomainPolicy":case"subjectDomainPolicy":return"";default:throw new Error(`Invalid member name for PolicyMapping class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.issuerDomainPolicy||""}),new J({name:t.subjectDomainPolicy||""})]})}fromSchema(e){const t=ve(e,e,mt.schema({names:{issuerDomainPolicy:"issuerDomainPolicy",subjectDomainPolicy:"subjectDomainPolicy"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyMapping");this.issuerDomainPolicy=t.result.issuerDomainPolicy.valueBlock.toString(),this.subjectDomainPolicy=t.result.subjectDomainPolicy.valueBlock.toString()}toSchema(){return new P({value:[new J({value:this.issuerDomainPolicy}),new J({value:this.subjectDomainPolicy})]})}toJSON(){return{issuerDomainPolicy:this.issuerDomainPolicy,subjectDomainPolicy:this.subjectDomainPolicy}}}class ft{constructor(e={}){this.mappings=pe(e,"mappings",ft.defaultValues("mappings")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"mappings":return[];default:throw new Error(`Invalid member name for PolicyMappings class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.mappings||"",value:mt.schema()})]})}fromSchema(e){const t=ve(e,e,ft.schema({names:{mappings:"mappings"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyMappings");this.mappings=Array.from(t.result.mappings,e=>new mt({schema:e}))}toSchema(){return new P({value:Array.from(this.mappings,e=>e.toSchema())})}toJSON(){return{mappings:Array.from(this.mappings,e=>e.toJSON())}}}class dt{constructor(e={}){"keyIdentifier"in e&&(this.keyIdentifier=pe(e,"keyIdentifier",dt.defaultValues("keyIdentifier"))),"authorityCertIssuer"in e&&(this.authorityCertIssuer=pe(e,"authorityCertIssuer",dt.defaultValues("authorityCertIssuer"))),"authorityCertSerialNumber"in e&&(this.authorityCertSerialNumber=pe(e,"authorityCertSerialNumber",dt.defaultValues("authorityCertSerialNumber"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"keyIdentifier":return new O;case"authorityCertIssuer":return[];case"authorityCertSerialNumber":return new D;default:throw new Error(`Invalid member name for AuthorityKeyIdentifier class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new k({name:t.keyIdentifier||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new fe({name:t.authorityCertIssuer||"",value:Ze.schema()})]}),new k({name:t.authorityCertSerialNumber||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}})]})}fromSchema(e){const t=ve(e,e,dt.schema({names:{keyIdentifier:"keyIdentifier",authorityCertIssuer:"authorityCertIssuer",authorityCertSerialNumber:"authorityCertSerialNumber"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for AuthorityKeyIdentifier");"keyIdentifier"in t.result&&(this.keyIdentifier=new O({valueHex:t.result.keyIdentifier.valueBlock.valueHex})),"authorityCertIssuer"in t.result&&(this.authorityCertIssuer=Array.from(t.result.authorityCertIssuer,e=>new Ze({schema:e}))),"authorityCertSerialNumber"in t.result&&(this.authorityCertSerialNumber=new D({valueHex:t.result.authorityCertSerialNumber.valueBlock.valueHex}))}toSchema(){const e=[];if("keyIdentifier"in this){const t=this.keyIdentifier;t.idBlock.tagClass=3,t.idBlock.tagNumber=0,e.push(t)}if("authorityCertIssuer"in this&&e.push(new B({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.authorityCertIssuer,e=>e.toSchema())})),"authorityCertSerialNumber"in this){const t=this.authorityCertSerialNumber;t.idBlock.tagClass=3,t.idBlock.tagNumber=2,e.push(t)}return new P({value:e})}toJSON(){const e={};return"keyIdentifier"in this&&(e.keyIdentifier=this.keyIdentifier.toJSON()),"authorityCertIssuer"in this&&(e.authorityCertIssuer=Array.from(this.authorityCertIssuer,e=>e.toJSON())),"authorityCertSerialNumber"in this&&(e.authorityCertSerialNumber=this.authorityCertSerialNumber.toJSON()),e}}class gt{constructor(e={}){"requireExplicitPolicy"in e&&(this.requireExplicitPolicy=pe(e,"requireExplicitPolicy",gt.defaultValues("requireExplicitPolicy"))),"inhibitPolicyMapping"in e&&(this.inhibitPolicyMapping=pe(e,"inhibitPolicyMapping",gt.defaultValues("inhibitPolicyMapping"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"requireExplicitPolicy":case"inhibitPolicyMapping":return 0;default:throw new Error(`Invalid member name for PolicyConstraints class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new k({name:t.requireExplicitPolicy||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new k({name:t.inhibitPolicyMapping||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){const t=ve(e,e,gt.schema({names:{requireExplicitPolicy:"requireExplicitPolicy",inhibitPolicyMapping:"inhibitPolicyMapping"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PolicyConstraints");if("requireExplicitPolicy"in t.result){const e=t.result.requireExplicitPolicy;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const r=ye(e.toBER(!1));this.requireExplicitPolicy=r.result.valueBlock.valueDec}if("inhibitPolicyMapping"in t.result){const e=t.result.inhibitPolicyMapping;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const r=ye(e.toBER(!1));this.inhibitPolicyMapping=r.result.valueBlock.valueDec}}toSchema(){const e=[];if("requireExplicitPolicy"in this){const t=new D({value:this.requireExplicitPolicy});t.idBlock.tagClass=3,t.idBlock.tagNumber=0,e.push(t)}if("inhibitPolicyMapping"in this){const t=new D({value:this.inhibitPolicyMapping});t.idBlock.tagClass=3,t.idBlock.tagNumber=1,e.push(t)}return new P({value:e})}toJSON(){const e={};return"requireExplicitPolicy"in this&&(e.requireExplicitPolicy=this.requireExplicitPolicy),"inhibitPolicyMapping"in this&&(e.inhibitPolicyMapping=this.inhibitPolicyMapping),e}}class yt{constructor(e={}){this.keyPurposes=pe(e,"keyPurposes",yt.defaultValues("keyPurposes")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"keyPurposes":return[];default:throw new Error(`Invalid member name for ExtKeyUsage class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.keyPurposes||"",value:new J})]})}fromSchema(e){const t=ve(e,e,yt.schema({names:{keyPurposes:"keyPurposes"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for ExtKeyUsage");this.keyPurposes=Array.from(t.result.keyPurposes,e=>e.valueBlock.toString())}toSchema(){return new P({value:Array.from(this.keyPurposes,e=>new J({value:e}))})}toJSON(){return{keyPurposes:Array.from(this.keyPurposes)}}}class vt{constructor(e={}){this.accessDescriptions=pe(e,"accessDescriptions",vt.defaultValues("accessDescriptions")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"accessDescriptions":return[];default:throw new Error(`Invalid member name for InfoAccess class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new fe({name:t.accessDescriptions||"",value:Ye.schema()})]})}fromSchema(e){const t=ve(e,e,vt.schema({names:{accessDescriptions:"accessDescriptions"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for InfoAccess");this.accessDescriptions=Array.from(t.result.accessDescriptions,e=>new Ye({schema:e}))}toSchema(){return new P({value:Array.from(this.accessDescriptions,e=>e.toSchema())})}toJSON(){return{accessDescriptions:Array.from(this.accessDescriptions,e=>e.toJSON())}}}class pt{constructor(e={}){this.extnID=pe(e,"extnID",pt.defaultValues("extnID")),this.critical=pe(e,"critical",pt.defaultValues("critical")),this.extnValue="extnValue"in e?new O({valueHex:e.extnValue}):pt.defaultValues("extnValue"),"parsedValue"in e&&(this.parsedValue=pe(e,"parsedValue",pt.defaultValues("parsedValue"))),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"extnID":return"";case"critical":return!1;case"extnValue":return new O;case"parsedValue":return{};default:throw new Error(`Invalid member name for Extension class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({name:t.blockName||"",value:[new J({name:t.extnID||""}),new x({name:t.critical||"",optional:!0}),new O({name:t.extnValue||""})]})}fromSchema(e){let t=ve(e,e,pt.schema({names:{extnID:"extnID",critical:"critical",extnValue:"extnValue"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for EXTENSION");if(this.extnID=t.result.extnID.valueBlock.toString(),"critical"in t.result&&(this.critical=t.result.critical.valueBlock.value),this.extnValue=t.result.extnValue,-1!==(t=ye(this.extnValue.valueBlock.valueHex)).offset)switch(this.extnID){case"2.5.29.9":this.parsedValue=new et({schema:t.result});break;case"2.5.29.14":case"2.5.29.15":this.parsedValue=t.result;break;case"2.5.29.16":this.parsedValue=new tt({schema:t.result});break;case"2.5.29.17":case"2.5.29.18":this.parsedValue=new Xe({schema:t.result});break;case"2.5.29.19":this.parsedValue=new rt({schema:t.result});break;case"2.5.29.20":case"2.5.29.27":case"2.5.29.21":case"2.5.29.24":this.parsedValue=t.result;break;case"2.5.29.28":this.parsedValue=new at({schema:t.result});break;case"2.5.29.29":this.parsedValue=new st({schema:t.result});break;case"2.5.29.30":this.parsedValue=new it({schema:t.result});break;case"2.5.29.31":case"2.5.29.46":this.parsedValue=new lt({schema:t.result});break;case"2.5.29.32":this.parsedValue=new ht({schema:t.result});break;case"2.5.29.33":this.parsedValue=new ft({schema:t.result});break;case"2.5.29.35":this.parsedValue=new dt({schema:t.result});break;case"2.5.29.36":this.parsedValue=new gt({schema:t.result});break;case"2.5.29.37":this.parsedValue=new yt({schema:t.result});break;case"2.5.29.54":this.parsedValue=t.result;break;case"1.3.6.1.5.5.7.1.1":case"1.3.6.1.5.5.7.1.11":this.parsedValue=new vt({schema:t.result})}}toSchema(){const e=[];return e.push(new J({value:this.extnID})),this.critical!==pt.defaultValues("critical")&&e.push(new x({value:this.critical})),e.push(this.extnValue),new P({value:e})}toJSON(){const e={extnID:this.extnID,extnValue:this.extnValue.toJSON()};return this.critical!==pt.defaultValues("critical")&&(e.critical=this.critical),"parsedValue"in this&&(e.parsedValue=this.parsedValue.toJSON()),e}}class bt{constructor(e={}){this.extensions=pe(e,"extensions",bt.defaultValues("extensions")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"extensions":return[];default:throw new Error(`Invalid member name for Extensions class: ${e}`)}}static schema(e={},t=!1){const r=pe(e,"names",{});return new P({optional:t,name:r.blockName||"",value:[new fe({name:r.extensions||"",value:pt.schema(r.extension||{})})]})}fromSchema(e){const t=ve(e,e,bt.schema({names:{extensions:"extensions"}}));if(!1===t.verified)throw new Error("Object's schema was not verified against input data for EXTENSIONS");this.extensions=Array.from(t.result.extensions,e=>new pt({schema:e}))}toSchema(){return new P({value:Array.from(this.extensions,e=>e.toSchema())})}toJSON(){return{extensions:Array.from(this.extensions,e=>e.toJSON())}}}class wt{constructor(e={}){this.tbs=pe(e,"tbs",wt.defaultValues("tbs")),this.version=pe(e,"version",wt.defaultValues("version")),this.subject=pe(e,"subject",wt.defaultValues("subject")),this.subjectPublicKeyInfo=pe(e,"subjectPublicKeyInfo",wt.defaultValues("subjectPublicKeyInfo")),"attributes"in e&&(this.attributes=pe(e,"attributes",wt.defaultValues("attributes"))),this.signatureAlgorithm=pe(e,"signatureAlgorithm",wt.defaultValues("signatureAlgorithm")),this.signatureValue=pe(e,"signatureValue",wt.defaultValues("signatureValue")),"schema"in e&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"tbs":return new ArrayBuffer(0);case"version":return 0;case"subject":return new ze;case"subjectPublicKeyInfo":return new He;case"attributes":return[];case"signatureAlgorithm":return new Pe;case"signatureValue":return new R;default:throw new Error(`Invalid member name for CertificationRequest class: ${e}`)}}static schema(e={}){const t=pe(e,"names",{});return new P({value:[function(e={}){const t=pe(e,"names",{});return new P({name:t.CertificationRequestInfo||"CertificationRequestInfo",value:[new D({name:t.CertificationRequestInfoVersion||"CertificationRequestInfo.version"}),ze.schema(t.subject||{names:{blockName:"CertificationRequestInfo.subject"}}),He.schema({names:{blockName:"CertificationRequestInfo.subjectPublicKeyInfo"}}),new B({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new fe({optional:!0,name:t.CertificationRequestInfoAttributes||"CertificationRequestInfo.attributes",value:Oe.schema(t.attributes||{})})]})]})}(t.certificationRequestInfo||{}),new P({name:t.signatureAlgorithm||"signatureAlgorithm",value:[new J,new me({optional:!0})]}),new R({name:t.signatureValue||"signatureValue"})]})}fromSchema(e){const t=ve(e,e,wt.schema());if(!1===t.verified)throw new Error("Object's schema was not verified against input data for PKCS10");this.tbs=t.result.CertificationRequestInfo.valueBeforeDecode,this.version=t.result["CertificationRequestInfo.version"].valueBlock.valueDec,this.subject=new ze({schema:t.result["CertificationRequestInfo.subject"]}),this.subjectPublicKeyInfo=new He({schema:t.result["CertificationRequestInfo.subjectPublicKeyInfo"]}),"CertificationRequestInfo.attributes"in t.result&&(this.attributes=Array.from(t.result["CertificationRequestInfo.attributes"],e=>new Oe({schema:e}))),this.signatureAlgorithm=new Pe({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}encodeTBS(){const e=[new D({value:this.version}),this.subject.toSchema(),this.subjectPublicKeyInfo.toSchema()];return"attributes"in this&&e.push(new B({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.attributes,e=>e.toSchema())})),new P({value:e})}toSchema(e=!1){let t;if(!1===e){if(0===this.tbs.length)return wt.schema();t=ye(this.tbs).result}else t=this.encodeTBS();return new P({value:[t,this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){const e={tbs:function(e,t=0,r=e.byteLength){let a="";for(const s of new Uint8Array(e,t,r)){const e=s.toString(16).toUpperCase();a=a+(1===e.length?"0":"")+e}return a}(this.tbs,0,this.tbs.byteLength),version:this.version,subject:this.subject.toJSON(),subjectPublicKeyInfo:this.subjectPublicKeyInfo.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()};return"attributes"in this&&(e.attributes=Array.from(this.attributes,e=>e.toJSON())),e}sign(e,t="SHA-1"){if(void 0===e)return Promise.reject("Need to provide a private key for signing");let r,a=Promise.resolve();const s=Fe;return a=(a=(a=(a=(a=a.then(()=>s.subtle.getSignatureParameters(e,t))).then(e=>{r=e.parameters,this.signatureAlgorithm=e.signatureAlgorithm})).then(()=>{this.tbs=this.encodeTBS().toBER(!1)})).then(()=>s.subtle.signWithPrivateKey(this.tbs,e,r))).then(e=>{this.signatureValue=new R({valueHex:e})})}verify(){let e=Promise.resolve();const t=this.subjectPublicKeyInfo,r=this.signatureValue,a=this.tbs,s=$e();if(void 0===s)return Promise.reject("Unable to create WebCrypto object");const n=Ge(this.signatureAlgorithm);return""===n?Promise.reject(`Unsupported signature algorithm: ${this.signatureAlgorithm.algorithmId}`):e=(e=e.then(()=>{let e;const r=We(e="1.2.840.113549.1.1.10"===this.signatureAlgorithm.algorithmId?this.signatureAlgorithm.algorithmId:this.subjectPublicKeyInfo.algorithm.algorithmId);if("name"in r==!1)return Promise.reject(`Unsupported public key algorithm: ${e}`);const a=Me(r.name,"importkey");if("hash"in a.algorithm&&(a.algorithm.hash.name=n),"ECDSA"===r.name){let e=!1;if("algorithmParams"in t.algorithm==!0&&"idBlock"in t.algorithm.algorithmParams&&1===t.algorithm.algorithmParams.idBlock.tagClass&&6===t.algorithm.algorithmParams.idBlock.tagNumber&&(e=!0),!1===e)return Promise.reject("Incorrect type for ECDSA public key parameters");const r=We(t.algorithm.algorithmParams.valueBlock.toString());if("name"in r==!1)return Promise.reject(`Unsupported named curve algorithm: ${t.algorithm.algorithmParams.valueBlock.toString()}`);a.algorithm.namedCurve=r.name}const i=t.toSchema().toBER(!1),o=new Uint8Array(i);return s.importKey("spki",o,a.algorithm,!0,a.usages)})).then(e=>{const t=Me(e.algorithm.name,"verify");"hash"in t.algorithm&&(t.algorithm.hash.name=n);let i=r.valueBlock.valueHex;if("ECDSA"===e.algorithm.name){i=_e(ye(i).result)}if("RSA-PSS"===e.algorithm.name){let e;try{e=new je({schema:this.signatureAlgorithm.algorithmParams})}catch(e){return Promise.reject(e)}t.algorithm.saltLength="saltLength"in e?e.saltLength:20;let r="SHA-1";if("hashAlgorithm"in e){const t=We(e.hashAlgorithm.algorithmId);if("name"in t==!1)return Promise.reject(`Unrecognized hash algorithm: ${e.hashAlgorithm.algorithmId}`);r=t.name}t.algorithm.hash.name=r}return s.verify(t.algorithm,e,new Uint8Array(i),new Uint8Array(a))})}getPublicKey(e=null){const t=$e();if(void 0===t)return Promise.reject("Unable to create WebCrypto object");if(null===e){e={};const t=Ge(this.signatureAlgorithm);if(""===t)return Promise.reject(`Unsupported signature algorithm: ${this.signatureAlgorithm.algorithmId}`);const r=We(this.subjectPublicKeyInfo.algorithm.algorithmId);if("name"in r==!1)return Promise.reject(`Unsupported public key algorithm: ${this.subjectPublicKeyInfo.algorithm.algorithmId}`);if(e.algorithm=Me(r.name,"importkey"),"hash"in e.algorithm.algorithm&&(e.algorithm.algorithm.hash.name=t),"ECDSA"===r.name){let t=!1;if("algorithmParams"in this.subjectPublicKeyInfo.algorithm==!0&&"idBlock"in this.subjectPublicKeyInfo.algorithm.algorithmParams&&1===this.subjectPublicKeyInfo.algorithm.algorithmParams.idBlock.tagClass&&6===this.subjectPublicKeyInfo.algorithm.algorithmParams.idBlock.tagNumber&&(t=!0),!1===t)return Promise.reject("Incorrect type for ECDSA public key parameters");const r=We(this.subjectPublicKeyInfo.algorithm.algorithmParams.valueBlock.toString());if("name"in r==!1)return Promise.reject(`Unsupported named curve algorithm: ${this.subjectPublicKeyInfo.algorithm.algorithmParams.valueBlock.toString()}`);e.algorithm.algorithm.namedCurve=r.name}}const r=this.subjectPublicKeyInfo.toSchema(),a=r.toBER(!1),s=new Uint8Array(a);return t.importKey("spki",s,e.algorithm.algorithm,!0,e.algorithm.usages)}}var kt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},At=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],a=!0,s=!1,n=void 0;try{for(var i,o=e[Symbol.iterator]();!(a=(i=o.next()).done)&&(r.push(i.value),!t||r.length!==t);a=!0);}catch(e){s=!0,n=e}finally{try{!a&&o.return&&o.return()}finally{if(s)throw n}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),Bt=$e();function St(e,t){for(var r="-----BEGIN "+t+"-----\r\n",a=function(e,t=!1,r=!1,a=!1){let s=0,n=0,i=0,o="";const l=t?h:u;if(a){let t=0;for(let r=0;r<e.length;r++)if(0!==e.charCodeAt(r)){t=r;break}e=e.slice(t)}for(;s<e.length;){const t=e.charCodeAt(s++);s>=e.length&&(n=1);const a=e.charCodeAt(s++);s>=e.length&&(i=1);const c=e.charCodeAt(s++),u=t>>2,h=(3&t)<<4|a>>4;let m=(15&a)<<2|c>>6,f=63&c;1===n?m=f=64:1===i&&(f=64),o+=r?64===m?`${l.charAt(u)}${l.charAt(h)}`:64===f?`${l.charAt(u)}${l.charAt(h)}${l.charAt(m)}`:`${l.charAt(u)}${l.charAt(h)}${l.charAt(m)}${l.charAt(f)}`:`${l.charAt(u)}${l.charAt(h)}${l.charAt(m)}${l.charAt(f)}`}return o}(function(e){let t="";const r=new Uint8Array(e);for(const e of r)t+=String.fromCharCode(e);return t}(e)),s=0,n=0;s<a.length;s+=1,n+=1)n>63&&(r+="\r\n",n=0),r+=a[s];return r+="\r\n-----END "+t+"-----\r\n"}var Ct={commonname:{oid:"2.5.4.3",abbreviation:"CN",ValueType:F},country:{oid:"2.5.4.6",abbreviation:"C",ValueType:z},locality:{oid:"2.5.4.7",abbreviation:"L",ValueType:z},state:{oid:"2.5.4.8",abbreviation:"S",ValueType:z},address:{oid:"2.5.4.9",ValueType:z},organization:{oid:"2.5.4.10",abbreviation:"O",ValueType:z},organizationalunit:{oid:"2.5.4.11",abbreviation:"OU",ValueType:z},zipcode:{oid:"2.5.4.17",ValueType:z},email:{oid:"1.2.840.113549.1.9.1",ValueType:z}};Object.values(Ct).forEach(function(e){var t=e.abbreviation,r=function(e,t){var r={};for(var a in e)t.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(r[a]=e[a]);return r}(e,["abbreviation"]);void 0!==t&&(Ct[t]=kt({},r))});function Nt(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;if(void 0===Bt)return a("Cannot load WebCrypto, this browser might not be supported");var s=kt({hashAlgorithm:"SHA-256",signAlgorithm:"RSASSA-PKCS1-V1_5",keySize:2048},t),n=new wt({version:0,attributes:[]});Object.entries(e).forEach(function(e){var t=At(e,2),r=t[0],a=t[1];if(void 0!==a){var s=Ct[r],i=s.oid,o=s.ValueType;if(void 0!==i&&void 0!==o)return c=i,u=o,void 0!==(l=a)&&n.subject.typesAndValues.push(new Qe({type:c,value:new u({value:l})}))}var l,c,u;return!1});var i=void 0,o=void 0;return Promise.resolve().then(function(){var e=Me(s.signAlgorithm,"generateKey");switch(void 0!==e.algorithm.hash&&(e.algorithm.hash=s.hashAlgorithm),s.signAlgorithm){case"ECDSA":e.algorithm.namedCurve="P-"+s.keySize;break;default:e.algorithm.modulusBits=parseInt(s.keySize,10),e.algorithm.modulusLength=parseInt(s.keySize,10)}return Bt.generateKey(e.algorithm,!0,e.usages)}).then(function(e){return i=e.publicKey,o=e.privateKey,n.subjectPublicKeyInfo.importKey(i)},function(e){return a("Error during key generation: "+e)}).then(function(){return Bt.digest({name:"SHA-1"},n.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHex)}).then(function(e){return n.attributes.push(new Oe({type:"1.2.840.113549.1.9.14",values:[new bt({extensions:[new pt({extnID:"2.5.29.14",critical:!1,extnValue:new O({valueHex:e}).toBER(!1)})]}).toSchema()]})),n.sign(o,s.hashAlgorithm)}).then(function(){return Bt.exportKey("pkcs8",o)}).then(function(e){var t=St(e,"PRIVATE KEY"),a=St(n.toSchema().toBER(!1),"CERTIFICATE REQUEST");return r(a,t)})}e.generateCSR=Nt,e.default=Nt,Object.defineProperty(e,"__esModule",{value:!0}),window.generateCSR=Nt});
