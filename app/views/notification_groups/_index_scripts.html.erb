<script type="text/javascript">
  jQuery.noConflict();
  jQuery(function($) {
    $(document).ready(function () {
      $('#number_rows').change(function() {
        $('#per_page').val($(this).val());
        $('#hidden_form').submit();
      });

      $('.chk-remove').click(function() {
        if ($(this).prop('checked')) {
          $('#btn_remove_groups').attr('disabled', false);
        } else {
          var chk_remove_list = $('.chk-remove');
          var exist_chk = false;

          $.each(chk_remove_list, function(idx, chk_remove) {
            if ($(chk_remove).prop('checked')) {
              exist_chk = true;
              return false;
            }
          });

          exist_chk ? $('#btn_remove_groups').attr('disabled', false) : $('#btn_remove_groups').attr('disabled', true);
        }
      });

      $('#btn_remove_groups').click(function(e) {
        e.preventDefault();

        var chk_remove_list = $('.chk-remove');
        var confirmMsg = 'Are you sure you want to delete the following SSL Expiration Notification Group(s)?';
        var chk_first_group = true

        $.each(chk_remove_list, function(idx, chk_remove) {
          if ($(chk_remove).prop('checked')) {
            if (chk_first_group) {
              chk_first_group = false
              confirmMsg = confirmMsg.concat('\r\n      ' + $(chk_remove).attr('data-group-name'));
            } else {
              confirmMsg = confirmMsg.concat('\n      ' + $(chk_remove).attr('data-group-name'));
            }
          }
        });

        if (confirm(confirmMsg)) {
          this.form.submit();
        }
      });

      // Getting Domains from selected Certificate Orders.
      var ajaxGettingDomainsUrl = '<%=certificate_orders_domains_contacts_notification_groups_path(@ssl_slug)%>';
      settings = { tags: true };
      $('#cos_list').select2(settings);
      $('#cos_list').on('select2:opening select2:closing', function( event ) {
        var $searchfield = $(this).parent().find('.select2-search__field');
        $searchfield.prop('disabled', 'disabled');
      });
      $('#contacts_list').select2(settings);
      $('#subjects_list').select2({
        tags: true,
        minimumResultsForSearch: -1,
        templateSelection: function(data, container) {
          if (data.element.value == data.text) {
            $(container).css("background-color", '#a4c000');
          }
          return data.text;
        }
      });

      $('#cos_list').on('change', function(e) {
        $.ajax({
          url: ajaxGettingDomainsUrl,
          data: {
            cos: $('#cos_list').val() || []
          },
          type: 'GET',
          dataType: 'html',
          success: function(result) {
            // =============== Parsing Subjects ===============
            subjects = JSON.parse(result)['domains'];
            slt_subjects = $('#subjects_list').val() || [];

            if (slt_subjects.length > 0) {
              $.each(slt_subjects, function(idx, domain) {
                if (Math.floor(domain) == domain && $.isNumeric(domain)) return true;
                subjects.push([domain, domain]);
              });
            }

            $('#subjects_list').empty();

            // Adding domains
            $.each(subjects, function(idx, domain) {
              var optElement = $('<option></option>');
              optElement.attr('value', domain[1]);
              optElement.attr('selected', 'selected');
              optElement.append(domain[0]);

              $('#subjects_list').append(optElement);
            });

            $('#subjects_list').select2({
              tags: true,
              templateSelection: function(data, container) {
                if (data.element.value == data.text) {
                  $(container).css("background-color", '#a4c000');
                }
                return data.text;
              }
            });

            // =============== Parsing Contacts ===============
            contacts = JSON.parse(result)['contacts'];
            slt_contacts = $('#contacts_list').val() || [];
            $('#contacts_list').empty();

            // Adding contacts what belongs to selected certificate orders
            $.each(contacts, function(idx, contact) {
              var optElement = $('<option></option>');
              optElement.attr('value', contact[1]);
              optElement.append(contact[0]);

              var index = $.inArray(contact[1].toString(), slt_contacts);
              if (index != -1) {
                optElement.attr('selected', 'selected');
                slt_contacts.splice(index, 1);
              }

              $('#contacts_list').append(optElement);
            });

            // Adding contacts what does not belong to selected certificate orders
            if (slt_contacts.length > 0) {
              $.each(slt_contacts, function(idx, contact) {
                if (Math.floor(contact) == contact && $.isNumeric(contact)) {
                  return true;
                }

                var optElement = $('<option></option>');
                optElement.attr('value', contact);
                optElement.append(contact);
                optElement.attr('selected', 'selected');

                $('#contacts_list').append(optElement);
              });
            }

            $('#contacts_list').select2(settings);
          }
        });
      });
    });
  });
</script>