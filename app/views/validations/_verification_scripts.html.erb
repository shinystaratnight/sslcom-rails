<script type="text/javascript">
  jQuery.noConflict();
  jQuery(function($) {
    $(document).ready(function () {
      // Getting browser timezone
      var tz = jstz.determine();
      var tz_offset = tz.timezoneOffset() * (-1);

      if ($('#callback_time_zone').length) {
        $('#callback_time_zone option[value*="'+ tz_offset / 60 +'"]').attr('selected', true);
      }

      $(document).on('keyup', '#email_verification_code', function() {
        if ($(this).val() == '') {
          $('.btn-email-verification').removeClass('btn-primary');
          $('.btn-email-verification').prop('disabled', true);
        } else {
          $('.btn-email-verification').addClass('btn-primary');
          $('.btn-email-verification').prop('disabled', false);
        }
      });

      $(document).on('keyup', '#phone_verification_code', function() {
        if ($(this).val() == '') {
          $('.btn-phone-verification').removeClass('btn-primary');
          $('.btn-phone-verification').prop('disabled', true);
        } else {
          $('.btn-phone-verification').addClass('btn-primary');
          $('.btn-phone-verification').prop('disabled', false);
        }
      });

      $(document).on('click', '.btn-phone-verification', function() {
        $('.btn-phone-verification').prop('disabled', true);
        var phone_verification_url = '<%= phone_verification_check_url %>';

        if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
          $('#content').find('.inner').children().first().remove();
        }

        $.ajax({
          url: phone_verification_url,
          data: {
            token: $('#token').val(),
            passed_token: $('#passed_token').val(),
            phone_verification_code: $('#phone_verification_code').val(),
          },
          type: 'POST',
          success: function (data) {
            if (data['status'] == 'no-user') {
              location.reload(true);
            } else {
              var message_wrap_element = $('<div></div>');
              if (data['status'] == 'success') {
                message_wrap_element.attr('class', 'flash_message notice');
              } else {
                message_wrap_element.attr('class', 'flash_message error');
              }

              var message_element = $('<span></span>');
              if (data['status'] == 'success') {
                message_element.append('Callback verification completed successfully.');
              } else if (data['status'] == 'incorrect-token') {
                message_element.append('Verification attempted with the wrong token.');
              } else if (data['status'] == 'failed') {
                message_element.append('Phone call attempt failed. Please try again.');
              } else if (data['status'] == 'reached_to_max') {
                message_element.append('Too many attempts performed with this code. Please obtain a new email verification code.');
              }
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
              $('.btn-phone-verification').prop('disabled', false);

              if (data['status'] == 'incorrect-token') {
                if ($('.phone-call-block').length) {
                  $('#phone-verification-code').val('');
                  $('#passed_token').val('');
                  $('.btn-phone-verification').removeClass('btn-primary');
                  $('.btn-phone-verification').prop('disabled', true);

                  $('.phone-verification-block').hide();
                  $('.phone-call-block').show();
                }
              } else if (data['status'] == 'success' || data['status'] == 'reached_to_max') {
                $('.automated-call-verification').remove();
              } else if (data['status'] == 'failed') {
                $('#passed_token').val(data['passed_token']);
              }
            }
          }
        });
      });

      $(document).on('click', '.btn-automated-callback', function() {
        $('.btn-automated-callback').prop('disabled', true);
        var automated_call_url = '<%= automated_call_url %>';

        if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
          $('#content').find('.inner').children().first().remove();
        }

        $.ajax({
          url: automated_call_url,
          data: {
            token: $('#token').val(),
            method: $("input[name='method']:checked").val(),
            locale: $('#callback_locale').val()
          },
          type: 'POST',
          success: function (data) {
            if (data['status'] == 'success') {
              $('#callback_type').prop('disabled', true);
              $('#callback_locale').prop('disabled', true);

              $('#passed_token').val(data['passed_token']);
              $('.btn-automated-callback').prop('disabled', false);
              $('.phone-call-block').hide();
              $('.phone-verification-block').show();
            } else {
              if (data['status'] == 'no-user') {
                location.reload(true);
              } else {
                var message_wrap_element = $('<div></div>');
                message_wrap_element.attr('class', 'flash_message error');

                var message_element = $('<span></span>');
                if (data['status'] == 'failed') {
                  message_element.append('Phone call attempt failed. Please try again.');
                } else if (data['status'] == 'incorrect-token') {
                  message_element.append('The phone verification code is invalid. Please try again with the correct code.');
                } else if (data['status'] == 'reached_to_max') {
                  message_element.append('Too many attempts performed with this code. Please obtain a new email verification code.');
                }
                message_wrap_element.append(message_element);

                var btn_element = $('<small></small>');
                var close_btn_element = $('<div></div>');
                close_btn_element.attr('class', 'close_flash_message');

                var close_sign_element = $('<span></span>');
                close_sign_element.append('X');

                close_btn_element.append(close_sign_element);
                close_btn_element.append('close');

                btn_element.append(close_btn_element);
                message_wrap_element.append(btn_element);

                message_wrap_element.insertBefore($('#content').find('.inner').children().first());
                $('.btn-automated-callback').prop('disabled', false);

                if (data['status'] == 'reached_to_max') {
                  $('.automated-call-verification').remove();
                }
              }
            }
          }
        });
      });

      $(document).on('click', '.btn-email-verification', function() {
        var email_verification_url = '<%= email_verification_check_url %>';

        $.ajax({
          url: email_verification_url,
          data: {
            email_verification_code: $('#email_verification_code').val()
          },
          type: "POST",
          success: function (data) {
            if (data['status'] == 'correct') {
              $('#passed_token').val(data['token']);
              $('.email-verification-block').hide();
              $('.phone-call-block').show();
            } else if (data['status'] == 'no-user') {
              location.reload(this);
            } else {
              var message_wrap_element = $('<div></div>');
              message_wrap_element.attr('class', 'flash_message error');

              var message_element = $('<span></span>');
              if (data['status'] == 'expired') {
                message_element.append('The email verification code what you have inputted has been expired. Please retry with new verification code.');
              } else if (data['status'] == 'incorrect') {
                message_element.append('The email verification code what you have inputted is incorrect. Please retry with correct one.');
              } else if (data['status'] == 'no-permission') {
                message_element.append('You have no permission to do verification.');
              }
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                $('#content').find('.inner').children().first().remove();
              }
              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
            }
          }
        });
      });

      $(document).on('click', '#callback_type', function() {
        if ($(this).val() == 'callback') {
          $('.phone-call-block').show();
          $('.phone-callback-date-block').hide();
          $('.callback-method').hide();
        } else if ($(this).val() == 'schedule' || $(this).val() == 'manual') {
          $('.phone-call-block').hide();

          if ($(this).val() == 'schedule') {
            $('.callback-method').show();
          } else {
            $('.callback-method').hide();
          }
          $('.phone-callback-date-block').show();
        }
      });

      // Init Datepicker
      $(document).on('focus', '.date-picker', function() {
        $(this).datepicker({
          autoclose: true,
          format: "yyyy-mm-dd"
        });
      });

      // Init Timepicker
      $(document).on('focus', '.time-picker', function () {
        $(this).timepicker({
          timeFormat: 'h:mm p',
          startTime: '00:00',
          minTime: '00',
          maxTime: '11:00pm',
          interval: 30,
          dynamic: false,
          dropdown: true,
          scrollbar: true
        });
      });

      $(document).on('click', '.btn-callback-date', function(e) {
        e.preventDefault();

        if ($('.date-picker').val() == '') {
          $('.date-block').addClass('error-required');
          return false;
        } else {
          $('.date-block').removeClass('error-required');
        }

        if ($('.time-picker').val() == '') {
          $('.time-block').addClass('error-required');
          return false;
        } else {
          $('.time-block').removeClass('error-required');
        }

        $(this).prop('disabled', true);
        var register_callback_url = '<%= register_callback_url %>';

        if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
          $('#content').find('.inner').children().first().remove();
        }

        callback_method = $("#callback_type").val() == 'manual' ? 'call' : $("input[name='callback_type_method']:checked").val();

        $.ajax({
          url: register_callback_url,
          data: {
            token: $('#token').val(),
            callback_method: callback_method,
            callback_type: $("#callback_type").val(),
            callback_timezone: $('#callback_time_zone').val(),
            callback_date: $('#callback_date').val(),
            callback_time: $('#callback_time').val(),
            locale: $('#callback_locale').val()
          },
          type: 'POST',
          success: function (data) {
            var message_wrap_element = $('<div></div>');

            if (data['status'] == 'success-manual' || data['status'] == 'success-schedule') {
              $('#callback_type').prop('disabled', true);
              $('#callback_locale').prop('disabled', true);

              $('.phone-call-block').remove();
              $('.phone-callback-date-block').remove();
              $('.phone-verification-block').remove();

              $('.callback-method-desc').text(data['callback_method']);
              $('.callback-datetime-desc').text(data['callback_datetime']);

              $('.phone-callback-method-desc').show();
              $('.phone-callback-datetime-desc').show();

              message_wrap_element.attr('class', 'flash_message notice');

              var message_element = $('<span></span>');
              if (data['status'] == 'success-manual') {
                message_element.append('Thank you. An SSL.com vetting agent will call you at specified date and time.');
              } else if (data['status'] == 'success-schedule') {
                if (callback_method == 'sms') {
                  message_element.append('Thank you. A sms will be made to you at specified date and time automatically.');
                } else {
                  message_element.append('Thank you. A call will be made to you at specified date and time automatically.');
                }
              }
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
            } else if (data['status'] == 'incorrect-token') {
              message_wrap_element.attr('class', 'flash_message error');

              var message_element = $('<span></span>');
              message_element.append('Verification attempted with the wrong token.');
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
              $('.btn-callback-date').prop('disabled', false);
            }
          }
        });
      });
    });
  });
</script>
