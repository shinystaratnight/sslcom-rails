<%checkout_in_progress=@certificate_order && @certificate_order.validation_stage_checkout_in_progress?%>
<script type="text/javascript">
function destroy_generate_cert_link(event) {
  document.body.removeChild(event.target);
}

function link_to_generate_cert(url) {
  var pageLink = document.createElement('a');
  pageLink.innerHTML = "Generate Certificate";

  pageLink.href = url;
  pageLink.onclick = destroy_generate_cert_link;
  pageLink.style.display = "none";
  document.body.appendChild(pageLink);

  pageLink.click();
}

jQuery(function($) {
  //This prototype is provided by the Mozilla foundation and
  //is distributed under the MIT license.
  //http://www.ibiblio.org/pub/Linux/LICENSES/mit.license

  if (!Array.prototype.every)
  {
    Array.prototype.every = function(fun /*, thisp*/)
    {
      var len = this.length;
      if (typeof fun != "function")
        throw new TypeError();

      var thisp = arguments[1];
      for (var i = 0; i < len; i++)
      {
        if (i in this &&
            !fun.call(thisp, this[i], i, this))
          return false;
      }

      return true;
    };
  }

  //This prototype is provided by the Mozilla foundation and
  //is distributed under the MIT license.
  //http://www.ibiblio.org/pub/Linux/LICENSES/mit.license

  if (!Array.prototype.some)
  {
    Array.prototype.some = function(fun /*, thisp*/)
    {
      var len = this.length;
      if (typeof fun != "function")
        throw new TypeError();

      var thisp = arguments[1];
      for (var i = 0; i < len; i++)
      {
        if (i in this &&
            fun.call(thisp, this[i], i, this))
          return true;
      }

      return false;
    };
  }
  var is_approved=function(x){
    return x=='<%=ValidationRuling::APPROVED%>';
  };
  var is_unapproved=function(x){
    return x=='<%=ValidationRuling::UNAPPROVED%>';
  };
  var is_requiring_more=function(x){
    return x=='<%=ValidationRuling::MORE_REQUIRED%>';
  };
  $.get_selected_options=function(select, type){
    options=[];
    $(select).find(':selected').each(function(c, selected){
      if(type=='text')
        options[c] = $(selected).text();
      else
        options[c] = $(selected).val();
    });
    return options;
  };
  $.get_selected_array_options=function(select, index, type){
    options=[];
    $($(select)[index]).find(':selected').each(function(c, selected){
      if(type=='text')
        options[c] = $(selected).text();
      else
        options[c] = $(selected).val();
    });
    return options;
  };
  $.method_none_selected=function(methods){
    for(m=0; m<methods.length; m++){
      if(methods[m]=='<%=Validation::NONE_SELECTED%>')
        return true;
    }
    return false;
  };
  $.unapprove_all_methods=function(methods, i){
    for(m=0; m<methods.length; m++){
      $('.method_'+i).removeClass("approved_validation_document")
        .removeClass('crossout');
      $('.method_'+i+' ul li').remove();
    }
  };
  $.method_type=function(){
    if($(':radio[name=method]:checked').val()=="http"){
      $('#http_dcv').show();
      $('#email_dcv').hide();
    }
    else{
      $('#http_dcv').hide();
      $('#email_dcv').show();
    }
    $(':radio[name=method]').bind('click', function(){
      if($(this).val()=="http"){
        $('#http_dcv').show();
        $('#email_dcv').hide();
      }
      else{
        $('#http_dcv').hide();
        $('#email_dcv').show();
      }
    });
  };
  $.validate_email = function(email) {
    var filter = /^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
    if (filter.test(email)) {
      return true;
    } else {
      return false;
    }
  };

  jQuery.fn.refer_to_others_toggle=function(){
    if($(this).val()=="false"){
      $('#request_validation_from_others').hide();
      $('#proof_of_dcv_section').show();
      $('#documents_upload_section').show();
      $('#documents_upload_heading').show();
      if(<%=!checkout_in_progress%>)
        $("#upload_validations").show();
      $.method_type();
    }
    else{
      $('#request_validation_from_others').show();
      $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::BOTH_SECTIONS%>]').attr("checked", "checked");
      $('#proof_of_dcv_section').hide();
      $('#documents_upload_section').hide();
      $('#documents_upload_heading').hide();
      if(<%=!checkout_in_progress%>)
        $("#upload_validations").hide();
    }
  };
  $(document).ready(function() {
    var status_bar=null;
    $.method_type();
    $("select#domain_control_validation_email option[value='none']").remove();

    $('input:checkbox#select_all').click(function(event) {  //on click
      $(".check_box").prop('checked', $(this).prop('checked'));
    });

    // change the status for SelectAll checkbox by individual checkbox's status.
    $(document).on('click', '.check_box', function() {
      var chk_validate_type_list = $('.check_box');
      var all_checked = true;

      // check whether all individual checkbox has been checked.
      $.each(chk_validate_type_list, function(idx, chk_validate_type) {
        if (!$(chk_validate_type).prop('checked')) {
          all_checked = false;
          return false;
        }
      });

      // change the check status for SelectAll checkbox by all individual checkbox status.
      if (all_checked) {
        $('input:checkbox#select_all').prop('checked', true);
      } else {
        $('input:checkbox#select_all').prop('checked', false);
      }
    });

    $('.dropdown, .validation_status_message, .expand, .subject_column > a').click(function(){
      if($(this).parents().filter('tr').next().css('display')!='none'){
        $(this).parents().filter('tr').next().css('display', 'none');
        $(this).parents().filter('tr').find('.dropdown img').attr('src',"<%= asset_path('expand.png') %>");
        $(this).parents().filter('tr').find('.expand').text('expand');
        this.expanded = false;
      }
      else{
        this.expanded = true;
        $(this).parents().filter('tr').find('.dropdown img').attr('src',"<%= asset_path('contract.png') %>");
        $(this).parents().filter('tr').next().show();
        $(this).parents().filter('tr').find('.expand').text('close');
      }
    });
    // prepare Options Object
    var options = {
      dataType: 'json',
      beforeSubmit: function(){
        return confirm(
        "This will adjust the approval status of this order. Are you sure?");
      },
      success: function(data, status, $form) {
        form = $('.edit_validation_ruling');
        alt = form.attr('alt');
        all_approvals = [];

        form.find(':radio:checked').each(function() {
          approval = $(this).val();
          all_approvals.push(approval);

          vrl_alt  = $(this).attr('alt');
          reason = $('#ruling_reason_' + vrl_alt).val();
          $('ul.status_history_' + vrl_alt)
            .append('<li><em>' + approval + ' by ' + data.by_user + ':</em><ul><li>' +
              reason + ' - ' +
              Date.parse('today').toString("MMM d, yyyy") +
              '</li></ul></li>');

          status_span = $('.validation_status_result_' + vrl_alt);
          if (approval == '<%=ValidationRuling::APPROVED%>' ) {
            status_span.text("<%=ValidationRuling::APPROVED%>");
            status_span
              .removeClass("<%=ValidationRuling::ATTENTION_CLASS%>")
              .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
              .addClass("<%=ValidationRuling::APPROVED_CLASS%>");
          } else if (approval == '<%=ValidationRuling::UNAPPROVED%>') {
            status_span.text("<%=ValidationRuling::UNAPPROVED%>");
            status_span
              .removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
              .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
              .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
          } else if (approval == '<%=ValidationRuling::MORE_REQUIRED%>') {
            status_span.text("<%=ValidationRuling::INSUFFICIENT%>");
            status_span.removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
              .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
              .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
          }

          $('.reason_block_' + alt).hide();
          $('.no_validation_decisions_' + vrl_alt).remove();
        });

        message_span = $('.vs_message_' + alt.split("_")[0]);
        if (all_approvals.some(is_requiring_more)) {
          message_span.text("<%=ValidationRuling::MORE_REQUIRED_STATUS%>");
          message_span.removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
            .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
            .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
        } else if (all_approvals.some(is_unapproved)) {
          message_span.text("<%=ValidationRuling::UNAPPROVED_STATUS%>");
          message_span
            .removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
            .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
            .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
        } else if (all_approvals.every(is_approved)) {
          message_span.text("<%=ValidationRuling::APPROVED_STATUS%>");
          message_span
            .removeClass("<%=ValidationRuling::ATTENTION_CLASS%>")
            .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
            .addClass("<%=ValidationRuling::APPROVED_CLASS%>");
        }

        alert('Approval status change successful!');
        form.reset();

        if (data.is_validated == 'true') {
          /*url = $('#link_to_generate_cert').val();
          link_to_generate_cert(url);
          $('form#send_certificate_order_token').show();*/
          location.reload(true);
        }
      }
    };
    $('form.edit_validation_ruling').ajaxForm(options);

    /*var token_send_options = {
      dataType: 'json',
      success: function(data) {
        if (data == 'success') {
          alert('Successfully sent token link.');
        } else if (data == 'not_found_ssl_account') {
          alert('Not found team account. Please try again.');
        } else if (data == 'session_expired') {
          alert('The session has been expired. You need to login again.');
          location.reload(true);
        }
      }
    };
    
    $('#link_to_send_token').click(function(e) {
      e.preventDefault();
      $('form#send_certificate_order_token').ajaxSubmit(token_send_options);
    });*/

    var send_notify_options = {
      dataType: 'json',
      beforeSubmit: function() {
        var notify_type = $('#notify_type').val();
        var token_url = '<%= certificate_order_tokens_path(@ssl_slug)%>';
        var request_url = '<%= request_token_certificate_order_tokens_path(@ssl_slug)%>';

        if (notify_type == 'token') {
          $(this).attr('url', token_url);
        } else {
          $(this).attr('url', request_url);
        }
      },
      success: function(data) {
        if (data == 'success') {
          alert('Successfully sent notify email.');
        } else if (data == 'not_found_ssl_account') {
          alert('Not found team account. Please try again.');
        } else if (data == 'session_expired') {
          alert('The session has been expired. You need to login again.');
          location.reload(true);
        }
      }
    };

    $('.link_to_send_notify').click(function(e) {
      e.preventDefault();
      var ref = $(this).attr('data-ref');
      var notify_type = $(this).attr('data-type');
      $('#certificate_order_ref').val(ref);
      $('#notify_type').val(notify_type);
      $('form#send_notify_form').ajaxSubmit(send_notify_options);
    });

    $('input:checkbox[name*=publish_to_site_seal]').click(function(){
      $(this).parents().filter('form').ajaxSubmit();
    });
    $(':radio[name^=ruling_decision]').click(function(){
      alt=$(this).attr('alt');
      if($(this).val()=='<%=ValidationRuling::UNAPPROVED%>' ||
          $(this).val()=='<%=ValidationRuling::MORE_REQUIRED%>'){
        $('.reason_block_'+alt).show();
      }
      else{
        $('.reason_block_'+alt).hide();
      }
    });
    $('.selectAll').toggle(function() {
      $(this).select();
    }, function() {
      $(this).unselect();
    });
    $('select[id*=validation_history_validation_rules]').change(function(){
      //prevent other options from being selected if None is selected
      rules = $.get_selected_options(this, 'text');
      if($.method_none_selected(rules)){
        $(this).find(':selected').each(function(c, selected){
          if($(selected).text()!='<%=Validation::NONE_SELECTED%>')
            $(selected).attr('selected', false);
        });
      }
      $(this).parents().filter('form').ajaxSubmit();
      //order index
      i = $(this).attr('alt').split("_")[0];
      //doc index
      doc_i = $(this).attr('alt').split("_")[1];
      //let's find all applicable doc types
      types_select = 'select[id*=validation_history_satisfies_validation_methods][alt='+$(this).attr('alt')+']'
      types=$.get_selected_options(types_select, 'text');
      alt=$(this).parents().find('span.doc_filename').attr('alt');
      identifier = alt+'_'+$(this).attr('alt');
      //get the newly selected rule (should be 'None')
      rules = $.get_selected_options(this, 'text');
      //change status to approved
      for(r=0; r<rules.length; r++){
        applied=false;
        if(!applied){
          for(x=0;x<types.length;x++){
            $('li[alt=method_'+types[x]+'_'+i+']')
              .addClass("approved_validation_document").addClass("crossout");
            $('li[alt=method_'+types[x]+'_'+i+'] ul')
              .append('<li class="applied_doc tree-connect" alt="'+identifier+
              '">applied: '+alt+'</li>');
          }
          $('ul.applied_docs_summary_'+i).append(
            '<li class="approved_validation_document applied_doc" alt="'
            +identifier+'">applied: '+alt+'</li>');
          applied=true;
        }
      }
      //if None was selected, then change status to pending
      for(r=0; r<rules.length; r++){
        if(rules[r]=='<%=Validation::NONE_SELECTED%>'){
          $('ul.applied_docs_summary_'+i+
            ' li[class*=approved_validation_document][alt*='+identifier+']')
            .remove();
          for(x=0;x<types.length;x++){
            $('li[alt=method_'+types[x]+'_'+i+'] ul li[alt='+identifier+']')
              .remove();
            if($('li[alt=method_'+types[x]+'_'+i+'] ul li').length==0)
              $('li[alt=method_'+types[x]+'_'+i+']')
              .removeClass("approved_validation_document").removeClass("crossout");
          }
        }
      }
    });

    <%if @certificate_order and !@certificate_order.certificate.is_code_signing? and @certificate_order.csr%>

    function uploadInstructionsLink(link) {
      return (
        "Upload <a href='"
        + '<%= http_dcv_file_csr_path(@ssl_slug, @certificate_order.csr.id) %>'
        + "' class='lnk-upload-thisfile'>"
        + "THIS FILE</a> to this location: "
        + "<i class='fa fa-external-link fa-ssl-custom'></i>"
        + "<a href='" + link + "' target='_new'>" + link + "</a>"
      );
    }

    <%
      is_single = @certificate_order.certificate.is_single?
    %>
      $(document).on('change', 'select[id^=domains]', function() {
      //$('select[id^=domains]').change(function(){
        var dcv_select=$(this);
        var dt = new Date();
        var time = (dt.getMonth()+1) + "-"
                + dt.getDate() + "-"
                + dt.getFullYear() + " "
                + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
        //prevent other options from being selected if None is selected
        methods=$.get_selected_options(this, 'text');
        if($.method_none_selected(methods)){
          $(this).find(':selected').each(function(c, selected){
            if($(selected).text()!='<%=Validation::NONE_SELECTED%>')
              $(selected).attr('selected', false);
          });
        }
        <%if is_single%>
          domain=$(this).attr("alt").replace("www.", "").toLowerCase();
        <%else%>
          domain=$(this).attr("alt").replace("*.", "").toLowerCase();
        <%end%>

        //get cert order index
        instruction=$('span[alt="'+$(this).attr('name')+'"]')[0];
        /*file=$(this).attr("alt").replace("*.", "").toLowerCase()+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";*/
        file=domain+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";
        https = "https://"+file;
        http = "http://"+file;
        wwwfile=$(this).attr("alt").replace("*.", "www.").toLowerCase()+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";
        wwwhttps = "https://"+wwwfile;
        wwwhttp = "http://"+wwwfile;
        /*cname = $('.dns_md5_hash').text()+"."+$(this).attr("alt").replace("*.", "").toLowerCase()+" -> "+$('.dns_sha2_hash').text()+".comodoca.com";*/
        cname = $('.dns_md5_hash').text()+"."+domain+" -> "+$('.cname_destination').text();

        if (methods[0] == 'Please select a validation method') {
          $(instruction).html("Please select a validation method");
          $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html("n/a");
        }
        else if(/@/.test(methods[0])){
          $(instruction).html("Validation instructions will be emailed to "+methods[0]+". Please follow those instructions.")
          $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html("n/a");
        }
        else if(/https/.test(methods[0])){
          instructions = uploadInstructionsLink(https);
          $(instruction).html(instructions);
          $.ajax({url: '<%=verification_check_csr_path(@ssl_slug, @certificate_order.csr.id)%>?protocol=https&dcv='+
            $(dcv_select).parents('tr').attr('id')+'&new_name='+$(dcv_select).attr('alt')+'&ref='+$(dcv_select).parents('tbody').attr('data-ref')}).done(
              function(data){
                <%unless @certificate_order.certificate_content.ca_id.nil?%>
                if (data) {
                  // Adding Hidden Tag for saving satisfied option.
                  var hiddenElement = $('<input></input>');
                  hiddenElement.attr('type', 'hidden');
                  hiddenElement.attr('name', 'domains[' + $(dcv_select).attr("alt") + '][dcv]');
                  hiddenElement.attr('value', $(dcv_select).val());
                  $(dcv_select).parent().append(hiddenElement);

                  // Changing Status to "Satisfied".
                  $('td.status[class~="'+$(dcv_select).attr("alt")+'"]').html('satisfied');

                  // Changing previous attempt to selected validation option
                  $('td.attempt[class~="' + $(dcv_select).attr("alt") + '"]').html('validated');

                  // Disable the option.
                  $(dcv_select).attr('disabled', true);

                  // Hidden the "Edit" button
                  $(dcv_select).parents('tr').find('.btn_edit_domain').attr('disabled', true);

                  // Hidden the "Checkbox" button
                  $(dcv_select).parents('tr').find('.check_box').attr('disabled', true);

                  // Checking all domains has been validated.
                  if ($('select[id^=domains]:enabled').length == 0) {
                    // Hide Validate Button
                    $('#upload_validations').hide();

                    // Validate & issue.
                    $.ajax({
                      url: '<%=validate_issue_certificate_orders_path%>',
                      data: {
                        id: '<%=@certificate_order.ref%>'
                      },
                      type: 'POST',
                      success: function (data) {
                        // Show Message
                        $('body').addClass('no_scroll_y');

                        var redirectUrl = '<%=certificate_order_path(@ssl_slug, @certificate_order)%>';

                        var redirect_message_wrap = $('<div></div>');
                        redirect_message_wrap.attr('class', 'redirect_message_wrap');

                        var redirect_message = $('<div></div>');
                        redirect_message.attr('class', 'redirect_message');

                        var span = $('<span></span>');
                        if (data) {
                          span.append('All domains have been validated, and the certificate has been issued. \n');
                        } else {
                          span.append('All domains have been validated, and the certificate will be issued soon. \n');
                        }
                        span.append('Redirecting to Certificate Order Page now ...');

                        redirect_message.append(span);
                        redirect_message_wrap.append(redirect_message);
                        redirect_message_wrap.insertBefore($('#header'));

                        // Redirect to Certificate Order Detail Page.
                        var delay = 1000;
                        window.setTimeout(function() {
                          $('body').removeClass('no_scroll_y');
                          window.location.href = redirectUrl;
                        }, delay);
                      }
                    });
                  }
                }
                <%end%>
                $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html((data ? "<div class='passed'>passed</div>" : "<div class='failed'>failed</div>"));
              });
        }
        else if(/http/.test(methods[0])){
          instructions = uploadInstructionsLink(http);
          $(instruction).html(instructions);
          $.ajax({url: '<%=verification_check_csr_path(@ssl_slug, @certificate_order.csr.id)%>?protocol=http&dcv='+
            $(dcv_select).parents('tr').attr('id')+'&new_name='+$(dcv_select).attr('alt')+'&ref='+$(dcv_select).parents('tbody').attr('data-ref')}).done(
              function(data){
                <%unless @certificate_order.certificate_content.ca_id.nil?%>
                if (data) {
                  // Adding Hidden Tag for saving satisfied option.
                  var hiddenElement = $('<input></input>');
                  hiddenElement.attr('type', 'hidden');
                  hiddenElement.attr('name', 'domains[' + $(dcv_select).attr("alt") + '][dcv]');
                  hiddenElement.attr('value', $(dcv_select).val());
                  $(dcv_select).parent().append(hiddenElement);

                  // Changing Status to "Satisfied".
                  $('td.status[class~="'+$(dcv_select).attr("alt")+'"]').html('satisfied');

                  // Changing previous attempt to selected validation option
                  $('td.attempt[class~="' + $(dcv_select).attr("alt") + '"]').html('validated');

                  // Disable the option.
                  $(dcv_select).attr('disabled', true);

                  // Hidden the "Edit" button
                  $(dcv_select).parents('tr').find('.btn_edit_domain').attr('disabled', true);

                  // Hidden the "Checkbox" button
                  $(dcv_select).parents('tr').find('.check_box').attr('disabled', true);

                  // Checking all domains has been validated.
                  if ($('select[id^=domains]:enabled').length == 0) {
                    // Hide Validate Button
                    $('#upload_validations').hide();

                    // Validate & issue.
                    $.ajax({
                      url: '<%=validate_issue_certificate_orders_path%>',
                      data: {
                        id: '<%=@certificate_order.ref%>'
                      },
                      type: 'POST',
                      success: function (data) {
                        // Show Message
                        $('body').addClass('no_scroll_y');

                        var redirectUrl = '<%=certificate_order_path(@ssl_slug, @certificate_order)%>';

                        var redirect_message_wrap = $('<div></div>');
                        redirect_message_wrap.attr('class', 'redirect_message_wrap');

                        var redirect_message = $('<div></div>');
                        redirect_message.attr('class', 'redirect_message');

                        var span = $('<span></span>');
                        if (data) {
                          span.append('All domains have been validated, and the certificate will be issued soon. \n');
                        } else {
                          span.append('All domains have been validated, and certificate has been issued. \n');
                        }
                        span.append('Redirecting to Certificate Order Page now ...');

                        redirect_message.append(span);
                        redirect_message_wrap.append(redirect_message);
                        redirect_message_wrap.insertBefore($('#header'));

                        // Redirect to Certificate Order Detail Page.
                        var delay = 1000;
                        window.setTimeout(function() {
                          $('body').removeClass('no_scroll_y');
                          window.location.href = redirectUrl;
                        }, delay);
                      }
                    });
                  }
                }
                <%end%>
                $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html((data ? "<div class='passed'>passed</div>" : "<div class='failed'>failed</div>"));
              });
        }
        else if(/cname/.test(methods[0])){
          $(instruction).html("Create CNAME: "+cname);
          $.ajax({url: '<%=verification_check_csr_path(@ssl_slug, @certificate_order.csr.id)%>?protocol=cname&dcv='+
            $(dcv_select).parents('tr').attr('id')+'&new_name='+$(dcv_select).attr('alt')+'&ref='+$(dcv_select).parents('tbody').attr('data-ref')}).done(
              function(data){
                <%unless @certificate_order.certificate_content.ca_id.nil?%>
                if (data) {
                  // Adding Hidden Tag for saving satisfied option.
                  var hiddenElement = $('<input></input>');
                  hiddenElement.attr('type', 'hidden');
                  hiddenElement.attr('name', 'domains[' + $(dcv_select).attr("alt") + '][dcv]');
                  hiddenElement.attr('value', $(dcv_select).val());
                  $(dcv_select).parent().append(hiddenElement);

                  // Changing Status to "Satisfied".
                  $('td.status[class~="'+$(dcv_select).attr("alt")+'"]').html('satisfied');

                  // Changing previous attempt to selected validation option
                  $('td.attempt[class~="' + $(dcv_select).attr("alt") + '"]').html('validated');

                  // Disable the option.
                  $(dcv_select).attr('disabled', true);

                  // Hidden the "Edit" button
                  $(dcv_select).parents('tr').find('.btn_edit_domain').attr('disabled', true);

                  // Hidden the "Checkbox" button
                  $(dcv_select).parents('tr').find('.check_box').attr('disabled', true);

                  // Checking all domains has been validated.
                  if ($('select[id^=domains]:enabled').length == 0) {
                    // Hide Validate Button
                    $('#upload_validations').hide();

                    // Validate & issue.
                    $.ajax({
                      url: '<%=validate_issue_certificate_orders_path%>',
                      data: {
                        id: '<%=@certificate_order.ref%>'
                      },
                      type: 'POST',
                      success: function (data) {
                        // Show Message
                        $('body').addClass('no_scroll_y');

                        var redirectUrl = '<%=certificate_order_path(@ssl_slug, @certificate_order)%>';

                        var redirect_message_wrap = $('<div></div>');
                        redirect_message_wrap.attr('class', 'redirect_message_wrap');

                        var redirect_message = $('<div></div>');
                        redirect_message.attr('class', 'redirect_message');

                        var span = $('<span></span>');
                        if (data) {
                          span.append('All domains have already been validated. The certificate will be issued soon. \n');
                        } else {
                          span.append('All domains have already been validated and certificate has been issued. \n');
                        }
                        span.append('Redirecting to Certificate Order Page now ...');

                        redirect_message.append(span);
                        redirect_message_wrap.append(redirect_message);
                        redirect_message_wrap.insertBefore($('#header'));

                        // Redirect to Certificate Order Detail Page.
                        var delay = 1000;
                        window.setTimeout(function() {
                          $('body').removeClass('no_scroll_y');
                          window.location.href = redirectUrl;
                        }, delay);
                      }
                    });
                  }
                }
                <%end%>
                $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html((data ? "<div class='passed'>passed</div>" : "<div class='failed'>failed</div>"));
              });
        }
        $(instruction).css({ background: "yellow" });
      });
    <%end%>

    $('select[id*=validation_history_satisfies_validation_methods]').change(function(){
      //prevent other options from being selected if None is selected
      methods=$.get_selected_options(this, 'text');
      if($.method_none_selected(methods)){
        $(this).find(':selected').each(function(c, selected){
          if($(selected).text()!='<%=Validation::NONE_SELECTED%>')
            $(selected).attr('selected', false);
        });
      }
      $(this).parents().filter('form').ajaxSubmit();
      //get cert order index
      i = $(this).attr('alt').split("_")[0];
      //doc index
      doc_i = $(this).attr('alt').split("_")[1];
      rules_select = 'select[id*=validation_history_validation_rules][alt='+$(this).attr('alt')+']'
      rules=$.get_selected_options(rules_select, 'val');
      //highlight a selected method
      $.unapprove_all_methods(methods, i);
      //get selected values
      num_docs = $('.val_docs_list_'+i).attr('alt');
      //poll through each doc and apply each doc to the selected methods unless none is selected
      for(mi=0; mi<num_docs; mi++){
        rules_select = 'select[id*=validation_history_validation_rules][alt^='+i+']';
        rules=$.get_selected_array_options(rules_select, mi, 'val');
        selects = 'select[id*=validation_history_satisfies_validation_methods][alt^='+i+']';
        methods = $.get_selected_array_options(selects, mi, 'text');
        if(!$.method_none_selected(rules)){
          for(m=0; m<methods.length; m++){
            for(ri=0; ri<rules.length; ri++){
              alt=$($(rules_select)[mi]).parents().find('span.doc_filename').attr('alt');
              identifier = alt+'_'+$($(rules_select)[mi]).attr('alt');
              method = 'method_'+methods[m]+'_'+i;
              $('li[alt*='+method+'][class*=rule_'+rules[ri]+']')
                .addClass("approved_validation_document").addClass("crossout");
              $('li[alt*='+method+'][class*=rule_'+rules[ri]+'] ul')
                .append('<li class="applied_doc tree-connect" alt="'+
                identifier+'">applied: '+alt+'</li>');
            }
          }
        }
      }
    });
    var show_documents=true;
    $(':radio[name*=has_documents]').click(function(){
      if($(this).val()=="false"){
        show_documents=false;
        $('#documents_upload_instructions, #multi_upload').hide();
        //$('#button_container').fadeIn();
      }
      else{
        show_documents=true;
        $('#documents_upload_instructions, #multi_upload').show();
        //$('#button_container').fadeOut();
      }
    });
    $('.has_csr_container').click(function(){
      $(this).siblings().filter(':radio[name*=has_documents]').click();
    });
    $('.clickable_choice').click(function(e){
      $(this).siblings().filter(':input').click();
    });
    $(':radio[name*=refer_to_others]').click(function(e){
      $(this).refer_to_others_toggle();
    });
    if($(':radio:checked[name*=refer_to_others]').length>0)
      $(':radio:checked[name*=refer_to_others]').refer_to_others_toggle();
    $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::DOCUMENTS_SECTION%>]').click(
      function(){
        $('#proof_of_dcv_section').show();
        $('#documents_upload_heading').hide();
        $('#documents_upload_section').hide();});
    $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::DCV_SECTION%>]').click(
      function(){
        $('#proof_of_dcv_section').hide();
        $('#documents_upload_heading').show();
        $('#documents_upload_section').show();});
    $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::BOTH_SECTIONS%>]').click(
      function(e){
        $('#proof_of_dcv_section').hide();
        $('#documents_upload_heading').hide();
        $('#documents_upload_section').hide();
        });
    $(':radio[name*=has_documents][value=false]').click();
    $('#send_to_ca').livequery(
      'ajax:beforeSend', function(){
        $('#processing_ca').show();
      }).livequery(
      'ajax:success', function(event, data, status, xhr){
        if(data!="null"){
          $('dl#sent_to_ca_results').prepend(data.result);
        }
      }).livequery(
      'ajax:complete', function(event, data, status, xhr){
        $('#processing_ca').hide();
      });
    $('#send_dcv_email').livequery(
      'ajax:beforeSend', function(){
          $('#busy_sending').show();
          $('#ajax_response').remove();
          status_bar = $("<div class='flash_message close' id='ajax_response'></div>");
          status_bar.hide();
          $('.upload_document_container').before(status_bar);
      }).livequery(
      'ajax:success', function(event, data, status, xhr){
        if(data!="null"){
          if(typeof data.email_address=="undefined"){
            status_bar.addClass('notice').append("<span>Validation email sent to "+
                    data.domain_control_validation.email_address+".</span>");
            $('#dcv_sent_to_address').html(data.domain_control_validation.email_address).effect(
                    "highlight", {color:'green'}, 500);
          }
          else{
            //assume an error
            status_bar.addClass('error').append("<span>"+data.email_address+"</span>");
          }
          $('#busy_sending').hide();
        }
      }).livequery(
      'ajax:complete', function(event, data, status, xhr){
        status_bar.fadeIn();
        $('#processing_ca').hide();
      });
    $('#new_other_party_validation_request').livequery(
      'ajax:beforeSend', function(){
        $('#ajax_response').remove();
        status_bar = $("<div class='flash_message close' id='ajax_response'></div>");
        status_bar.hide();
        $('.upload_document_container').before(status_bar);
      }).livequery(
      'ajax:success', function(event, data, status, xhr){
        if(data!="null"){
          if(typeof data.other_party_validation_request.email_addresses!=="undefined"){
            var emails = $("<ul></ul>");
            $.each(data.other_party_validation_request.email_addresses, function(key, value){
              emails.append("<li>"+value+"</li>");
            });
            status_bar.addClass('notice').append("<span>Request for validation sent to </span>");
            status_bar.find('span').append(emails);
          }
          else{
            //assume an error
            status_bar.addClass('error').append("<span>Error!</span>");
          }
        }
      }).livequery('ajax:error', function(event, xhr, status, error) {
          if(typeof(data.base)!=='undefined')
            status_bar.addClass('error').append("<span>"+data.base+"</span>");
          else{
            var msg = $("<span><ul></ul></span>");
            $.each(data, function(key, value){
              msg.append("<li>"+key+" "+value+"</li>");
            });
            status_bar.addClass('error').append(msg);
          }
      }).livequery('ajax:complete', function(event, data, status, xhr) {
          status_bar.fadeIn();
      });

    // loading domains
    var url = window.location.pathname;
    if (url.substr(url.lastIndexOf('/') + 1, url.length) == 'new') {
      <%if @certificate_order%>
        var is_all_validated = '<%= @all_validated%>';
        if (is_all_validated == 'true') {
          $('body').addClass('no_scroll_y');

          var redirectUrl = '<%=certificate_order_path(@ssl_slug, @certificate_order)%>';

          var redirect_message_wrap = $('<div></div>');
          redirect_message_wrap.attr('class', 'redirect_message_wrap');

          var redirect_message = $('<div></div>');
          redirect_message.attr('class', 'redirect_message');

          var span = $('<span></span>');
          span.append('All domains has already been validated. It will be issued soon. \n');
          span.append('Redirecting to Certificate Order Page now ...');

          redirect_message.append(span);
          redirect_message_wrap.append(redirect_message);
          redirect_message_wrap.insertBefore($('#header'));

          $('.domains_loader_wrap').hide();

          var delay = 1000;
          window.setTimeout(function() {
            $('body').removeClass('no_scroll_y');
            window.location.href = redirectUrl;
          }, delay);
        } else {
          // Loading domains initially.
          var domain_str = $('#ori_domain_names_str').val();
          var domains = [];
          if (domain_str.length > 0) {
            var ajaxDomainUrl = '<%=get_asynch_domains_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';

            <%
              # is_basic = @certificate_order.certificate.is_basic?
              # is_free = @certificate_order.certificate.is_free?
              # is_high_assurance = @certificate_order.certificate.is_high_assurance?

              is_ucc = @certificate_order.certificate.is_ucc?
              is_evucc = @certificate_order.certificate.is_evucc?
              is_premium_ssl = @certificate_order.certificate.is_premium_ssl?
              is_wildcard = @certificate_order.certificate.is_wildcard?
              ext_order_number = @certificate_order.external_order_number ? @certificate_order.external_order_number : 'eon'
            %>

            /*var total_domains = domain_str.split(',');
            var cert_type = '< %= (is_basic || is_free || is_high_assurance) ? true : false%>';
            if (cert_type == 'true') {
              $.each(total_domains, function(idx, value) {
                if (value.indexOf('www.') == -1) {
                  if ($.inArray(value, domains) == -1) {
                    domains.push(value);
                  }
                } else {
                  if ($.inArray(value.substr(4), domains) == -1) {
                    domains.push(value);
                  }
                }
              });
              $('#ori_domain_names_str').val(domains.join(','));
            } else {
              domains = total_domains;
            }*/

            var domains = domain_str.split(',');
            var total = domains.length;
            var validated_domains = '<%=@validated_domains%>'.split(',');
            var domain_status = JSON.parse('<%= raw @ds ? @ds.to_json : {}%>');
            var domain_status_keys = Object.keys(domain_status);
            var unvalidated_domain_total = total - (validated_domains[0] == '' ? 0 : validated_domains.length);
            var unvalidated_domain_success_count = 0;
            var unvalidated_domain_failed_count = 0;
            var is_error = false;

            $.each(domains, function(idx, value) {
              if ($.inArray(value, validated_domains) == -1) {
                $.ajax({
                  url: ajaxDomainUrl,
                  data: {
                    domain_name: value,
                    domain_count: total,
                    domain_status: domain_status_keys.length > 0 ?
                      ('<%=is_ucc%>' == 'true' ?
                        domain_status[value] :
                        domain_status[domain_status_keys[0]]
                      ) :
                      null,
                    ext_order_number: '<%=ext_order_number%>'
                  },
                  type: "POST",
                  success: function(result) {
                    unvalidated_domain_success_count ++;

                    // TODO: Loading Domain.
                    if ($.isEmptyObject(result)) {
                      is_error = true;
                    } else {
                      Object.keys(result).map(function(key) {
                        if (key == 'tr_info') {
                          var trElement = $('<tr></tr>');
                          if (!$.isEmptyObject(result[key]['options'])) {
                            trElement.attr('class', 'certificate_name');
                          } else {
                            trElement.attr('class', 'certificate_name validated');
                          }
                          /*trElement.attr('id', 'certificate_name__' + value);*/
                          trElement.attr('id', 'certificate_name:' + value);

                          $('.domain_list').append(trElement);

                          var tdElement = $('<td></td>');

                          if (!$.isEmptyObject(result[key]['options'])) {
                            var checkboxElement = $('<input></input>');
                            checkboxElement.attr('class', 'check_box');
                            checkboxElement.attr('id', value);
                            checkboxElement.attr('type', 'checkbox');
                            tdElement.append(checkboxElement);

                            <%if is_ucc || is_evucc || is_premium_ssl%>
                              var btnElement = $('<input></input>');
                              btnElement.attr('class', 'btn_remove_domain');
                              btnElement.attr('type', 'button');
                              btnElement.attr('value', 'Remove');
                              tdElement.append(btnElement);
                            <%end%>

                            var editBtnElement = $('<input></input>');
                            editBtnElement.attr('class', 'btn_edit_domain');
                            editBtnElement.attr('type', 'button');
                            editBtnElement.attr('value', 'Edit');
                            tdElement.append(editBtnElement);
                          }
                          var cnsElement = $('<input></input>');
                          cnsElement.attr('type', 'hidden');
                          cnsElement.attr('name', 'cert_names[' + value + ']');
                          cnsElement.attr('value', value);
                          tdElement.append(cnsElement);
                          trElement.append(tdElement);

                          tdElement = $('<td></td>');
                          tdElement.attr('class', 'domain_name ' + value);
                          tdElement.append(value);
                          trElement.append(tdElement);

                          tdElement = $('<td></td>');
                          var sltElement = $('<select></select>');
                          sltElement.attr('name', 'domains[' + value + '][dcv]');
                          sltElement.attr('id', 'domains_' + value + '_dcv');
                          sltElement.attr('alt', value);
                          <%if Settings.enable_caa%>
                          if (result[key]['caa_check'] == 'failed' || result[key]['caa_check'] == '') {
                            // TODO: Disable CAA CHECK temporarily for now.
                            /*sltElement.attr('disabled', true);*/
                            sltElement.attr('disabled', false);
                          }
                          <%end%>

                          var optElement = $('<option></option>');
                          optElement.attr('value', '');
                          optElement.append('Please select a validation method');
                          sltElement.append(optElement);

                          Object.keys(result[key]['options']).map(function(optGroupKey) {
                            var optGroupElement = $('<optgroup></optgroup>');
                            optGroupElement.attr('label', optGroupKey);

                            Object.keys(result[key]['options'][optGroupKey]).map(function(optKey) {
                              var optElement = $('<option></option>');
                              optElement.attr('value', optKey);
                              optElement.append(result[key]['options'][optGroupKey][optKey]);
                              optGroupElement.append(optElement);
                            });

                            sltElement.append(optGroupElement);
                          });

                          tdElement.append(sltElement);
                          trElement.append(tdElement);
                          $('[name="domains[' + value + '][dcv]"]').val(result[key]['slt_option']);

                          <%if Settings.enable_caa%>
                            tdElement = $('<td></td>');
                            if (result[key]['caa_check'] == 'failed') {
                              var divElement = $('<div></div>');
                              divElement.attr('class', 'failed');
                              divElement.append(result[key]['caa_check']);
                              tdElement.append(divElement);
                            } else if (result[key]['caa_check'] == 'passed') {
                              var divElement = $('<div></div>');
                              divElement.attr('class', 'passed');
                              divElement.append(result[key]['caa_check']);
                              tdElement.append(divElement);
                            }

                            tdElement.attr('class', 'caa_check ' + value);
                            trElement.append(tdElement);
                          <%end%>

                          tdElement = $('<td></td>');
                          tdElement.attr('class', 'pretest ' + value);
                          var divElement = $('<div></div>');
                          divElement.append(result[key]['pretest']);
                          tdElement.append(divElement);
                          trElement.append(tdElement);

                          tdElement = $('<td></td>');
                          tdElement.append(result[key]['attempt']);
                          tdElement.attr('class', 'attempt ' + value);
                          trElement.append(tdElement);

                          tdElement = $('<td></td>');
                          tdElement.append(result[key]['attempted_on']);
                          tdElement.attr('class', 'attempted_on ' + value);
                          trElement.append(tdElement);

                          var tdElement = $('<td></td>');
                          tdElement.append(result[key]['status']);
                          tdElement.attr('class', 'status ' + value);
                          trElement.append(tdElement);

                        } else if (key == 'tr_instruction' && !result[key]) {
                          var trElement = $('<tr></tr>');
                          trElement.attr('class', 'instruction');
                          $('.domain_list').append(trElement);

                          tdElement = $('<td></td>');
                          tdElement.attr('colspan', 2);
                          trElement.append(tdElement);

                          var tdElement = $('<td></td>');
                          tdElement.attr('colspan', 6);
                          tdElement.append('Instructions: ');

                          var spanElement = $('<span></span>');
                          spanElement.attr('alt', 'domains[' + value + '][dcv]');
                          spanElement.append('Please select a validation method');
                          tdElement.append(spanElement);
                          trElement.append(tdElement);
                        }
                      });

                      $('select[id^=domains]').last().change();
                    }

                    if ((unvalidated_domain_success_count + unvalidated_domain_failed_count) == unvalidated_domain_total) {
                      $('.domains_loader_wrap').hide();
                      if (is_error) {
                        var message_wrap_element = $('<div></div>');
                        message_wrap_element.attr('class', 'flash_message error');

                        var message_element = $('<span></span>');
                        message_element.append('Error detected during domain loading. Please reload this page.');
                        message_wrap_element.append(message_element);

                        var btn_element = $('<small></small>');
                        var close_btn_element = $('<div></div>');
                        close_btn_element.attr('class', 'close_flash_message');

                        var close_sign_element = $('<span></span>');
                        close_sign_element.append('X');

                        close_btn_element.append(close_sign_element);
                        close_btn_element.append('close');

                        btn_element.append(close_btn_element);
                        message_wrap_element.append(btn_element);

                        if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                          $('#content').find('.inner').children().first().remove();
                        }
                        message_wrap_element.insertBefore($('#content').find('.inner').children().first());
                      } else {
                        $('#upload_validations').show();
                      }
                    }
                  },
                  error: function() {
                    unvalidated_domain_failed_count ++;
                    is_error = true;

                    if ((unvalidated_domain_success_count + unvalidated_domain_failed_count) == unvalidated_domain_total) {
                      $('.domains_loader_wrap').hide();

                      var message_wrap_element = $('<div></div>');
                      message_wrap_element.attr('class', 'flash_message error');

                      var message_element = $('<span></span>');
                      message_element.append('Error detected during domain loading. Please reload this page.');
                      message_wrap_element.append(message_element);

                      var btn_element = $('<small></small>');
                      var close_btn_element = $('<div></div>');
                      close_btn_element.attr('class', 'close_flash_message');

                      var close_sign_element = $('<span></span>');
                      close_sign_element.append('X');

                      close_btn_element.append(close_sign_element);
                      close_btn_element.append('close');

                      btn_element.append(close_btn_element);
                      message_wrap_element.append(btn_element);

                      if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                        $('#content').find('.inner').children().first().remove();
                      }
                      message_wrap_element.insertBefore($('#content').find('.inner').children().first());
                    }
                  }
                });
              } else {
                var trElement = $('<tr></tr>');
                trElement.attr('class', 'certificate_name validated');
                /*trElement.attr('id', 'certificate_name__' + value);*/
                trElement.attr('id', 'certificate_name:' + value);

                $('.domain_list').append(trElement);

                var tdElement = $('<td></td>');
                var cnsElement = $('<input></input>');
                cnsElement.attr('type', 'hidden');
                cnsElement.attr('name', 'cert_names[' + value + ']');
                cnsElement.attr('value', value);
                tdElement.append(cnsElement);
                trElement.append(tdElement);

                tdElement = $('<td></td>');
                tdElement.attr('class', 'domain_name ' + value);
                tdElement.append(value);
                trElement.append(tdElement);

                tdElement = $('<td></td>');
                tdElement.append('Validation satisfied for ' + value);
                trElement.append(tdElement);

                <%if Settings.enable_caa%>
                  tdElement = $('<td></td>');
                  tdElement.attr('class', 'caa_check ' + value);

                  var divElement = $('<div></div>');
                  divElement.attr('class', domain_status[value]['caa_check']);
                  divElement.append(domain_status[value]['caa_check']);
                  tdElement.append(divElement);
                  trElement.append(tdElement);
                <%end%>

                tdElement = $('<td></td>');
                tdElement.attr('class', 'pretest ' + value);
                var divElement = $('<div></div>');
                divElement.append('n/a');
                tdElement.append(divElement);
                trElement.append(tdElement);

                tdElement = $('<td></td>');
                tdElement.append(domain_status[value]['method'].toLowerCase().replace('%28', '').replace('%29', ''));
                tdElement.attr('class', 'attempt ' + value);
                trElement.append(tdElement);

                tdElement = $('<td></td>');
                tdElement.append(domain_status[value]['attempted_on']);
                tdElement.attr('class', 'attempted_on ' + value);
                trElement.append(tdElement);

                var tdElement = $('<td></td>');
                tdElement.append('validated');
                tdElement.attr('class', 'status ' + value);
                trElement.append(tdElement);
              }
            });
          } else {
            $('.domains_loader_wrap').hide();
          }
        }

        // Form Submit by AJAX
        $('form.api_certificate_request').ajaxForm({
          dataType: "json",
          beforeSubmit: function(){
            var domain_list = $('tbody.domain_list').find('tr.certificate_name');
            var ori_domain_names_str = $('#ori_domain_names_str').val().split(',');
            var domain_names_str = '';
            var exist_removed_domain = $('#exist_removed_domain').val() == 'true' ? 'true' : 'false';

            var enable_caa = '<%=Settings.enable_caa%>';
            var all_passed_caa_check = true;
            var caa_check_failed_domain_names_str = '';

            $.each(domain_list, function(idx, domain) {
              if ($(domain).hasClass('removed_domain') == false && $(domain).hasClass('validated') == false) {
                domain_names_str = domain_names_str.concat(',' + $(domain).find('.check_box').prop('id'));

                if (enable_caa == 'true') {
                  if ($(domain).find('.caa_check').text() == 'passed') {
                    all_passed_caa_check &= true;
                  } else {
                    all_passed_caa_check &= false;
                    caa_check_failed_domain_names_str = caa_check_failed_domain_names_str.concat(',' + $(domain).find('.check_box').prop('id'));
                  }
                }
              } else if ($(domain).hasClass('validated') == true) {
                domain_names_str = domain_names_str.concat(',' + $(domain).find('td:first-child').children().first().val());

                if (enable_caa == 'true') {
                  if ($(domain).find('.caa_check').text() == 'passed') {
                    all_passed_caa_check &= true;
                  } else {
                    all_passed_caa_check &= false;
                    caa_check_failed_domain_names_str = caa_check_failed_domain_names_str.concat(',' + $(domain).find('.check_box').prop('id'));
                  }
                }
              }
            });

            domain_names_str = domain_names_str.substr(1).split(',');

            var api_domain = '<%=api_domain%>';
            var update_dcv = '<%=api_certificate_update_v1_4_path(@certificate_order.ref)%>';
            var replace_ssl = '<%=api_certificate_replace_v1_4_path(@certificate_order.ref)%>';

            if ((exist_removed_domain == 'false') && (
                $(ori_domain_names_str).not(domain_names_str).length == 0 &&
                $(domain_names_str).not(ori_domain_names_str).length == 0
              )) {
              $(this).attr('url', api_domain + update_dcv);
            } else {
              $(this).attr('url', api_domain + replace_ssl);
            }

            confirmed = confirm('Proceed with validation?');
            if(confirmed){
              $('#waiting_bar').show();
            }
            return confirmed;
          },
          success: function(data, status){
            if (data.errors) {
              var message_wrap_element = $('<div></div>');
              message_wrap_element.attr('class', 'flash_message error');

              var message_element = $('<span></span>');
              message_element.html('The following fields have errors: </br><ul>');
              $.each(data.errors, function(i, item) {
                message_element.append('<li>' + i + ': ' + item.toString() + '</li>');
              });
              message_element.append('</ul>');
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                $('#content').find('.inner').children().first().remove();
              }
              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
              $('#waiting_bar').hide();
            } else {
              location.reload(true);
            }
          }
        });

        // Click Remove button per domain.
        $(document).on('click', '.btn_remove_domain', function() {
          // Removing flash message if exist.
          if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
            $('#content').find('.inner').children().first().remove();
          }

          var message_wrap_element = $('<div></div>');
          var domain_list = $('tbody.domain_list').find('tr.certificate_name');
          var validated_domain_list = $('tbody.domain_list').find('tr.certificate_name.validated');

          // Messaging if try to remove last domain.
          if (validated_domain_list.length == 0 && domain_list.length == 1) {
            message_wrap_element.attr('class', 'flash_message error');

            var message_element = $('<span></span>');
            message_element.append('The order must contain at least one domain.');
            message_wrap_element.append(message_element);

            var btn_element = $('<small></small>');
            var close_btn_element = $('<div></div>');
            close_btn_element.attr('class', 'close_flash_message');

            var close_sign_element = $('<span></span>');
            close_sign_element.append('X');

            close_btn_element.append(close_sign_element);
            close_btn_element.append('close');

            btn_element.append(close_btn_element);
            message_wrap_element.append(btn_element);

            message_wrap_element.insertBefore($('#content').find('.inner').children().first());
          } else {
            $.each(domain_list, function(idx, domain) {
              $(domain).find('.check_box').parent().css('background-color', 'white');
            });

            var domain_name = $(this).prev().prop('id');
            var confirmMsg = 'Are you sure you want to remove the following domain from this order?';
            confirmMsg = confirmMsg.concat('\r\n      ' + domain_name);
            var ajaxRemoveDomainUrl = '<%=remove_domains_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';

            if (confirm(confirmMsg)) {
              // Hiding validation button and showing loader.
              $('#upload_validations').hide();
              $('.domains_loader_wrap').show();

              $.ajax({
                url: ajaxRemoveDomainUrl,
                data: {
                  domain_names: domain_name
                },
                type: "POST",
                success: function (result) {
                  if (Object.keys(result).length > 0) {
                    if ($.inArray('no-user', Object.keys(result)) == -1) {
                      // Displaying flash message.
                      message_wrap_element.attr('class', 'flash_message error');

                      var message_element = $('<span></span>');
                      Object.keys(result).map(function(key) {
                        /*$('td:first-child', $('[id="certificate_name__' + key + '"]')).css('background-color', 'red');*/
                        $('td:first-child', $('[id="certificate_name:' + key + '"]')).css('background-color', 'red');
                        message_element.append(key + ' : ' + result[key] + '\r\n');
                      });
                      message_wrap_element.append(message_element);

                      var btn_element = $('<small></small>');
                      var close_btn_element = $('<div></div>');
                      close_btn_element.attr('class', 'close_flash_message');

                      var close_sign_element = $('<span></span>');
                      close_sign_element.append('X');

                      close_btn_element.append(close_sign_element);
                      close_btn_element.append('close');

                      btn_element.append(close_btn_element);
                      message_wrap_element.append(btn_element);

                      message_wrap_element.insertBefore($('#content').find('.inner').children().first());

                      // Hiding loader and showing validation button.
                      $('.domains_loader_wrap').hide();
                      $('#upload_validations').show();
                    } else {
                      location.reload(true);
                    }
                  } else {
                    // Remove domains from UI.
                    /*$('[id="certificate_name__' + domain_name + '"]').next().remove();
                    $('[id="certificate_name__' + domain_name + '"]').remove();*/
                    $('[id="certificate_name:' + domain_name + '"]').next().remove();
                    $('[id="certificate_name:' + domain_name + '"]').remove();

                    var domain_str = $('#ori_domain_names_str').val();
                    domain_str = domain_str.replace(',' + domain_name, '');
                    $('#ori_domain_names_str').val(domain_str);
                    $('#exist_removed_domain').val('true');

                    // Displaying flash message.
                    message_wrap_element.attr('class', 'flash_message notice');

                    var message_element = $('<span></span>');
                    message_element.html('The Domain <strong>' + domain_name + '</strong> has been removed successfully.');
                    message_wrap_element.append(message_element);

                    var btn_element = $('<small></small>');
                    var close_btn_element = $('<div></div>');
                    close_btn_element.attr('class', 'close_flash_message');

                    var close_sign_element = $('<span></span>');
                    close_sign_element.append('X');

                    close_btn_element.append(close_sign_element);
                    close_btn_element.append('close');

                    btn_element.append(close_btn_element);
                    message_wrap_element.append(btn_element);

                    message_wrap_element.insertBefore($('#content').find('.inner').children().first());

                    // Hiding Loader
                    $('.domains_loader_wrap').hide();

                    // Checking remained domains are all validated.
                    if ($('tbody.domain_list').find('tr.certificate_name').length !=
                      $('tbody.domain_list').find('tr.certificate_name.validated').length) {
                      $('#upload_validations').show();
                    }
                  }
                }
              });
            }
          }
        });

        // Click Edit button per domain.
        $(document).on('click', '.btn_edit_domain', function() {
          <%if !is_ucc && !is_evucc && !is_premium_ssl%>
            var reprocess_url = '<%=reprocess_certificate_order_path(@ssl_slug, @certificate_order)%>';
            window.location.href = reprocess_url;
            return false;
          <%end%>
          $(this).parent().css('background-color', 'white');
          $(this).siblings().prop('disabled', true);

          var domain_name = $(this).parent().next().text();
          var inputElement = $('<input></input>');
          inputElement.attr('value', domain_name);

          $(this).parent().next().empty();
          $(this).parent().next().append(inputElement);

          $(this).attr('class', 'btn_save_domain');
          $(this).attr('value', 'Save');
        });

        // Click Save button per domain.
        $(document).on('click', '.btn_save_domain', function() {
          if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
            $('#content').find('.inner').children().first().remove();
          }

          var new_domain_name = $(this).parent().next().find('input').val();
          var origin_name = $('input:first-child', $(this).parent()).prop('id');

          if (new_domain_name.indexOf('_') > -1) {
            $(this).parent().next().find('input').val(origin_name);

            var message_wrap_element = $('<div></div>');
            message_wrap_element.attr('class', 'flash_message error');

            var message_element = $('<span></span>');
            message_element.append(new_domain_name + ' : Domain names can not contains \'_\' underline letter.');
            message_wrap_element.append(message_element);

            var btn_element = $('<small></small>');
            var close_btn_element = $('<div></div>');
            close_btn_element.attr('class', 'close_flash_message');

            var close_sign_element = $('<span></span>');
            close_sign_element.append('X');

            close_btn_element.append(close_sign_element);
            close_btn_element.append('close');

            btn_element.append(close_btn_element);
            message_wrap_element.append(btn_element);

            message_wrap_element.insertBefore($('#content').find('.inner').children().first());

            return false;
          }

          <%if is_wildcard%>
            if (new_domain_name.substr(0, 2) != '*.') {
              alert('For this order(whildcard), domain name should be begin with "*."');
              return false;
            } else if ((new_domain_name.match(/\*./g) || []).length > 1 || (new_domain_name.match(/\*/g) || []).length > 1) {
              alert('For this order(whildcard), domain name is not allowed to use "*." or "*" several times');
              return false;
            }
          <%end%>

          if (new_domain_name == origin_name) {
            $(this).parent().next().empty();
            $(this).parent().next().append(origin_name);

            $(this).siblings().prop('disabled', false);
            $(this).attr('class', 'btn_edit_domain');
            $(this).attr('value', 'Edit');
          } else {
            // checking domain name's duplication.
            var domain_list = $('tbody.domain_list').find('tr.certificate_name');
            var is_duplicated = false;
            $.each(domain_list, function(idx, domain) {
              var other_domain_name = $(domain).find('.check_box').prop('id');
              if (other_domain_name == new_domain_name) {
                is_duplicated = true;
                return false;
              }
            });

            if (is_duplicated) {
              $(this).parent().next().find('input').val(origin_name);

              var message_wrap_element = $('<div></div>');
              message_wrap_element.attr('class', 'flash_message error');

              var message_element = $('<span></span>');
              message_element.append(new_domain_name + ' : This domain name already exist.\r\n');
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
            } else {
              $(this).siblings().prop('disabled', false);
              $(this).attr('class', 'btn_edit_domain');
              $(this).attr('value', 'Edit');

              // Reflecting new domain names to elements related with domain name.
              $('input:first-child', $(this).parent()).attr('id', new_domain_name);
              $('input:last-child', $(this).parent()).attr('value', new_domain_name);

              var siblings = $(this).parent().siblings();
              $.each(siblings, function(idx, sibling) {
                var class_str = $(sibling).prop('class');

                if (class_str === '') {
                  $('select', $(sibling)).attr('name', 'domains[' + new_domain_name + '][dcv]');
                  $('select', $(sibling)).attr('id', 'domains_' + new_domain_name + '_dcv');
                  $('select', $(sibling)).attr('alt', new_domain_name);
                } else {
                  if (class_str.split(' ')[0] === 'domain_name') {
                    $(sibling).empty();
                    $(sibling).append(new_domain_name);
                  }
                  $(sibling).attr('class', class_str.split(' ')[0] + ' ' + new_domain_name);
                }
              });

              $('span', $(this).parent().parent().next()).attr('alt', 'domains[' + new_domain_name + '][dcv]');

              // Getting all email address for new domain.
              var ajaxGetEmailAddressUrl = '<%=get_email_addresses_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';
              var domain_str = $('#ori_domain_names_str').val();
              var total = 0;
              if (domain_str.length > 0) {
                total = domain_str.split(',').length;
                $('#upload_validations').hide();
                $('.domains_loader_wrap').show();

                $.ajax({
                  url: ajaxGetEmailAddressUrl,
                  data: {
                    domain_name: new_domain_name,
                    total_domains: total
                  },
                  type: "POST",
                  success: function (result) {
                    if ($.inArray('no-user', Object.keys(result)) == -1) {
                      var optGroupElement = $('optgroup:first', $('[name="domains[' + new_domain_name + '][dcv]"]'));
                      optGroupElement.empty();

                      Object.keys(result['new_emails']).map(function (optKey) {
                        var optElement = $('<option></option>');
                        optElement.attr('value', optKey);
                        optElement.append(result['new_emails'][optKey]);
                        optGroupElement.append(optElement);
                      });

                      $('[name="domains[' + new_domain_name + '][dcv]"]').change();
                      $('[name="domains[' + new_domain_name + '][dcv]"]').parent().next().empty();
                      if (result['caa_check'] == 'failed') {
                        // TODO: Disable CAA CHECK temporarily for now.
                        /*$('[name="domains[' + new_domain_name + '][dcv]"]').attr('disabled', true);*/
                        $('[name="domains[' + new_domain_name + '][dcv]"]').attr('disabled', false);
                        var divElement = $('<div></div>');
                        divElement.attr('class', 'failed');
                        divElement.append(result['caa_check']);
                        $('[name="domains[' + new_domain_name + '][dcv]"]').parent().next().append(divElement);
                      } else if (result['caa_check'] == 'passed') {
                        $('[name="domains[' + new_domain_name + '][dcv]"]').attr('disabled', false);
                        var divElement = $('<div></div>');
                        divElement.attr('class', 'passed');
                        divElement.append(result['caa_check']);
                        $('[name="domains[' + new_domain_name + '][dcv]"]').parent().next().append(divElement);
                      } else {
                        $('[name="domains[' + new_domain_name + '][dcv]"]').attr('disabled', false);
                        $('[name="domains[' + new_domain_name + '][dcv]"]').parent().next().append(result['caa_check']);
                      }

                      $('.domains_loader_wrap').hide();
                      $('#upload_validations').show();
                    } else {
                      location.reload(true);
                    }
                  }
                });
              }
            }
          }
        });

        // Select Items for selected all domains.
        $('#validation_common_type').change(function() {
          // Removing flash message if exist.
          if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
            $('#content').find('.inner').children().first().remove();
          }

          // Getting selected type value.
          var slt_type = $(this).val();

          // Formatting validation common type to none.
          $(this).val('');

          var domain_list = $('tbody.domain_list').find('tr.certificate_name');
          $.each(domain_list, function(idx, domain) {
            $(domain).find('.check_box').parent().css('background-color', 'white');
          });

          switch(slt_type) {
            case 'delete' :
              var confirmMsg = 'Are you sure you want to remove the following domain(s) from this order?';
              var domain_names = '';

              $.each(domain_list, function(idx, domain) {
                var is_checked = $(domain).find('.check_box').prop('checked');
                if (is_checked) {
                  confirmMsg = confirmMsg.concat('\r\n      ' + $(domain).find('.check_box').prop('id'));
                  domain_names = domain_names.concat(',' + $(domain).find('.check_box').prop('id'));
                }
              });

              // Check whether there are no checked for delete.
              if (domain_names.length > 0) {
                var message_wrap_element = $('<div></div>');

                if (domain_names.substr(1).split(',').length == domain_list.length) {
                  // Displaying flash message.
                  message_wrap_element.attr('class', 'flash_message error');

                  var message_element = $('<span></span>');
                  message_element.append('The order must contain at least one domain.');
                  message_wrap_element.append(message_element);

                  var btn_element = $('<small></small>');
                  var close_btn_element = $('<div></div>');
                  close_btn_element.attr('class', 'close_flash_message');

                  var close_sign_element = $('<span></span>');
                  close_sign_element.append('X');

                  close_btn_element.append(close_sign_element);
                  close_btn_element.append('close');

                  btn_element.append(close_btn_element);
                  message_wrap_element.append(btn_element);

                  message_wrap_element.insertBefore($('#content').find('.inner').children().first());
                } else {
                  if (confirm(confirmMsg)) {
                    // Hiding validation button and showing loader.
                    $('#upload_validations').hide();
                    $('.domains_loader_wrap').show();

                    var ajaxRemoveDomainUrl = '<%=remove_domains_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';

                    $.ajax({
                      url: ajaxRemoveDomainUrl,
                      data: {
                        domain_names: domain_names.substr(1)
                      },
                      type: "POST",
                      success: function (result) {
                        var domain_str = $('#ori_domain_names_str').val();

                        if (Object.keys(result).length > 0) {
                          if ($.inArray('no-user', Object.keys(result)) != -1) {
                            location.reload(true);
                          } else {
                            // Remove domains from UI what has been removed successfully
                            $.each(domain_names.substr(1).split(','), function(ids, domain) {
                              if ($.inArray(domain, Object.keys(result)) == -1) {
                                domain_str = domain_str.replace(',' + domain, '');

                                /*$('[id="certificate_name__' + domain + '"]').next().remove();
                                $('[id="certificate_name__' + domain + '"]').remove();*/
                                $('[id="certificate_name:' + domain + '"]').next().remove();
                                $('[id="certificate_name:' + domain + '"]').remove();

                                $('#exist_removed_domain').val('true');
                              }
                            });

                            // Displaying error flash message for domains what failed to remove.
                            message_wrap_element.attr('class', 'flash_message error');

                            var message_element = $('<span></span>');
                            Object.keys(result).map(function(key) {
                              /*$('td:first-child', $('[id="certificate_name__' + key + '"]')).css('background-color', 'red');*/
                              $('td:first-child', $('[id="certificate_name:' + key + '"]')).css('background-color', 'red');
                              message_element.append(key + ' : ' + result[key] + '<br />');
                            });
                            message_wrap_element.html(message_element);

                            var btn_element = $('<small></small>');
                            var close_btn_element = $('<div></div>');
                            close_btn_element.attr('class', 'close_flash_message');

                            var close_sign_element = $('<span></span>');
                            close_sign_element.append('X');

                            close_btn_element.append(close_sign_element);
                            close_btn_element.append('close');

                            btn_element.append(close_btn_element);
                            message_wrap_element.append(btn_element);

                            message_wrap_element.insertBefore($('#content').find('.inner').children().first());

                            // Hiding loader and showing validation button.
                            $('.domains_loader_wrap').hide();
                            $('#upload_validations').show();
                          }
                        } else {
                          // Remove domains from UI what has been removed successfully
                          $.each(domain_names.substr(1).split(','), function(ids, domain) {
                            domain_str = domain_str.replace(',' + domain, '');

                            /*$('[id="certificate_name__' + domain + '"]').next().remove();
                            $('[id="certificate_name__' + domain + '"]').remove();*/
                            $('[id="certificate_name:' + domain + '"]').next().remove();
                            $('[id="certificate_name:' + domain + '"]').remove();
                          });

                          $('#exist_removed_domain').val('true');

                          // Displaying flash message.
                          message_wrap_element.attr('class', 'flash_message notice');

                          var message_element = $('<span></span>');
                          message_element.append('All of selected domain(s) has been removed successfully.');
                          message_wrap_element.append(message_element);

                          var btn_element = $('<small></small>');
                          var close_btn_element = $('<div></div>');
                          close_btn_element.attr('class', 'close_flash_message');

                          var close_sign_element = $('<span></span>');
                          close_sign_element.append('X');

                          close_btn_element.append(close_sign_element);
                          close_btn_element.append('close');

                          btn_element.append(close_btn_element);
                          message_wrap_element.append(btn_element);

                          message_wrap_element.insertBefore($('#content').find('.inner').children().first());

                          // Hiding loader
                          $('.domains_loader_wrap').hide();

                          // Checking remained domains are all validated.
                          if ($('tbody.domain_list').find('tr.certificate_name').length !=
                            $('tbody.domain_list').find('tr.certificate_name.validated').length) {
                            $('#upload_validations').show();
                          }
                        }

                        $('#ori_domain_names_str').val(domain_str);
                      }
                    });
                  } else {
                    // Making as unchecked for all checked domains.
                    $.each(domain_list, function(idx, domain) {
                      if ($(domain).find('.check_box').prop('checked')) {
                        $(domain).find('.check_box').prop('checked', false);
                      }
                    });
                  }
                }
              } else {
                alert('There are no selected domains for delete.');
              }

              break;
            case 'http_csr_hash' :
            case 'https_csr_hash' :
            case 'cname_csr_hash' :
              var changed_count = 0;
              $.each(domain_list, function(idx, domain) {
                if (!$(domain).hasClass('removed_domain')) {
                  var is_checked = $(domain).find('.check_box').prop('checked');
                  if (is_checked) {
                    $(domain).find('select').val(slt_type).trigger('change');
                    changed_count ++;
                  }
                }
              });

              if (changed_count === 0) {
                if (slt_type == 'http_csr_hash') {
                  alert('There are no selected domains for "HTTP CSR HASH"');
                } else if (slt_type == 'https_csr_hash') {
                  alert('There are no selected domains for "HTTPS CSR HASH"');
                } else {
                  alert('There are no selected domains for "CNAME CAR HASH"');
                }
              }

              break;
            default:
          }
        });

        // Click New button for create new unique value
        $(document).on('click', '.btn_new_unique_value', function() {
          $('.current_unique_value_block').hide();
          $('.btn_new_unique_value').hide();
          $('.new_unique_value').show();
          $('.btn_save_new_unique_value').show();
          $('.btn_cancel_new_unique_value').show();
        });

        // Click Cancel button for new unique value
        $(document).on('click', '.btn_cancel_new_unique_value', function() {
          $('.new_unique_value').hide();
          $('.btn_save_new_unique_value').hide();
          $('.btn_cancel_new_unique_value').hide();
          $('.btn_new_unique_value').show();
          $('.current_unique_value_block').show();
        });

        <%if @certificate_order && @certificate_order.csr%>
          // Click Save button for registering new unique value
          $(document).on('click', '.btn_save_new_unique_value', function() {
            var old_value = $('.current_unique_value_block').text().trim();
            var new_value = $('.new_unique_value').val();

            if (old_value != new_value) {
              $.ajax({
                url: '<%=create_new_unique_value_csr_path(@ssl_slug, @certificate_order.csr)%>',
                data: {
                  new_unique_value: $('.new_unique_value').val()
                },
                type: "POST",
                success: function (result) {
                  if ($.inArray('same', Object.keys(result)) == -1) {
                    $('.cname_destination').html(result['cname_destination']);
                    $('.dns_sha2_hash').html(result['dns_sha2_hash']);
                    $('.current_unique_value_block').html($('.new_unique_value').val());

                    $('.new_unique_value').hide();
                    $('.btn_save_new_unique_value').hide();
                    $('.btn_cancel_new_unique_value').hide();
                    $('.btn_new_unique_value').show();
                    $('.current_unique_value_block').show();
                  } else {
                    alert('The same unique value has been already used before. Please use another unique value.');
                  }
                }
              });
            } else {
              alert('This unique value is same with current one.');
            }
          });
        <%end%>

      <%end%>
    }

    $(document).on('click', '#link_to_send_callback', function(e) {
      e.preventDefault();

      $('#email_modal_body').removeClass('error-invalid');
      $('#email_modal_body').removeClass('error-required');
      $('.btn-ok-send-emails').prop('disabled', true);
      $('#callback_emails').val('');

      $('#email_modal').show();
    });

    $(document).on('click', '#email_modal_close', function() {
      $('#email_modal').hide();
    });

    $(document).on('click', '.btn-cancel-send-emails', function() {
      $('#email_modal').hide();
    });

    $(document).on('click', '.btn-ok-send-emails', function(e) {
      e.preventDefault();

      var emails_str = $('#callback_emails').val();
      $('.btn-ok-send-emails').prop('disabled', true);

      <%if @certificate_order%>
        $.ajax({
        url: '<%=send_callback_certificate_order_validation_path(@ssl_slug, @certificate_order.ref)%>',
        data: {
          certificate_order_id: '<%=@certificate_order.ref%>',
          emails: emails_str.split(/\s/).filter(Boolean)
        },
        type: 'POST',
        success: function (data) {
          if (data['status' == 'no-user']) {
            location.reload(true);
          } else {
            $('#email_modal').hide();

            var message_wrap_element = $('<div></div>');
            message_wrap_element.attr('class', 'flash_message notice');

            var message_element = $('<span></span>');
            message_element.append('Callback Email has been sent successfully.');
            message_wrap_element.append(message_element);

            var btn_element = $('<small></small>');
            var close_btn_element = $('<div></div>');
            close_btn_element.attr('class', 'close_flash_message');

            var close_sign_element = $('<span></span>');
            close_sign_element.append('X');

            close_btn_element.append(close_sign_element);
            close_btn_element.append('close');

            btn_element.append(close_btn_element);
            message_wrap_element.append(btn_element);

            if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
              $('#content').find('.inner').children().first().remove();
            }
            message_wrap_element.insertBefore($('#content').find('.inner').children().first());
          }
        }
      });
      <%end%>
    });

    $(document).on('keyup', '#callback_emails', function(e) {
      e.preventDefault();

      var emails_str = $(this).val();
      var is_validated = true;

      if ($.trim(emails_str) == '') {
        $('#email_modal_body').addClass('error-required');
        $('#email_modal_body').removeClass('error-invalid');

        is_validated = false;
      } else {
        var emails = emails_str.split(/\s/).filter(Boolean);
        $.each(emails, function(key, value) {
          if ($.trim(value) != '' && !$.validate_email(value)) {
            $('#email_modal_body').addClass('error-invalid');
            $('#email_modal_body').removeClass('error-required');

            is_validated = false;
            return false;
          }
        });
      }

      if (is_validated) {
        $('#email_modal_body').removeClass('error-invalid');
        $('#email_modal_body').removeClass('error-required');

        $('.btn-ok-send-emails').prop('disabled', false);
      } else {
        $('.btn-ok-send-emails').prop('disabled', true);
      }
    });

    window.onclick = function(event) {
      if (event.target == $('#email_modal')[0]) {
        $('#email_modal').hide();
      }
    }
  });
});
</script>
