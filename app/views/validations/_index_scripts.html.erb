<%checkout_in_progress=@certificate_order && @certificate_order.validation_stage_checkout_in_progress?%>
<script type="text/javascript">
jQuery(function($) {
  //This prototype is provided by the Mozilla foundation and
  //is distributed under the MIT license.
  //http://www.ibiblio.org/pub/Linux/LICENSES/mit.license

  if (!Array.prototype.every)
  {
    Array.prototype.every = function(fun /*, thisp*/)
    {
      var len = this.length;
      if (typeof fun != "function")
        throw new TypeError();

      var thisp = arguments[1];
      for (var i = 0; i < len; i++)
      {
        if (i in this &&
            !fun.call(thisp, this[i], i, this))
          return false;
      }

      return true;
    };
  }

  //This prototype is provided by the Mozilla foundation and
  //is distributed under the MIT license.
  //http://www.ibiblio.org/pub/Linux/LICENSES/mit.license

  if (!Array.prototype.some)
  {
    Array.prototype.some = function(fun /*, thisp*/)
    {
      var len = this.length;
      if (typeof fun != "function")
        throw new TypeError();

      var thisp = arguments[1];
      for (var i = 0; i < len; i++)
      {
        if (i in this &&
            fun.call(thisp, this[i], i, this))
          return true;
      }

      return false;
    };
  }
  var is_approved=function(x){
    return x=='<%=ValidationRuling::APPROVED%>';
  }
  var is_unapproved=function(x){
    return x=='<%=ValidationRuling::UNAPPROVED%>';
  }
  var is_requiring_more=function(x){
    return x=='<%=ValidationRuling::MORE_REQUIRED%>';
  }
  $.get_selected_options=function(select, type){
    options=[];
    $(select).find(':selected').each(function(c, selected){
      if(type=='text')
        options[c] = $(selected).text();
      else
        options[c] = $(selected).val();
    });
    return options;
  }
  $.get_selected_array_options=function(select, index, type){
    options=[];
    $($(select)[index]).find(':selected').each(function(c, selected){
      if(type=='text')
        options[c] = $(selected).text();
      else
        options[c] = $(selected).val();
    });
    return options;
  }
  $.method_none_selected=function(methods){
    for(m=0; m<methods.length; m++){
      if(methods[m]=='<%=Validation::NONE_SELECTED%>')
        return true;
    }
    return false;
  }
  $.unapprove_all_methods=function(methods, i){
    for(m=0; m<methods.length; m++){
      $('.method_'+i).removeClass("approved_validation_document")
        .removeClass('crossout');
      $('.method_'+i+' ul li').remove();
    }
  }
  $.method_type=function(){
    if($(':radio[name=method]:checked').val()=="http"){
      $('#http_dcv').show();
      $('#email_dcv').hide();
    }
    else{
      $('#http_dcv').hide();
      $('#email_dcv').show();
    }
    $(':radio[name=method]').bind('click', function(){
      if($(this).val()=="http"){
        $('#http_dcv').show();
        $('#email_dcv').hide();
      }
      else{
        $('#http_dcv').hide();
        $('#email_dcv').show();
      }
    });
  }
  jQuery.fn.refer_to_others_toggle=function(){
    if($(this).val()=="false"){
      $('#request_validation_from_others').hide();
      $('#proof_of_dcv_section').show();
      $('#documents_upload_section').show();
      $('#documents_upload_heading').show();
      if(<%=!checkout_in_progress%>)
        $("#upload_validations").show();
      $.method_type();
    }
    else{
      $('#request_validation_from_others').show();
      $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::BOTH_SECTIONS%>]').attr("checked", "checked");
      $('#proof_of_dcv_section').hide();
      $('#documents_upload_section').hide();
      $('#documents_upload_heading').hide();
      if(<%=!checkout_in_progress%>)
        $("#upload_validations").hide();
    }
  }
  $(document).ready(function() {
    var status_bar=null;
    $.method_type();
    $("select#domain_control_validation_email option[value='none']").remove();
    $('input:checkbox#select_all').click(function(event) {  //on click
      $(".check_box").prop('checked', $(this).prop('checked'));
    });
    $('.dropdown, .validation_status_message, .expand, .subject_column > a').click(function(){
      if($(this).parents().filter('tr').next().css('display')!='none'){
        $(this).parents().filter('tr').next().css('display', 'none');
        $(this).parents().filter('tr').find('.dropdown img').attr('src',"<%= asset_path('expand.png') %>");
        $(this).parents().filter('tr').find('.expand').text('expand');
        this.expanded = false;
      }
      else{
        this.expanded = true;
        $(this).parents().filter('tr').find('.dropdown img').attr('src',"<%= asset_path('contract.png') %>");
        $(this).parents().filter('tr').next().show();
        $(this).parents().filter('tr').find('.expand').text('close');
      }
    });
    // prepare Options Object
    var options = {
        dataType: 'json',
        beforeSubmit: function(){
          return confirm(
          "This will adjust the approval status of this order. Are you sure?");
        },
        success: function(data, status, $form) {
          alt=$form.attr('alt');
          all_approvals=[];
          $form.find(':radio:checked').each(function(i){
            approval=$(this).val();
            all_approvals.push(approval);
            vrl_alt = $(this).attr('alt');
            reason = $("#ruling_reason_"+vrl_alt).val();
            $('ul.status_history_'+vrl_alt)
              .append('<li><em>'+approval+' by '+data.by_user+':</em><ul><li>'+
                reason+' - '+
                Date.parse('today').toString("MMM d, yyyy")+
                '</li></ul></li>');
            status_span=$('.validation_status_result_'+vrl_alt);
            if(approval=='<%=ValidationRuling::APPROVED%>'){
              status_span.text("<%=ValidationRuling::APPROVED%>");
              status_span
                .removeClass("<%=ValidationRuling::ATTENTION_CLASS%>")
                .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
                .addClass("<%=ValidationRuling::APPROVED_CLASS%>");
            }
            else if(approval=='<%=ValidationRuling::UNAPPROVED%>'){
              status_span.text("<%=ValidationRuling::UNAPPROVED%>");
              status_span
                .removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
                .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
                .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
            }
            else if(approval=='<%=ValidationRuling::MORE_REQUIRED%>'){
              status_span.text("<%=ValidationRuling::INSUFFICIENT%>");
              status_span.removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
                .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
                .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
            }
            $('.reason_block_'+alt).hide();
            $('.no_validation_decisions_'+vrl_alt).remove();
          });
          message_span=$('.vs_message_'+alt.split("_")[0]);
          if(all_approvals.some(is_requiring_more)){
            message_span.text("<%=ValidationRuling::MORE_REQUIRED_STATUS%>");
            message_span.removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
              .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
              .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
          }
          else if(all_approvals.some(is_unapproved)){
            message_span.text("<%=ValidationRuling::UNAPPROVED_STATUS%>");
            message_span
              .removeClass("<%=ValidationRuling::APPROVED_CLASS%>")
              .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
              .addClass("<%=ValidationRuling::ATTENTION_CLASS%>");
          }
          else if(all_approvals.every(is_approved)){
            message_span.text("<%=ValidationRuling::APPROVED_STATUS%>");
            message_span
              .removeClass("<%=ValidationRuling::ATTENTION_CLASS%>")
              .removeClass("<%=ValidationRuling::WAITING_CLASS%>")
              .addClass("<%=ValidationRuling::APPROVED_CLASS%>");
          }
          alert('Approval status change successful!');
          $form.reset();
        }
    };
    $('form.edit_validation_ruling').ajaxForm(options);
    /*$('form.api_certificate_request').ajaxForm({
      dataType: "json",
      beforeSubmit: function(){
        var domain_list = $('tbody.domain_list').find('tr.certificate_name');
        var ori_domain_names_str = $('#ori_domain_names_str').val();
        var domain_names_str = '';
        $.each(domain_list, function(idx, domain) {
          domain_names_str = domain_names_str + ',' + $(domain).find('.check_box').prop('name');
        });

        var api_domain = '< %=api_domain%>';
        var update_dcv = '< %api_certificate_update_v1_4_path(@certificate_order.ref)%>';

        if (ori_domain_names_str == domain_names_str) {
          $(this).attr('action', '');
        } else {
          $(this).attr('action', '');
        }

        confirmed = confirm('Proceed with validation??????');
        if(confirmed){
          $('#waiting_bar').show();
        }
        return confirmed;
      },
      success: function(data, status){
//        $('#waiting_on_csr').hide();
//        $('.submit_csr').removeAttr('disabled');
//        $('.submit_csr').attr('value', submit_label);
          location.reload(true);
        if(data.errors){
          $('.error').html("The following fields have errors:</br><ul>");
          $.each(data.errors, function(i, item) {
            // i = index
            // item = data for a particular post
            $('.error').append("<li>"+i+": "+item.toString()+"</li>");
          });
          $('.error').append("</ul>").show();
        }
        else{
//          window.location.href = data.certificate_url;
//          alert("Validation updated.");
        }
      }
    });*/
    $('input:checkbox[name*=publish_to_site_seal]').click(function(){
      $(this).parents().filter('form').ajaxSubmit();
    });
    $(':radio[name^=ruling_decision]').click(function(){
      alt=$(this).attr('alt');
      if($(this).val()=='<%=ValidationRuling::UNAPPROVED%>' ||
          $(this).val()=='<%=ValidationRuling::MORE_REQUIRED%>'){
        $('.reason_block_'+alt).show();
      }
      else{
        $('.reason_block_'+alt).hide();
      }
    });
    $('.selectAll').toggle(function() {
      $(this).select();
    }, function() {
      $(this).unselect();
    });
    $('select[id*=validation_history_validation_rules]').change(function(){
      //prevent other options from being selected if None is selected
      rules = $.get_selected_options(this, 'text');
      if($.method_none_selected(rules)){
        $(this).find(':selected').each(function(c, selected){
          if($(selected).text()!='<%=Validation::NONE_SELECTED%>')
            $(selected).attr('selected', false);
        });
      }
      $(this).parents().filter('form').ajaxSubmit();
      //order index
      i = $(this).attr('alt').split("_")[0];
      //doc index
      doc_i = $(this).attr('alt').split("_")[1];
      //let's find all applicable doc types
      types_select = 'select[id*=validation_history_satisfies_validation_methods][alt='+$(this).attr('alt')+']'
      types=$.get_selected_options(types_select, 'text');
      alt=$(this).parents().find('span.doc_filename').attr('alt');
      identifier = alt+'_'+$(this).attr('alt');
      //get the newly selected rule (should be 'None')
      rules = $.get_selected_options(this, 'text');
      //change status to approved
      for(r=0; r<rules.length; r++){
        applied=false;
        if(!applied){
          for(x=0;x<types.length;x++){
            $('li[alt=method_'+types[x]+'_'+i+']')
              .addClass("approved_validation_document").addClass("crossout");
            $('li[alt=method_'+types[x]+'_'+i+'] ul')
              .append('<li class="applied_doc tree-connect" alt="'+identifier+
              '">applied: '+alt+'</li>');
          }
          $('ul.applied_docs_summary_'+i).append(
            '<li class="approved_validation_document applied_doc" alt="'
            +identifier+'">applied: '+alt+'</li>');
          applied=true;
        }
      }
      //if None was selected, then change status to pending
      for(r=0; r<rules.length; r++){
        if(rules[r]=='<%=Validation::NONE_SELECTED%>'){
          $('ul.applied_docs_summary_'+i+
            ' li[class*=approved_validation_document][alt*='+identifier+']')
            .remove();
          for(x=0;x<types.length;x++){
            $('li[alt=method_'+types[x]+'_'+i+'] ul li[alt='+identifier+']')
              .remove();
            if($('li[alt=method_'+types[x]+'_'+i+'] ul li').length==0)
              $('li[alt=method_'+types[x]+'_'+i+']')
              .removeClass("approved_validation_document").removeClass("crossout");
          }
        }
      }
    });
    <%if @certificate_order and !@certificate_order.certificate.is_code_signing?%>
      $(document).on('change', 'select[id^=domains]', function() {
      //$('select[id^=domains]').change(function(){
        var dcv_select=$(this);
        var dt = new Date();
        var time = (dt.getMonth()+1) + "-"
                + dt.getDate() + "-"
                + dt.getFullYear() + " "
                + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
        //prevent other options from being selected if None is selected
        methods=$.get_selected_options(this, 'text');
        if($.method_none_selected(methods)){
          $(this).find(':selected').each(function(c, selected){
            if($(selected).text()!='<%=Validation::NONE_SELECTED%>')
              $(selected).attr('selected', false);
          });
        }
        //get cert order index
        instruction=$('span[alt="'+$(this).attr('name')+'"]')[0];
        file=$(this).attr("alt").replace("*.", "").toLowerCase()+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";
        https = "https://"+file;
        http = "http://"+file;
        wwwfile=$(this).attr("alt").replace("*.", "www.").toLowerCase()+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";
        wwwhttps = "https://"+wwwfile;
        wwwhttp = "http://"+wwwfile;
        cname = $('.dns_md5_hash').text()+"."+$(this).attr("alt").replace("*.", "").toLowerCase()+" -> "+$('.dns_sha2_hash').text()+".comodoca.com";

        if (methods[0] == 'Please select a validation method') {
          $(instruction).html("");
          $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html("n/a").css({ background: "white", color:"black" });
        }
        else if(/@/.test(methods[0])){
          $(instruction).html("Validation instructions will be emailed to "+methods[0]+". Please follow those instructions.")
          $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html("n/a").css({ background: "white", color:"black" });
        }
        else if(/https/.test(methods[0])){
          instructions="Upload <a href='<%=http_dcv_file_csr_path(@ssl_slug, @certificate_order.csr.id)%>'>this file</a> to this location: <a href='"+https+"' target='_new'>"+https+"</a>";
          $(instruction).html(instructions);
          $.ajax({url: '<%=verification_check_csr_path(@ssl_slug, @certificate_order.csr)%>?protocol=https&dcv='+
            $(dcv_select).parents('tr').attr('id')+'&ref='+$(dcv_select).parents('tbody').attr('data-ref')}).done(
              function(data){
                $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html((data ? "passed" : "failed")).css((data ? { background: "green", color:"white" } : { background: "red", color:"white" }));
              });
        }
        else if(/http/.test(methods[0])){
          instructions="Upload <a href='<%=http_dcv_file_csr_path(@ssl_slug, @certificate_order.csr.id)%>'>this file</a> to this location: <a href='"+http+"' target='_new'>"+http+"</a>";
          $(instruction).html(instructions);
          $.ajax({url: '<%=verification_check_csr_path(@ssl_slug, @certificate_order.csr)%>?protocol=http&dcv='+
            $(dcv_select).parents('tr').attr('id')+'&ref='+$(dcv_select).parents('tbody').attr('data-ref')}).done(
              function(data){
                $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html((data ? "passed" : "failed")).css((data ? { background: "green", color:"white" } : { background: "red", color:"white" }));
              });
        }
        else if(/cname/.test(methods[0])){
          $(instruction).html("Create CNAME: "+cname);
          $.ajax({url: '<%=verification_check_csr_path(@ssl_slug, @certificate_order.csr)%>?protocol=cname&dcv='+
            $(dcv_select).parents('tr').attr('id')+'&ref='+$(dcv_select).parents('tbody').attr('data-ref')}).done(
              function(data){
                $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html((data ? "passed" : "failed")).css((data ? { background: "green", color:"white" } : { background: "red", color:"white" }));
              });
        }
        $(instruction).css({ background: "yellow" });
      });
    <%end%>

    /*$('select[id^=domains]:enabled').each(function(index, value){
      $(this).change();
    });*/

    $('select[id*=validation_history_satisfies_validation_methods]').change(function(){
      //prevent other options from being selected if None is selected
      methods=$.get_selected_options(this, 'text');
      if($.method_none_selected(methods)){
        $(this).find(':selected').each(function(c, selected){
          if($(selected).text()!='<%=Validation::NONE_SELECTED%>')
            $(selected).attr('selected', false);
        });
      }
      $(this).parents().filter('form').ajaxSubmit();
      //get cert order index
      i = $(this).attr('alt').split("_")[0];
      //doc index
      doc_i = $(this).attr('alt').split("_")[1];
      rules_select = 'select[id*=validation_history_validation_rules][alt='+$(this).attr('alt')+']'
      rules=$.get_selected_options(rules_select, 'val');
      //highlight a selected method
      $.unapprove_all_methods(methods, i);
      //get selected values
      num_docs = $('.val_docs_list_'+i).attr('alt');
      //poll through each doc and apply each doc to the selected methods unless none is selected
      for(mi=0; mi<num_docs; mi++){
        rules_select = 'select[id*=validation_history_validation_rules][alt^='+i+']';
        rules=$.get_selected_array_options(rules_select, mi, 'val');
        selects = 'select[id*=validation_history_satisfies_validation_methods][alt^='+i+']';
        methods = $.get_selected_array_options(selects, mi, 'text');
        if(!$.method_none_selected(rules)){
          for(m=0; m<methods.length; m++){
            for(ri=0; ri<rules.length; ri++){
              alt=$($(rules_select)[mi]).parents().find('span.doc_filename').attr('alt');
              identifier = alt+'_'+$($(rules_select)[mi]).attr('alt');
              method = 'method_'+methods[m]+'_'+i;
              $('li[alt*='+method+'][class*=rule_'+rules[ri]+']')
                .addClass("approved_validation_document").addClass("crossout");
              $('li[alt*='+method+'][class*=rule_'+rules[ri]+'] ul')
                .append('<li class="applied_doc tree-connect" alt="'+
                identifier+'">applied: '+alt+'</li>');
            }
          }
        }
      }
    });
    var show_documents=true;
    $(':radio[name*=has_documents]').click(function(){
      if($(this).val()=="false"){
        show_documents=false;
        $('#documents_upload_instructions, #multi_upload').hide();
        //$('#button_container').fadeIn();
      }
      else{
        show_documents=true;
        $('#documents_upload_instructions, #multi_upload').show();
        //$('#button_container').fadeOut();
      }
    });
    $('.has_csr_container').click(function(){
      $(this).siblings().filter(':radio[name*=has_documents]').click();
    });
    $('.clickable_choice').click(function(e){
      $(this).siblings().filter(':input').click();
    });
    $(':radio[name*=refer_to_others]').click(function(e){
      $(this).refer_to_others_toggle();
    });
    if($(':radio:checked[name*=refer_to_others]').length>0)
      $(':radio:checked[name*=refer_to_others]').refer_to_others_toggle();
    $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::DOCUMENTS_SECTION%>]').click(
      function(){
        $('#proof_of_dcv_section').show();
        $('#documents_upload_heading').hide();
        $('#documents_upload_section').hide();});
    $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::DCV_SECTION%>]').click(
      function(){
        $('#proof_of_dcv_section').hide();
        $('#documents_upload_heading').show();
        $('#documents_upload_section').show();});
    $(':radio[name*=preferred_sections][value=<%=OtherPartyValidationRequest::BOTH_SECTIONS%>]').click(
      function(e){
        $('#proof_of_dcv_section').hide();
        $('#documents_upload_heading').hide();
        $('#documents_upload_section').hide();
        });
    $(':radio[name*=has_documents][value=false]').click();
    $('#send_to_ca').livequery(
      'ajax:beforeSend', function(){
        $('#processing_ca').show();
      }).livequery(
      'ajax:success', function(event, data, status, xhr){
        if(data!="null"){
          $('dl#sent_to_ca_results').prepend(data.result);
        }
      }).livequery(
      'ajax:complete', function(event, data, status, xhr){
        $('#processing_ca').hide();
      });
    $('#send_dcv_email').livequery(
      'ajax:beforeSend', function(){
          $('#busy_sending').show();
          $('#ajax_response').remove();
          status_bar = $("<div class='flash_message close' id='ajax_response'></div>");
          status_bar.hide();
          $('.upload_document_container').before(status_bar);
      }).livequery(
      'ajax:success', function(event, data, status, xhr){
        if(data!="null"){
          if(typeof data.email_address=="undefined"){
            status_bar.addClass('notice').append("<span>Validation email sent to "+
                    data.domain_control_validation.email_address+".</span>");
            $('#dcv_sent_to_address').html(data.domain_control_validation.email_address).effect(
                    "highlight", {color:'green'}, 500);
          }
          else{
            //assume an error
            status_bar.addClass('error').append("<span>"+data.email_address+"</span>");
          }
          $('#busy_sending').hide();
        }
      }).livequery(
      'ajax:complete', function(event, data, status, xhr){
        status_bar.fadeIn();
        $('#processing_ca').hide();
      });
    $('#new_other_party_validation_request').livequery(
      'ajax:beforeSend', function(){
        $('#ajax_response').remove();
        status_bar = $("<div class='flash_message close' id='ajax_response'></div>");
        status_bar.hide();
        $('.upload_document_container').before(status_bar);
      }).livequery(
      'ajax:success', function(event, data, status, xhr){
        if(data!="null"){
          if(typeof data.other_party_validation_request.email_addresses!=="undefined"){
            var emails = $("<ul></ul>");
            $.each(data.other_party_validation_request.email_addresses, function(key, value){
              emails.append("<li>"+value+"</li>");
            });
            status_bar.addClass('notice').append("<span>Request for validation sent to </span>");
            status_bar.find('span').append(emails);
          }
          else{
            //assume an error
            status_bar.addClass('error').append("<span>Error!</span>");
          }
        }
      }).livequery('ajax:error', function(event, xhr, status, error) {
          if(typeof(data.base)!=='undefined')
            status_bar.addClass('error').append("<span>"+data.base+"</span>");
          else{
            var msg = $("<span><ul></ul></span>");
            $.each(data, function(key, value){
              msg.append("<li>"+key+" "+value+"</li>");
            });
            status_bar.addClass('error').append(msg);
          }
      }).livequery('ajax:complete', function(event, data, status, xhr) {
          status_bar.fadeIn();
      });

    // loading domains
    var url = window.location.pathname;
    if (url.substr(url.lastIndexOf('/') + 1, url.length) == 'new') {
      <%if @certificate_order%>
        var is_all_validated = '<%= @all_validated%>';
        if (is_all_validated == 'true') {
          $('body').addClass('no_scroll_y');

          var redirectUrl = '<%=certificate_order_path(@ssl_slug, @certificate_order)%>';

          var redirect_message_wrap = $('<div></div>');
          redirect_message_wrap.attr('class', 'redirect_message_wrap');

          var redirect_message = $('<div></div>');
          redirect_message.attr('class', 'redirect_message');

          var span = $('<span></span>');
          span.append('All domains has already been validated. It will be issued soon. \n');
          span.append('Redirecting to Certificate Order Page now ...');

          redirect_message.append(span);
          redirect_message_wrap.append(redirect_message);
          redirect_message_wrap.insertBefore($('#header'));

          $('.domains_loader_wrap').hide();

          var delay = 1000;
          window.setTimeout(function() {
            $('body').removeClass('no_scroll_y');
            window.location.href = redirectUrl;
          }, delay);
        } else {
          // Loading domains initially.
          //var domain_str = $('#cert_names_ids_str').val();
          var domain_str = $('#ori_domain_names_str').val();
          var domains = [];
          if (domain_str.length > 0) {
            domains = domain_str.split(',');
            var ajaxDomainUrl = '<%=get_asynch_domains_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';

            <%
              # mdc_validation = ComodoApi.mdc_status(@certificate_order)
              # ds = mdc_validation.domain_status
              # byebug
              # all_validated = true
              # ds.each {|key, value|
              #   if value['status'].downcase != 'validated'
              #     all_validated = false
              #     break
              #   end
              # }
              is_ucc = @certificate_order.certificate.is_ucc?
              is_evucc = @certificate_order.certificate.is_evucc?
              is_premium_ssl = @certificate_order.certificate.is_premium_ssl?
            %>

            var all_validated = false;
            var count_validated = 0;
            var count_domain = 0;
            var total = domains.length;

            $.each(domains, function(idx, value) {
              $.ajax({
                url: ajaxDomainUrl,
                data: {
                  domain_name: value,
                  domain_count: total,
                  domain_status: JSON.parse('<%= raw @ds ? @ds.to_json : {}%>'),
                  is_ucc: '<%=is_ucc%>',
                  count_validated: count_validated,
                  count_domain: count_domain,
                },
                type: "POST",
                success: function(result) {
                  // TODO: Loading Domain.
                  Object.keys(result).map(function(key) {
                    if (key == 'tr_info') {
                      if (result[key]['count_domain']) {
                        count_domain = result[key]['count_domain'];
                      }
                      if (result[key]['count_validated']) {
                        count_validated = result[key]['count_validated'];
                      }
                      if (result[key]['all_validated']) {
                        all_validated = result[key]['all_validated'];
                      }

                      var trElement = $('<tr></tr>');
                      if (!$.isEmptyObject(result[key]['options'])) {
                        trElement.attr('class', 'certificate_name');
                      } else {
                        trElement.attr('class', 'certificate_name validated');
                      }
                      trElement.attr('id', 'certificate_name__' + value);

                      $('.domain_list').append(trElement);

                      tdElement = $('<td></td>');

                      if (!$.isEmptyObject(result[key]['options'])) {
                        var checkboxElement = $('<input></input>');
                        checkboxElement.attr('class', 'check_box');
                        /*checkboxElement.attr('id', result[key]['checkbox_id']);
                         checkboxElement.attr('alt', result[key]['domain_name']);*/
                        checkboxElement.attr('id', value);
                        checkboxElement.attr('type', 'checkbox');
                        tdElement.append(checkboxElement);

                        <%if is_ucc || is_evucc || is_premium_ssl%>
                        var btnElement = $('<input></input>');
                        btnElement.attr('class', 'btn_remove_domain');
                        btnElement.attr('type', 'button');
                        btnElement.attr('value', 'Remove');
                        tdElement.append(btnElement);
                        <%end%>

                        var editBtnElement = $('<input></input>');
                        editBtnElement.attr('class', 'btn_edit_domain');
                        editBtnElement.attr('type', 'button');
                        editBtnElement.attr('value', 'Edit');
                        tdElement.append(editBtnElement);
                      }
                      var cnsElement = $('<input></input>');
                      cnsElement.attr('type', 'hidden');
                      /*cnsElement.attr('name', 'cert_names[' + result[key]['checkbox_id'] + ']');*/
                      /*cnsElement.attr('value', result[key]['domain_name']);*/
                      cnsElement.attr('name', 'cert_names[' + value + ']');
                      cnsElement.attr('value', value);
                      tdElement.append(cnsElement);
                      trElement.append(tdElement);

                      tdElement = $('<td></td>');
                      /*tdElement.attr('class', 'domain_name ' + result[key]['domain_name']);*/
                      tdElement.attr('class', 'domain_name ' + value);
                      /*tdElement.append(result[key]['domain_name']);*/
                      tdElement.append(value);
                      trElement.append(tdElement);

                      tdElement = $('<td></td>');
                      if ($.isEmptyObject(result[key]['options'])) {
                        /*tdElement.append('Validation satisfied for ' + result[key]['domain_name']);*/
                        tdElement.append('Validation satisfied for ' + value);

                        /*var hiddenSltElement = $('<input></input>');
                         hiddenSltElement.attr('type', 'hidden');
                         hiddenSltElement.attr('name', 'domains[' + value + '][dcv]');
                         hiddenSltElement.attr('value', result[key]['slt_option']);

                         tdElement.append(hiddenSltElement);*/
                      } else {
                        var sltElement = $('<select></select>');
                        /*sltElement.attr('name', 'domains[' + result[key]['domain_name'] + '][dcv]');
                         sltElement.attr('id', 'domains_' + result[key]['domain_name'] + '_dcv');
                         sltElement.attr('alt', result[key]['domain_name']);*/
                        sltElement.attr('name', 'domains[' + value + '][dcv]');
                        sltElement.attr('id', 'domains_' + value + '_dcv');
                        sltElement.attr('alt', value);

                        var optElement = $('<option></option>');
                        optElement.attr('value', '');
                        optElement.append('Please select a validation method');
                        sltElement.append(optElement);

                        Object.keys(result[key]['options']).map(function(optGroupKey) {
                          var optGroupElement = $('<optgroup></optgroup>');
                          optGroupElement.attr('label', optGroupKey);

                          Object.keys(result[key]['options'][optGroupKey]).map(function(optKey) {
                            var optElement = $('<option></option>');
                            optElement.attr('value', optKey);
                            optElement.append(result[key]['options'][optGroupKey][optKey]);
                            optGroupElement.append(optElement);
                          });

                          sltElement.append(optGroupElement);
                        });

                        tdElement.append(sltElement);
                      }
                      trElement.append(tdElement);
                      /*$('[name="domains[' + result[key]['domain_name'] + '][dcv]"]').val(result[key]['slt_option']);*/
                      $('[name="domains[' + value + '][dcv]"]').val(result[key]['slt_option']);

                      tdElement = $('<td></td>');
                      tdElement.append(result[key]['pretest']);
                      /*tdElement.attr('class', 'pretest ' + result[key]['domain_name']);*/
                      tdElement.attr('class', 'pretest ' + value);
                      trElement.append(tdElement);

                      tdElement = $('<td></td>');
                      tdElement.append(result[key]['attempt']);
                      /*tdElement.attr('class', 'attempt ' + result[key]['domain_name']);*/
                      tdElement.attr('class', 'attempt ' + value);
                      trElement.append(tdElement);

                      tdElement = $('<td></td>');
                      tdElement.append(result[key]['attempted_on']);
                      /*tdElement.attr('class', 'attempted_on ' + result[key]['domain_name']);*/
                      tdElement.attr('class', 'attempted_on ' + value);
                      trElement.append(tdElement);

                      var tdElement = $('<td></td>');
                      tdElement.append(result[key]['status']);
                      /*tdElement.attr('class', 'status ' + result[key]['domain_name']);*/
                      tdElement.attr('class', 'status ' + value);
                      trElement.append(tdElement);

                    } else if (key == 'tr_instruction' && !result[key]) {
                      var trElement = $('<tr></tr>');
                      $('.domain_list').append(trElement);

                      tdElement = $('<td></td>');
                      trElement.append(tdElement);
                      tdElement = $('<td></td>');
                      trElement.append(tdElement);

                      var tdElement = $('<td></td>');
                      tdElement.attr('colspan', 5);
                      tdElement.append('Instructions: ');

                      var spanElement = $('<span></span>');
                      /*spanElement.attr('alt', result[key]['instruction']);*/
                      spanElement.attr('alt', 'domains[' + value + '][dcv]');
                      spanElement.append('Please select a validation method');
                      tdElement.append(spanElement);
                      trElement.append(tdElement);

                    } else if (key == 'caa_test_failed') {
                      var trElement = $('<tr></tr>');
                      trElement.attr('class', 'certificate_name');
                      trElement.attr('id', 'certificate_name_' + value);

                      $('.domain_list').append(trElement);

                      tdElement = $('<td></td>');
                      var checkboxElement = $('<input></input>');
                      checkboxElement.attr('class', 'check_box');
                      /*checkboxElement.attr('id', result[key]['checkbox_id']);*/
                      checkboxElement.attr('id', value);
                      checkboxElement.attr('type', 'checkbox');
                      tdElement.append(checkboxElement);
                      trElement.append(tdElement);

                      var tdElement = $('<td></td>');
                      /*tdElement.append(result[key]['domain_name']);*/
                      tdElement.append(value);
                      trElement.append(tdElement);

                      tdElement = $('<td></td>');
                      tdElement.attr('colspan', 5);
                      tdElement.append('CAA Test Failed!');
                      trElement.append(tdElement);
                    }
                  });

                  if (idx === (total - 1) /*&& !all_validated*/) {
                    $('.domains_loader_wrap').hide();
                    $('#upload_validations').show();
                  }

                  $('select[id^=domains]').last().change();
                }
              });
            });
          } else {
            $('.domains_loader_wrap').hide();
          }
        }

        // Form Submit by AJAX
        $('form.api_certificate_request').ajaxForm({
          dataType: "json",
          beforeSubmit: function(){
            var domain_list = $('tbody.domain_list').find('tr.certificate_name');
            var ori_domain_names_str = $('#ori_domain_names_str').val().split(',');
            var domain_names_str = '';
            $.each(domain_list, function(idx, domain) {
              if ($(domain).hasClass('removed_domain') == false && $(domain).hasClass('validated') == false) {
                /*domain_names_str = domain_names_str + ',' + $(domain).find('.check_box').prop('alt');*/
                domain_names_str = domain_names_str.concat(',' + $(domain).find('.check_box').prop('id'));
              } else if ($(domain).hasClass('validated') == true) {
                domain_names_str = domain_names_str.concat(',' + $(domain).find('td:first-child').children().first().val());
              }
            });
            domain_names_str = domain_names_str.substr(1).split(',');

            var api_domain = '<%=api_domain%>';
            var update_dcv = '<%=api_certificate_update_v1_4_path(@certificate_order.ref)%>';
            var replace_ssl = '<%=api_certificate_replace_v1_4_path(@certificate_order.ref)%>';

            if ($(ori_domain_names_str).not(domain_names_str).length == 0 && $(domain_names_str).not(ori_domain_names_str).length == 0) {
              $(this).attr('url', api_domain + update_dcv);
            } else {
              $(this).attr('url', api_domain + replace_ssl);
            }

            confirmed = confirm('Proceed with validation?');
            if(confirmed){
              $('#waiting_bar').show();
            }
            return confirmed;
          },
          success: function(data, status){
  //        $('#waiting_on_csr').hide();
  //        $('.submit_csr').removeAttr('disabled');
  //        $('.submit_csr').attr('value', submit_label);
            /*location.reload(true);
            if(data.errors){
              $('.error').html("The following fields have errors:</br><ul>");
              $.each(data.errors, function(i, item) {
                // i = index
                // item = data for a particular post
                $('.error').append("<li>"+i+": "+item.toString()+"</li>");
              });
              $('.error').append("</ul>").show();
            }
            else{
  //          window.location.href = data.certificate_url;
  //          alert("Validation updated.");
            }*/

            if (data.errors) {
              var message_wrap_element = $('<div></div>');
              message_wrap_element.attr('class', 'flash_message error');

              var message_element = $('<span></span>');
              message_element.html('The following fields have errors: </br><ul>');
              $.each(data.errors, function(i, item) {
                message_element.append('<li>' + i + ': ' + item.toString() + '</li>');
              });
              message_element.append('</ul>');
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                $('#content').find('.inner').children().first().remove();
              }
              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
              $('#waiting_bar').hide();
            } else {
              location.reload(true);
            }
          }
        });

        // Click Remove button per domain.
        $(document).on('click', '.btn_remove_domain', function() {
          /*var domain_name = $('input:first-child', $(this).parent()).prop('alt');
          var confirmMsg = 'Are you sure you want to remove the following domain from this order?';
          confirmMsg = confirmMsg.concat('\r\n      ' + domain_name);

          if (confirm(confirmMsg)) {
            $(this).parent().parent().next().remove();
            $(this).parent().parent().remove();
          }*/

          /*var domain_id = $(this).prev().prop('id');
          var domain_name = $(this).prev().prop('alt');*/
          var domain_name = $(this).prev().prop('id');
          $(this).parent().css('background-color', 'white');

          var ajaxRemoveDomainUrl = '<%=remove_domains_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';
          var confirmMsg = 'Are you sure you want to remove the following domain from this order?';
          confirmMsg = confirmMsg.concat('\r\n      ' + domain_name);

          if (confirm(confirmMsg)) {
            /*$('#upload_validations').hide();
            $('.domains_loader_wrap').show();*/
            $('[id="certificate_name__' + domain_name + '"]').next().hide();
            $('[id="certificate_name__' + domain_name + '"]').hide();

            $.ajax({
              url: ajaxRemoveDomainUrl,
              data: {
                domain_names: domain_name
              },
              type: "POST",
              success: function (result) {
                if (Object.keys(result).length > 0) {
                  var message_wrap_element = $('<div></div>');
                  message_wrap_element.attr('class', 'flash_message error');

                  var message_element = $('<span></span>');
                  Object.keys(result).map(function(key) {
                    /*$('#' + key).parent().css('background-color', 'red');*/
                    $('td:first-child', $('[id="certificate_name__' + key + '"]')).css('background-color', 'red');
                    message_element.append(key + ' : ' + result[key] + '\r\n');
                  });
                  message_wrap_element.append(message_element);

                  var btn_element = $('<small></small>');
                  var close_btn_element = $('<div></div>');
                  close_btn_element.attr('class', 'close_flash_message');

                  var close_sign_element = $('<span></span>');
                  close_sign_element.append('X');

                  close_btn_element.append(close_sign_element);
                  close_btn_element.append('close');

                  btn_element.append(close_btn_element);
                  message_wrap_element.append(btn_element);

                  if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                    $('#content').find('.inner').children().first().remove();
                  }
                  message_wrap_element.insertBefore($('#content').find('.inner').children().first());

                  /*$('#upload_validations').show();*/
                  $('[id="certificate_name__' + domain_name + '"]').next().show();
                  $('[id="certificate_name__' + domain_name + '"]').show();
                } else {
                  /*$('#certificate_name_' + domain_id).next().remove();
                  $('#certificate_name_' + domain_id).remove();*/
                  $('[id="certificate_name__' + domain_name + '"]').next().remove();
                  $('[id="certificate_name__' + domain_name + '"]').remove();

                  var domain_str = $('#ori_domain_names_str').val();
                  domain_str = domain_str.replace(',' + domain_name, '');
                  $('#ori_domain_names_str').val(domain_str);

                  /*if ($('tbody.domain_list').find('tr.certificate_name').length > 0) {
                    $('#upload_validations').show();
                  }*/

                  if ($('tbody.domain_list').find('tr.certificate_name').length == 1 &&
                    $('tbody.domain_list').find('tr.certificate_name.validated').length == 1) {
                    $('#upload_validations').hide();
                  }
                }

                /*$('.domains_loader_wrap').hide();*/
              }
            });
          }
        });

        // Click Edit button per domain.
        $(document).on('click', '.btn_edit_domain', function() {
          $(this).parent().css('background-color', 'white');
          $(this).siblings().prop('disabled', true);

          var domain_name = $(this).parent().next().text();
          var inputElement = $('<input></input>');
          inputElement.attr('value', domain_name);

          $(this).parent().next().empty();
          $(this).parent().next().append(inputElement);

          $(this).attr('class', 'btn_save_domain');
          $(this).attr('value', 'Save');
        });

        // Click Save button per domain.
        $(document).on('click', '.btn_save_domain', function() {
          if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
            $('#content').find('.inner').children().first().remove();
          }

          var new_domain_name = $(this).parent().next().find('input').val();
          /*var origin_name = $('input:first-child', $(this).parent()).prop('alt');*/
          var origin_name = $('input:first-child', $(this).parent()).prop('id');

          if (new_domain_name == origin_name) {
            $(this).parent().next().empty();
            $(this).parent().next().append(origin_name);

            $(this).siblings().prop('disabled', false);
            $(this).attr('class', 'btn_edit_domain');
            $(this).attr('value', 'Edit');
          } else {
            // checking domain name's duplication.
            var domain_list = $('tbody.domain_list').find('tr.certificate_name');
            var is_duplicated = false;
            $.each(domain_list, function(idx, domain) {
              /*var other_domain_name = $(domain).find('.check_box').prop('alt');*/
              var other_domain_name = $(domain).find('.check_box').prop('id');
              if (other_domain_name == new_domain_name) {
                is_duplicated = true;
                return false;
              }
            });

            if (is_duplicated) {
              $(this).parent().next().find('input').val(origin_name);

              var message_wrap_element = $('<div></div>');
              message_wrap_element.attr('class', 'flash_message error');

              var message_element = $('<span></span>');
              message_element.append(new_domain_name + ' : This domain name already exist.\r\n');
              message_wrap_element.append(message_element);

              var btn_element = $('<small></small>');
              var close_btn_element = $('<div></div>');
              close_btn_element.attr('class', 'close_flash_message');

              var close_sign_element = $('<span></span>');
              close_sign_element.append('X');

              close_btn_element.append(close_sign_element);
              close_btn_element.append('close');

              btn_element.append(close_btn_element);
              message_wrap_element.append(btn_element);

              message_wrap_element.insertBefore($('#content').find('.inner').children().first());
            } else {
              $(this).siblings().prop('disabled', false);
              $(this).attr('class', 'btn_edit_domain');
              $(this).attr('value', 'Edit');

              // Reflecting new domain names to elements related with domain name.
              $('input:first-child', $(this).parent()).attr('id', new_domain_name);
              $('input:last-child', $(this).parent()).attr('value', new_domain_name);

              var siblings = $(this).parent().siblings();
              $.each(siblings, function(idx, sibling) {
                var class_str = $(sibling).prop('class');

                if (class_str === '') {
                  $('select', $(sibling)).attr('name', 'domains[' + new_domain_name + '][dcv]');
                  $('select', $(sibling)).attr('id', 'domains_' + new_domain_name + '_dcv');
                  $('select', $(sibling)).attr('alt', new_domain_name);
                } else {
                  if (class_str.split(' ')[0] === 'domain_name') {
                    $(sibling).empty();
                    $(sibling).append(new_domain_name);
                  }
                  $(sibling).attr('class', class_str.split(' ')[0] + ' ' + new_domain_name);
                }
              });

              $('span', $(this).parent().parent().next()).attr('alt', 'domains[' + new_domain_name + '][dcv]');

              // Getting all email address for new domain.
              var ajaxGetEmailAddressUrl = '<%=get_email_addresses_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';
              /*var domain_str = $('#cert_names_ids_str').val();*/
              var domain_str = $('#ori_domain_names_str').val();
              var total = 0;
              if (domain_str.length > 0) {
                total = domain_str.split(',').length;
                $('#upload_validations').hide();
                $('.domains_loader_wrap').show();

                $.ajax({
                  url: ajaxGetEmailAddressUrl,
                  data: {
                    domain_name: new_domain_name,
                    total_domains: total
                  },
                  type: "POST",
                  success: function (result) {
                    var optGroupElement = $('optgroup:first', $('[name="domains[' + new_domain_name + '][dcv]"]'));
                    optGroupElement.empty();

                    Object.keys(result).map(function (optKey) {
                      var optElement = $('<option></option>');
                      optElement.attr('value', optKey);
                      optElement.append(result[optKey]);
                      optGroupElement.append(optElement);
                    });

                    $('[name="domains[' + new_domain_name + '][dcv]"]').change();

                    $('.domains_loader_wrap').hide();
                    $('#upload_validations').show();
                  }
                });
              }
            }
          }
        });

        // Select Items for selected all domains.
        $('#validation_common_type').change(function() {
          var slt_type = $(this).val();
          $(this).val('');

          var domain_list = $('tbody.domain_list').find('tr.certificate_name');
          $.each(domain_list, function(idx, domain) {
            if (!$(domain).hasClass('removed_domain')) {
              $(domain).find('.check_box').parent().css('background-color', 'white');
            }
          });

          switch (slt_type) {
            case 'delete':
              /*var ajaxRemoveDomainUrl = '< %=remove_domains_certificate_order_validation_path(@ssl_slug, @certificate_order)%>';
              var confirmMsg = 'Are you sure you want to remove the following domain(s) from this order?';*/
              var domain_names = '';

              $.each(domain_list, function(idx, domain) {
                if (!$(domain).hasClass('removed_domain')) {
                  var is_checked = $(domain).find('.check_box').prop('checked');
                  if (is_checked) {
                    /*confirmMsg = confirmMsg.concat('\r\n      ' + $(domain).find('.check_box').prop('alt'));*/
                    domain_names = domain_names.concat(',' + $(domain).find('.check_box').prop('id'));
                  }
                }
              });

              if (domain_names.length > 0) {
                if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                  $('#content').find('.inner').children().first().remove();
                }

                var message_wrap_element = $('<div></div>');
                if (domain_names.substr(1).split(',').length == domain_list.length) {
                  message_wrap_element.attr('class', 'flash_message error');

                  var message_element = $('<span></span>');
                  message_element.append('The order must contain at least one domain.\r\n');
                  message_wrap_element.append(message_element);
                } else {
                  $.each(domain_names.substr(1).split(','), function(ids, domain) {
                    $('[id="certificate_name__' + domain + '"]').addClass('removed_domain');
                    $('td:first-child', $('[id="certificate_name__' + domain + '"]')).removeAttr('style');
                    $('td:first-child', $('[id="certificate_name__' + domain + '"]')).empty();
                    $('select', $('[id="certificate_name__' + domain + '"]')).remove();
                    $('[id="certificate_name__' + domain + '"]').next().remove();
                  });

                  message_wrap_element.attr('class', 'flash_message warning');

                  var message_element = $('<span></span>');
                  message_element.append('Changes will be committed after clicking the Validate button.\r\n');
                  message_wrap_element.append(message_element);

                  /*var btn_element = $('<small></small>');
                  var close_btn_element = $('<div></div>');
                  close_btn_element.attr('class', 'close_flash_message');

                  var close_sign_element = $('<span></span>');
                  close_sign_element.append('X');

                  close_btn_element.append(close_sign_element);
                  close_btn_element.append(' close');

                  btn_element.append(close_btn_element);
                  message_wrap_element.append(btn_element);

                  if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                    $('#content').find('.inner').children().first().remove();
                  }
                  message_wrap_element.insertBefore($('#content').find('.inner').children().first());*/

                  /*if (confirm(confirmMsg)) {
                   $('#upload_validations').hide();
                   $('.domains_loader_wrap').show();

                   $.ajax({
                   url: ajaxRemoveDomainUrl,
                   data: {
                   domain_ids: domain_ids.substr(1)
                   },
                   type: "POST",
                   success: function (result) {
                   if (Object.keys(result).length > 0) {
                   $.each(domain_ids.substr(1).split(','), function(ids, domain) {
                   if ($.inArray(domain, Object.keys(result)) == -1) {
                   $('#certificate_name_' + domain).next().remove();
                   $('#certificate_name_' + domain).remove();
                   }
                   });

                   Object.keys(result).map(function(key) {
                   $('#' + key).parent().css('background-color', 'red');
                   });

                   $('#upload_validations').show();
                   } else {
                   $.each(domain_ids.substr(1).split(','), function(ids, domain) {
                   $('#certificate_name_' + domain).next().remove();
                   $('#certificate_name_' + domain).remove();
                   });

                   if ($('tbody.domain_list').find('tr.certificate_name').length > 0) {
                   $('#upload_validations').show();
                   }
                   }

                   $('.domains_loader_wrap').hide();
                   }
                   });
                   } else {
                   $(this).val('');
                   }*/
                }

                var btn_element = $('<small></small>');
                var close_btn_element = $('<div></div>');
                close_btn_element.attr('class', 'close_flash_message');

                var close_sign_element = $('<span></span>');
                close_sign_element.append('X');

                close_btn_element.append(close_sign_element);
                close_btn_element.append(' close');

                btn_element.append(close_btn_element);
                message_wrap_element.append(btn_element);

                message_wrap_element.insertBefore($('#content').find('.inner').children().first());
              } else {
                alert('There are no selected domains for delete.');
              }

              break;
            case 'http_csr_hash':
            case 'https_csr_hash':
            case 'cname_csr_hash':
              var changed_count = 0;
              $.each(domain_list, function(idx, domain) {
                if (!$(domain).hasClass('removed_domain')) {
                  var is_checked = $(domain).find('.check_box').prop('checked');
                  if (is_checked) {
                    $(domain).find('select').val(slt_type).trigger('change');
                    changed_count ++;
                  }
                }
              });

              if (changed_count === 0) {
                if (slt_type == 'http_csr_hash') {
                  alert('There are no selected domains for "HTTP CSR HASH"');
                } else if (slt_type == 'https_csr_hash') {
                  alert('There are no selected domains for "HTTPS CSR HASH"');
                } else {
                  alert('There are no selected domains for "CNAME CAR HASH"');
                }
              }

              break;
            default:
          }
        });
      <%end%>
    }

  });
});
</script>
