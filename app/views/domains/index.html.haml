-title = "Domains"
-content_for :title, title
-system_admins = current_user.is_system_admins?
=render :partial => 'index_scripts'
#add_domains_bar
  =form_tag domains_path, id: 'add_domains', method: :post do
    Input domain name(s) (separated by commas or spaces)
    -#=text_field_tag :domain_names, params[:domains]
    =text_area_tag :domain_names, params[:domains], :rows => '2'
    =button_tag 'Add', id: 'btn_add_domains'

=form_tag '', id: 'domains_list', method: :post do
  #validations
    %table(cellspacing="0")
      -if will_paginate @domains
        %tfoot
          %tr
            %td.wrap_number_rows(colspan='2')
              =select_tag :number_rows,
              options_for_select([[5, 5], [10, 10], [20, 20], [50, 50], [100, 100]], @per_page),
              :class=>'per_page'
            %td(colspan='4')=will_paginate @domains
      %caption
        =title
        |
        =link_to 'CSRs Manager', managed_csrs_path(@ssl_slug)
        %ul(style="float: right; display: flex; list-style: none;" )
          %li(style="margin-right: 0.5rem" )
            =submit_tag 'validate by cname/file upload', formaction: "#{select_csr_domains_path(@ssl_slug)}", style: "padding: 0.5rem", id: "d_name_action_bind", disabled: 'true'
          %li(style="margin-right: 0.5rem" )
            =submit_tag 'validate by email code', formaction: "#{validate_selected_domains_path(@ssl_slug)}", style: "padding: 0.5rem", id: "d_name_action_validate", disabled: 'true'
          %li
            =submit_tag 'remove', formaction: "#{remove_selected_domains_path(@ssl_slug)}", style: "padding: 0.5rem", id: "d_name_action_remove", disabled: 'true'
      %tr.heading_row
        %th
        %th.name(scope="col") Name
        %th(scope="col") Scoped
        %th(scope="col") Status
        %th(scope="col") Revalidation
      -@domains.each do |d|
        -dcv = d.domain_control_validations.last
        -validation_status = (dcv.try(:workflow_state)=='satisfied' || !d.signed_certificates.empty?) ? 'validated' : 'pending validation'
        -remaining = dcv.try(:responded_at) ? DomainControlValidation::MAX_DURATION_DAYS[:email]-(Date.today-dcv.responded_at.to_date).to_i : nil
        -remaining = 0 if remaining && remaining < 0
        -validity_period = (validation_status=='pending validation' || remaining.nil?) ? 'n/a' : "#{remaining} days remaining"
        -order_ref = d.certificate_content ? d.certificate_content.certificate_order.ref : ((dcv && dcv.csr_unique_value) ? dcv.csr_unique_value.csr.ref : 'Team')
        -status_link = 'validated'
        -unless validation_status=='validated'
          -if dcv.nil? || dcv.dcv_method == 'email'
            -status_link = link_to validation_status, validate_selected_domains_path(@ssl_slug, d_name_check: [d.id])
          -else
            -status_link = d.certificate_content ? (link_to validation_status, new_certificate_order_validation_path(@ssl_slug, d.certificate_content.certificate_order)) : (link_to validation_status, validate_against_csr_domains_path(@ssl_slug, unique_value: dcv.csr_unique_value.unique_value))
        %tr
          %td=(order_ref=='Team' || (dcv && dcv.csr_unique_value)) ? (check_box_tag "d_name_check[]",d.id, false, :id => "d_name_check_#{d.id}", :class => "d_name_check") : ''
          %td=d.name
          %td=d.certificate_content ? (link_to order_ref, new_certificate_order_validation_path(@ssl_slug, d.certificate_content.certificate_order)) : ((dcv && dcv.csr_unique_value) ? (link_to order_ref, validate_against_csr_domains_path(@ssl_slug, unique_value: dcv.csr_unique_value.unique_value)) : 'Team')
          %td.d_name_status=status_link
          %td=validity_period