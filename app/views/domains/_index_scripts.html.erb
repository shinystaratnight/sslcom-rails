<script type="text/javascript">
  jQuery.noConflict();
  jQuery(function ($) {
    $(document).ready(function () {
      $('#number_rows').change(function() {
        url = window.location.href;
        if (url.indexOf('?')>0) {
          url = url.substring(0, url.indexOf('?'))
        }
        window.location = url + "/?per_page=" + $(this).val();
      });

      $('form#add_domains').ajaxForm({
        dataType: "json",
        success: function(data, status){
          var domains = data['domains'];
          var exist_domains = data['exist_domains']
          if(exist_domains.length>0){
            var message_wrap_element = $('<div></div>');
            message_wrap_element.attr('class', 'flash_message notice');

            var message_element = $('<span></span>');
            var message = exist_domains.join(', ');
            message += " already exist";
            message += exist_domains.length>1 ? "" : "s";
            message_element.append(message);
            message_wrap_element.append(message_element);

            var btn_element = $('<small></small>');
            var close_btn_element = $('<div></div>');
            close_btn_element.attr('class', 'close_flash_message');

            var close_sign_element = $('<span></span>');
            close_sign_element.append('X');

            close_btn_element.append(close_sign_element);
            close_btn_element.append('close');

            btn_element.append(close_btn_element);
            message_wrap_element.append(btn_element);

            if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
              $('#content').find('.inner').children().first().remove();
            }
            message_wrap_element.insertBefore($('#content').find('.inner').children().first());
          }
          $.each(domains, function (key, value) {
            var new_row = "<tr>";
            new_row += "<td><input type='checkbox' name='d_name_check[]' id='d_name_check_" + value.domain.id + "' value='" + value.domain.id + "' class='d_name_check'></td>"
            new_row += "<td>" + value.domain.name + "</td>";
            new_row += "<td>Team</td><td>Pending validation</td><td>n/a</td></tr>";
            $(new_row).insertAfter($(".heading_row"));
          });
        }
      });

      $('#d_name_action_remove').on('click', function (e) {
        e.preventDefault();
        if(confirm("Are you sure you want remove selected domains?")){
          var action = location.pathname + '/remove_selected';
          var d_ids = [];
          if($('input:checked').length==0) return;
          $.each($('input:checked'), function (key, element) {
            d_ids.push($(element).val());
          });
          $.ajax({
            url: action,
            data: {d_name_check : d_ids},
            type: 'POST',
            success: function (data) {
              var deleted_domains = data['deleted_domains'];
              if(deleted_domains.length>0){
                var message_wrap_element = $('<div></div>');
                message_wrap_element.attr('class', 'flash_message notice');

                var message_element = $('<span>Domains removed successfully</span>');
                message_wrap_element.append(message_element);

                var btn_element = $('<small></small>');
                var close_btn_element = $('<div></div>');
                close_btn_element.attr('class', 'close_flash_message');

                var close_sign_element = $('<span></span>');
                close_sign_element.append('X');

                close_btn_element.append(close_sign_element);
                close_btn_element.append('close');

                btn_element.append(close_btn_element);
                message_wrap_element.append(btn_element);

                if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
                  $('#content').find('.inner').children().first().remove();
                }
                message_wrap_element.insertBefore($('#content').find('.inner').children().first());
              }
              $.each(deleted_domains, function (key, value) {
                $('#d_name_check_'+value).closest('tr').remove();
              });
            }
          });
        }
      })

      $(document).on('click', '.d_name_check', function () {
        if($('.d_name_check:checkbox:checked').length>0){
          $("#d_name_action_remove").prop('disabled', false);
          $("#d_name_action_validate").prop('disabled', false);
          $("#d_name_action_bind").prop('disabled', false);
        } else {
          $("#d_name_action_remove").prop('disabled', true);
          $("#d_name_action_validate").prop('disabled', true);
          $("#d_name_action_bind").prop('disabled', true);
        }
        $('.d_name_check:checkbox:checked').each(function () {
          var d_status = $(this).closest("tr").find(".d_name_status").first().html();
          if(d_status=='Validated') {
            $("#d_name_action_validate").prop('disabled', true);
          }
        })
      });
      <%if @csr%>
        $(document).on('change', 'select[id=dcv_methods]', function() {
          console.log("here");
          var dcv_select=$(this);
          var dt = new Date();
          var time = (dt.getMonth()+1) + "-"
            + dt.getDate() + "-"
            + dt.getFullYear() + " "
            + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
          //prevent other options from being selected if None is selected
          methods=$.get_selected_options(this, 'text');
          if($.method_none_selected(methods)){
            $(this).find(':selected').each(function(c, selected){
              if($(selected).text()!='<%=Validation::NONE_SELECTED%>')
                $(selected).attr('selected', false);
            });
          }

          var domain = $(this).attr("alt");

          //get cert order index
          instruction=$('span[alt="'+$(this).attr('alt')+'"]')[0];
          /*file=$(this).attr("alt").replace("*.", "").toLowerCase()+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";*/
          file=domain+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";
          https = "https://"+file;
          http = "http://"+file;
          wwwfile=$(this).attr("alt").replace("*.", "www.").toLowerCase()+"/.well-known/pki-validation/"+$('.md5_hash').text()+".txt";
          wwwhttps = "https://"+wwwfile;
          wwwhttp = "http://"+wwwfile;
          cname = $('.dns_md5_hash').text()+"."+domain+" -> "+$('.dns_sha2_hash').text()+".com";

          if (methods[0] == 'Please select a validation method') {
            $(instruction).html("Please select a validation method");
            $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html("n/a").css({ background: "white", color:"black" });
          }
          else if(/@/.test(methods[0])){
            $(instruction).html("Validation instructions will be emailed to "+methods[0]+". Please follow those instructions.")
            $('td.pretest[class~="'+$(dcv_select).attr("alt")+'"]').html("n/a").css({ background: "white", color:"black" });
          }
          else if(/https/.test(methods[0])){
            instructions="Upload <a href='<%=http_dcv_file_csr_path(@ssl_slug, @csr.id)%>'>this file</a> to this location: <a href='"+https+"' target='_new'>"+https+"</a>";
            $(instruction).html(instructions);
          }
          else if(/http/.test(methods[0])){
            instructions="Upload <a href='<%=http_dcv_file_csr_path(@ssl_slug, @csr.id)%>'>this file</a> to this location: <a href='"+http+"' target='_new'>"+http+"</a>";
            $(instruction).html(instructions);
          }
          else if(/cname/.test(methods[0])){
            $(instruction).html("Create CNAME: "+cname);
          }
          $(instruction).css({ background: "yellow" });
        });
      <%end %>

      $.get_selected_options=function(select, type){
        options=[];
        $(select).find(':selected').each(function(c, selected){
          if(type=='text')
            options[c] = $(selected).text();
          else
            options[c] = $(selected).val();
        });
        return options;
      };

      $.method_none_selected=function(methods){
        for(m=0; m<methods.length; m++){
          if(methods[m]=='<%=Validation::NONE_SELECTED%>')
            return true;
        }
        return false;
      }

    });
  });
</script>