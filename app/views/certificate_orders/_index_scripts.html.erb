<script type="text/javascript">
function activate_physical_token(certificate_order_ref, physical_token_id, name)
{
  var serial = prompt("Please enter the serial number of token "+name, '');
  if (serial == null || serial=="")
    return;
  else
    window.location = '/certificate_orders/'+certificate_order_ref+'/physical_tokens/'+physical_token_id+'/activate?serial='+encodeURIComponent(serial);
}

function destroy_cert_download_link(event) {
  document.body.removeChild(event.target);
}

function cert_download(cert) {
  var certAsBlob = new Blob([cert], { type: "application/x-x509-user-cert" });
  var downloadLink = document.createElement('a');
  downloadLink.download = 'sslcom_cert.crt';
  downloadLink.innerHTML = "Download File";

  downloadLink.href = window.URL.createObjectURL(certAsBlob);
  downloadLink.onclick = destroy_cert_download_link;
  downloadLink.style.display = "none";
  document.body.appendChild(downloadLink);

  downloadLink.click();
}

jQuery.noConflict();
jQuery(function($) {
  $(document).ready(function() {
    $('#number_rows').change(function() {
      $('#per_page').val($(this).val());
      $('#search_form').submit();
    });

    var url = window.location.pathname;
    if (url.substr(url.lastIndexOf('/') + 1, url.length) == 'generate_cert') {
      <%if @certificate_order%>
        var is_cs = '<%=@certificate_order.certificate.is_cs?%>';

        $('.own_csr').click(function() {
          if ($(this).prop('checked')) {
            if (is_cs == '') {
              $('.csr_wrap').show();
              /*$('.pri_key_wrap').show();*/
            } else {
              $('.csr_wrap').show();
            }
          } else {
            if (is_cs == '') {
              $('.csr_wrap').hide();
              /*$('.pri_key_wrap').hide();*/
            } else {
              $('.csr_wrap').hide();
            }
          }
        });

        $('.generate_cert').click(function() {
          // Adding loading bar while generate CSR, Private Key and Certificate.
          var page_loader_wrap = $('<div></div>');
          page_loader_wrap.attr('class', 'page_loader_wrap');

          var page_loader = $('<div></div>');
          page_loader.attr('class', 'page_loader');

          page_loader_wrap.append(page_loader);

          window.scrollTo(0, 0);
          $('body').addClass('no_scroll_y');
          page_loader_wrap.insertBefore($('#header'));

          var account_key = '<%= @certificate_order.ssl_account.api_credential.account_key %>';
          var secret_key = '<%= @certificate_order.ssl_account.api_credential.secret_key %>';
          var ref = '<%= @certificate_order.ref %>';
          var api_domain = '<%=api_domain%>';

          /*if (is_cs == '' && $('.csr').val() != '') {*/
          if ($('.csr').val() != '') {
            $.ajax({
              url: api_domain + '/generate_certificate',
              data: {
                csr: $('.csr').val(),
                ref: ref,
                account_key: account_key,
                secret_key: secret_key
              },
              type: "POST",
              success: function (data) {
                $('.page_loader_wrap').hide();
                $('body').removeClass('no_scroll_y');

                $('.csr').attr('readonly', true);
                $('.cert').val(data.cert_results);
                $('.cert').attr('readonly', true);
                $('.cert_wrap').show();

                /*$('.generate_cert').hide();*/
                $('.generate_wrap').hide();
                $('.cert_download_wrap').show();
              }
            });
          } else {
            // Extracting Common Info from Subject
            const info = {}
            var subject_dn_str = $('.cs_subject_dn').val().split(",");

            $.each(subject_dn_str, function(idx) {
              if (subject_dn_str[idx].split('=')[0] == 'CN') {
                info['commonname'] = subject_dn_str[idx].split('=')[1];
              } else if (subject_dn_str[idx].split('=')[0] == 'O') {
                info['organization'] = subject_dn_str[idx].split('=')[1];
              } else if (subject_dn_str[idx].split('=')[0] == 'C') {
                info['country'] = subject_dn_str[idx].split('=')[1];
              }
            });

            // Generating CSR, Private Key and Certificate
            generateCSR(info, undefined, function(csr, pkey) {
              $('.csr').val(csr);
              $('.csr').attr('readonly', true);
              $('.csr_wrap').show();

              $('.pri_key').val(pkey);
              $('.pri_key').attr('readonly', true);
              $('.pri_key_wrap').show();

              $.ajax({
                url: api_domain + '/generate_certificate',
                data: {
                  csr: csr,
                  ref: ref,
                  account_key: account_key,
                  secret_key: secret_key
                },
                type: "POST",
                success: function (data) {
                  $('.page_loader_wrap').hide();
                  $('body').removeClass('no_scroll_y');

                  $('.cert').val(data.cert_results);
                  $('.cert').attr('readonly', true);
                  $('.cert_wrap').show();

                  /*$('.generate_cert').hide();*/
                  $('.generate_wrap').hide();
                  $('.pkcs_download_wrap').show();
                }
              });
            }, function(err) {
              alert(err);
            });
          }
        });

        $('.pkcs_download').click(function() {
          if ($('.pri_key').val() == '') {
            alert('Please input your own Private Key.');
          } else {
            window.scrollTo(0, 0);
            $('body').addClass('no_scroll_y');
            $('.page_loader_wrap').show();

            var password = $('.pkcs_password').val();
            var certificate = $('.cert').val().replace(/(-----(BEGIN|END) CERTIFICATE-----|\n)/g, '');
            var priKey = $('.pri_key').val().replace(/(-----(BEGIN|END) PRIVATE KEY-----|\n)/g, '');
            passwordBasedIntegrity([certificate], priKey, password, function() {
              $('.page_loader_wrap').hide();
              $('body').removeClass('no_scroll_y');
            });
          }
        });

        $('.cert_download').click(function() {
          cert_download($('.cert').val());
        });

        /*$('.cs_generate_cert').click(function() {
          $('.cs_generate_cert').attr('disabled', true);

          var account_key = '< %= @certificate_order.ssl_account.api_credential.account_key %>';
          var secret_key = '< %= @certificate_order.ssl_account.api_credential.secret_key %>';
          var ref = '< %= @certificate_order.ref %>';
          var csr = $('.csr').val();

          $.ajax({
            url: '/generate_certificate',
            data: {
              csr: csr,
              ref: ref,
              account_key: account_key,
              secret_key: secret_key
            },
            type: "POST",
            success: function (data) {
              $('.cert').val(data.cert_results);
            }
          });
        });*/
      <%end%>
    }

    $('#btn_cert_order_filter').click(function() {
      $('#wrap_cert_order_filter').show();
      $('#btn_cert_order_search').prop('disabled', true);

      var filterItems = $('#search').val().split(/\s(?=(?:[^']|'[^']*')*$)/);
      $.each(filterItems, function(idx) {
        var filterItem = filterItems[idx];
        if (filterItem.indexOf(':') > 0) {
          var filterKey = filterItem.split(':')[0];
          var filterValue = filterItem.split(':')[1];

          $('#filter_' + filterKey + '_chk').prop('checked', true);

          if (filterKey == 'is_test') {
            return;
          }

          if (filterKey == 'expires_at' || filterKey == 'created_at' || filterKey == 'issued_at') {
            var dateStr = filterValue.split('-')[0];
            dateStr = dateStr.split('/')[2] + '-' + dateStr.split('/')[0] + '-' + dateStr.split('/')[1];
            $('#filter_' + filterKey.split('_')[0] + '_from').val(dateStr);

            if (filterValue.split('-').length > 1) {
              dateStr = filterValue.split('-')[1];
              dateStr = dateStr.split('/')[2] + '-' + dateStr.split('/')[0] + '-' + dateStr.split('/')[1];
              $('#filter_' + filterKey.split('_')[0] + '_to').val(dateStr);
            }
          } else if (filterKey == 'physical_token') {
            var tokens = filterValue.split(',');
            $.each(tokens, function(cIdx) {
              if (tokens[cIdx] == 'in_possession') {
                $('#filter_activated_chk').prop('checked', true);
              } else {
                $('#filter_' + tokens[cIdx] + '_chk').prop('checked', true);
              }
            });
          } else if (filterKey == 'strength') {
            var strengths = filterValue.split(',');
            $.each(strengths, function(cIdx) {
              if (strengths[cIdx] != '1024' && strengths[cIdx] != '2048' && strengths[cIdx] != '4096') {
                $('#filter_strength').val(strengths[cIdx]);
              } else {
                $('#filter_' + strengths[cIdx] + '_chk').prop('checked', true);
              }
            });
          } else if (filterKey == 'product' || filterKey == 'status') {
            $('#filter_' + filterKey).val(filterValue.split(','));
          } else {
            if (filterValue.charAt(0) == "'" && filterValue.charAt(filterValue.length - 1) == "'") {
              $('#filter_' + filterKey).val(filterValue.slice(1, -1));
            } else {
              $('#filter_' + filterKey).val(filterValue);
            }
          }

          var filterWrap = $('#filter_' + filterKey + '_chk').parent().parent().next().find('.filter_cont');
          filterWrap.show();
        }
      });
    });

    $('#btn_close_cert_order_filter').click(function() {
      $('#wrap_cert_order_filter').hide();
      $('#btn_cert_order_search').prop('disabled', false);

      $('.filter_chk').prop('checked', false);
      $('.filter_cont_text').val('');
      $('.filter_cont_date').val('');
      $('#filter_product.filter_cont_slt').val([]);
      $('#filter_status.filter_cont_slt').val([]);
      $('#filter_country.filter_cont_slt').val('US');
      $('.filter_cont_chk').prop('checked', false);
      $('.filter_cont').hide();
    });

    $('#btn_cert_order_filter_search').click(function() {
      var query = '';

      $('.filter_item').each(function() {
        var isChecked = $(this).find('.filter_chk').prop('checked');

        if (isChecked) {
          if ($(this).find('.filter_chk').prop('id') == 'filter_is_test_chk') {
            query += $(this).find('.filter_chk').data('field') + ':true ';
            return;
          }

          var filterCont = $(this).find('.filter_cont');
          var val, itemQuery = '';

          if (filterCont.data('type') == 'text' || filterCont.data('type') == 'select') {
            val = filterCont.children().val().indexOf(' ') > 0 ? "'" + filterCont.children().val() + "'" : filterCont.children().val();

            if (val.trim() != '') {
              itemQuery = filterCont.children().data('field') + ':' + val;
            }
          } else if (filterCont.data('type') == 'select-multi') {
            if (filterCont.children().val()) {
              val = filterCont.children().val().toString();

              if (val.trim() != '') {
                itemQuery = filterCont.children().data('field') + ':' + val;
              }
            }
          } else if (filterCont.data('type') == 'date') {
            var from = filterCont.children().first().children().first().val();
            var year = '';

            if (from != '') {
              year = from.substring(0, from.indexOf('-'));
              from = from.substring(from.indexOf('-') + 1) + '-' + year;

              var to = filterCont.children().last().children().first().val();

              if (to != '') {
                year = to.substring(0, to.indexOf('-'));
                to = to.substring(to.indexOf('-') + 1) + '-' + year;
                val = from.replace(/-/g, '/') + '-' + to.replace(/-/g, '/');
              } else {
                val = from.replace(/-/g, '/');
              }

              itemQuery = filterCont.children().last().children().first().data('field') + '_at:' + val;
            }
          } else if (filterCont.data('type') == 'checkbox') {
            if (filterCont.find('#filter_in_transit_chk').prop('checked')) {
              itemQuery = filterCont.find('#filter_in_transit_chk').data('field');
            }
            if (filterCont.find('#filter_received_chk').prop('checked')) {
              itemQuery += itemQuery == '' ? '' : ',';
              itemQuery += filterCont.find('#filter_received_chk').data('field');
            }
            if (filterCont.find('#filter_activated_chk').prop('checked')) {
              itemQuery += itemQuery == '' ? '' : ',';
              itemQuery += filterCont.find('#filter_activated_chk').data('field');
            }
            if (itemQuery != '') {
              itemQuery = filterCont.data('field') + ':' + itemQuery;
            }
          } else if (filterCont.data('type') == 'mix') {
            if (filterCont.find('#filter_1024_chk').prop('checked')) {
              itemQuery = filterCont.find('#filter_1024_chk').data('field');
            }
            if (filterCont.find('#filter_2048_chk').prop('checked')) {
              itemQuery += itemQuery == '' ? '' : ',';
              itemQuery += filterCont.find('#filter_2048_chk').data('field');
            }
            if (filterCont.find('#filter_4096_chk').prop('checked')) {
              itemQuery += itemQuery == '' ? '' : ',';
              itemQuery += filterCont.find('#filter_4096_chk').data('field');
            }
            if (filterCont.find('#filter_strength').val() != '') {
              itemQuery += itemQuery == '' ? '' : ',';
              itemQuery += filterCont.find('#filter_strength').val();
            }
            if (itemQuery != '') {
              itemQuery = filterCont.data('field') + ':' + itemQuery;
            }
          }

          query += itemQuery + ' ';
        }
      });

      $('#search').val(query.trim());
      $('#search_form').submit();
    });

    $('.filter_item input[type="checkbox"]').click(function() {
      if ($(this).prop('id') == 'filter_is_test_chk') {
        return;
      }

      var isChecked = $(this).prop('checked');
      var parentSiblingNode = $(this).parent().parent().next();
      var filterItem = parentSiblingNode.find('.filter_cont');

      if (isChecked) {
        filterItem.show();
      } else {
        if ($(this).prop('id') == 'filter_created_at_chk'
          || $(this).prop('id') == 'filter_expires_at_chk'
          || $(this).prop('id') == 'filter_issued_at_chk') {
          filterItem.children().first().children().first().val('');
          filterItem.children().last().children().first().val('');
        } else if ($(this).prop('id') == 'filter_product_chk' || $(this).prop('id') == 'filter_status_chk') {
          filterItem.children().val([]);
        } else if ($(this).prop('id') == 'filter_country_chk') {
          filterItem.children().val('us');
        } else if ($(this).prop('id') == 'filter_physical_token_chk') {
          filterItem.find('.filter_cont_chk').prop('checked', false);
        } else if ($(this).prop('id') == 'filter_strength_chk') {
          filterItem.find('.filter_cont_chk').prop('checked', false);
          filterItem.find('#filter_strength').val('');
        } else {
          filterItem.children().val('');
        }

        filterItem.hide();
      }
    });

    $('.filter_cont_date').change(function() {
      var idVal = $(this).attr('id');
      var from, to = '';

      if (idVal.indexOf('from') > 0) {
        from = idVal;
        to = from.replace('from', 'to');
      } else {
        to = idVal;
        from = to.replace('to', 'from');
      }

      if ((idVal == from && $('#' + to).val() != '')
        || (idVal == to && $('#' + from).val() != '')) {
        var dateFrom = $('#' + from).val();
        var dateTo = $('#' + to).val();

        if (dateFrom > dateTo && idVal == from) {
          $('#' + from).val('');
        } else if (dateFrom > dateTo && idVal == to) {
          $('#' + to).val('');
        }
      }
    });

    $('form.create_test_order').ajaxForm({
      dataType: "json",
      beforeSubmit: function(){
        confirmed = confirm('Create Test SSL Order?');
        if(confirmed){
          $('#waiting_bar').show();
        }
        return confirmed;
      },
      success: function(data, status){
        if(data.errors){
          $('.error').html("The following fields have errors:</br><ul>");
          $.each(data.errors, function(i, item) {
            // i = index
            // item = data for a particular post
            $('.error').append("<li>"+i+": "+item.toString()+"</li>");
          });
          $('.error').append("</ul>").show();
        }
        else
          window.location.replace("<%=filter_by_scope_certificate_orders_path(@ssl_slug, 'is_test')%>");
      },
      error: function(data, status){
        if(data.errors){
          $('.error').html("The following fields have errors:</br><ul>");
          $.each(data.errors, function(i, item) {
            // i = index
            // item = data for a particular post
            $('.error').append("<li>"+i+": "+item.toString()+"</li>");
          });
          $('.error').append("</ul>").show();
        }
        else
          window.location.replace("<%=filter_by_scope_certificate_orders_path(@ssl_slug, 'is_test')%>");
      }
    });

    <%if current_user.ssl_account.is_registered_reseller?%>
      $('#next_submit').click(function(){
        if(!$('input[id$=validation]').attr('checked')){
          alert('Please click the validated checkbox to proceed with order placement.');
          return false;
        }
      });
    <%end%>
    
    function populateContact(label, data) {
      if (label=='country') {
        $("label[for='" + label + "']").siblings('select').val(data);  
      } else {
        $("label[for='" + label + "']").siblings('input').val(data);
      }
    }
    
    $('#saved_contacts').change(function() {
      var list = [
        ['title', 'title'],
        ['company_name', 'company_name'],
        ['department', 'department'],
        ['po_box', 'po_box'],
        ['address1', 'address1'],
        ['address2', 'address2'],
        ['address3', 'address3'],
        ['city', 'city'],
        ['state', 'state'],
        ['postal_code', 'postal_code'],
        ['country', 'country'],
        ['postal_code', 'postal_code'],
        ['email', 'email'],
        ['phone', 'phone'],
        ['first_name', 'first_name'],
        ['last_name', 'last_name'],
        ['fax', 'fax'],
        ['ext', 'ext']
      ];
      list.forEach(function(el) {
        populateContact(el[0], $('#saved_contacts option:selected').data(el[1]));
      });
    });
    
    $('.dropdown, .status_message, .expand, .subject_column > a').click(function(){
      /*if($(this).parents().filter('tr').next().css('display')!='none'){
        $(this).parents().filter('tr').next().css('display', 'none');
        $(this).parents().filter('tr').find('.dropdown img').attr('src',"< %= asset_path('expand.png') %>");
        $(this).parents().filter('tr').find('.expand').text('open');
        this.expanded = false;
      }
      else{
        this.expanded = true;
        $(this).parents().filter('tr').find('.dropdown img').attr('src',"< %= asset_path('contract.png') %>");
        $(this).parents().filter('tr').next().show();
        $(this).parents().filter('tr').find('.expand').text('close');
      }*/

      var currentElmt = $(this);

      if (currentElmt.parents().filter('tr').next().hasClass('expanded') == true) {
        if (currentElmt.parents().filter('tr').next().is(":visible")) {
          currentElmt.parents().filter('tr').next().hide();
          currentElmt.parents().filter('tr').find('.dropdown img').attr('src',"<%= asset_path('expand.png') %>");
          currentElmt.parents().filter('tr').find('.expand').text('open');
        } else {
          currentElmt.parents().filter('tr').next().show();
          currentElmt.parents().filter('tr').find('.dropdown img').attr('src',"<%= asset_path('contract.png') %>");
          currentElmt.parents().filter('tr').find('.expand').text('close');
        }
      } else {
        var cert_order_ref = currentElmt.parents().filter('tr').attr('alt');
        var ajaxUrl = '<%=show_cert_order_certificate_orders_path%>';

        $.ajax({
          url: ajaxUrl,
          data: {
            id: cert_order_ref
          },
          type: "GET",
          dataType: "html",
          success: function(result) {
            if (currentElmt.parents().filter('tr').next().hasClass('expanded') == false) {
              currentElmt.parents().filter('tr').after(result);
              currentElmt.parents().filter('tr').find('.dropdown img').attr('src',"<%= asset_path('contract.png') %>");
              currentElmt.parents().filter('tr').find('.expand').text('close');
            }
          }
        });
      }

    });

    $('textarea[name*=body]').click(function(){
      $(this).select();
    });
    $('form[id^=edit_certificate_order] textarea').keyup(function(){
      $(this).parents().filter('form').ajaxSubmit();
    });
  });
});
</script>
