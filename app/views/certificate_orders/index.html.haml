-content_for :title, "Certificate Order Management"
=render :partial => 'index_scripts'
#search_bar
  -form_tag :search_certificate_orders, :method=>:get do
    subject or ref#
    =text_field_tag :search, @search
    =submit_tag 'search'
=render :partial=>'quick_links'
#certificate_orders
  %table(cellspacing="0")
    -if will_paginate @certificate_orders
      %tfoot
        %tr
          %td(colspan='6')=will_paginate @certificate_orders
    %caption 
      SSL Certificates Management
      =will_paginate @certificate_orders
    %tr.heading_row
      %td
      %th.name(scope="col")Subject
      %th(scope="col") Status
      %th(scope="col") Order Date
      %th(scope="col") Expires
      %th(scope="col") Action
    -@certificate_orders.each do |co|
      -next if co.order.blank?
      -cc = co.certificate_content
      -next if !co.is_unused_credit? && cc.csr.blank?
      -cn = (co.is_unused_credit? || cc.csr.blank?) ? nil : cc.csr.common_name
      %tr
        %td.dropdown
          -unless co.is_expired_credit?
            =image_tag 'expand.png'
        %td.name
          =render :partial=>'subject_column', :locals=>{:certificate_order=>co}
        %td.status_message(class="#{status_class(cc)}")
          #{certificate_order_status(cc)}
        %td
          =co.order.created_at.strftime("%b %d, %Y")
        %td(class="#{expires_on_class(cc)}")
          #{expires_on(cc)}
        %td
          #{action(co)}
      %tr.hidden.expanded
        %td(colspan="6")
          .certificate_details
            =render :partial=>'/certificate_orders/co', :object=>co
            %table(cellspacing="0")
              %tbody
                %tr
                  %td(colspan="6")
                    -unless co.is_expired_credit?
                      .certificate_details_box
                        %ul
                          %li
                            %strong certificate contents
                          -unless cc.blank?
                            -if cc.signed_certificate.blank?
                              -if cc.csr.blank?
                                %li
                                  %em waiting for csr
                              -else
                                =render partial: "certificate_orders/registrant_fields", object: cc.csr
                            -else
                              =render partial: "certificate_orders/registrant_fields", object: cc.signed_certificate
                          -unless co.is_unused_credit?
                            %li=link_to "view certificate details", co
                          %li=link_to "view order transaction", co.order
                      .certificate_details_box
                        %ul
                          %li
                            %strong contacts
                          -if cc.new?
                            %li
                              %em waiting for csr
                          -else
                            -unless cc.blank? || cc.certificate_contacts.blank?
                              -CertificateContent::CONTACT_ROLES.each do |role|
                                %li
                                  \#{role}:
                                  -ct = cc.certificate_contacts.detect(&"is_#{role}?".to_sym)
                                  -unless ct.blank?
                                    %ul
                                      %li #{ct.first_name} #{ct.last_name}
                                      %li #{ct.email}
                                  -else
                                    none
                            -unless  cc.blank?
                              %li
                                =link_to 'create/edit contacts', certificate_content_contacts_url(cc)
                      .certificate_details_box
                        %ul
                          -unless co.is_unused_credit? || co.skip_verification?
                            %li
                              %strong validation of domain control
                            =render partial: 'validations/dcv', locals: {co: co}
                          %li
                            %strong validation documentation
                          -if co.description['validation_level'] == 'Class 1'
                            %li n/a
                          -else
                            -unless co.validation.validation_histories.blank?
                              -co.validation.validation_histories.each do |vh|
                                %li
                                  =link_to image_tag('preview.png', :class=>'blue_icon'), vh.document_url(:preview), :rel=>'prettyPhoto'
                                  =link_to image_tag('download.png', :class=>'blue_icon'), vh.document_url
                                  =vh.document_file_name.shorten(20, false)
                            -else
                              %li
                                %em none submitted
                            %li.category_border
                              -unless cc.blank? || cc.new? || cc.csr_submitted? || cc.info_provided? || co.expired?
                                -unless co.validation_rules_satisfied? || co.certificate_content.expired?
                                  -ul=link_to 'upload', new_certificate_order_validation_url(co)
                                -unless co.validation.validation_histories.blank?
                                  -m=link_to 'manage', edit_certificate_order_validation_url(co)
                                -s=link_to 'status', certificate_order_validation_url(co)
                                =link_cluster([ul,m,s])
                              -else
                          -if current_user.is_admin?
                            %li
                              %strong admin functions
                            -if cn
                              %li=link_to "visit http://#{cn}", "http://#{cn}", target: "_blank"
                              %li=link_to "visit https://#{cn}", "https://#{cn}", target: "_blank"
                            -u = co.ssl_account.users.last
                            %li=remote_login_link(u)
                      -if cc.csr && cc.csr.signed_certificate
                        .certificate_details_box
                          %ul
                            %li
                              %strong certificate bundle
                            %li
                              =link_to image_tag('download.png', :class=>'blue_icon'), download_certificate_order_path(co)
                              =link_to "click here to download certificate", download_certificate_order_path(co)
