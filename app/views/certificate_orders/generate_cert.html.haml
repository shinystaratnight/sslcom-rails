-content_for :title, "Certificate generation for CS"
=render :partial => 'index_scripts'
= javascript_include_tag "promise.min", "webcrypto-liner.shim", "asmcrypto.min", "elliptic.min", "bundle.umd.min", "bundle.pkcs.umd.min"
=stylesheet_link_tag 'bootstrap_style', :media => 'all'
%div{:style=>"width: 100%"}
  %h2
    Generate Request and Certificate For
    =link_to @certificate_order.ref,@certificate_order
  %h3.center
    Note: Your private key will be generated on your own computer by your web browser.
    SSL.com will never see or handle your private keys.
  -is_cs = @certificate_order.certificate.is_code_signing?
  -is_client = @certificate_order.certificate.is_smime_or_client?
  - if @certificate_order.certificate_content.subject_dn
    .gen_cert_head
      .row.pt-5.pb-5
        .col-md-3
        .col-md-6
          %fieldset.gen_cert_head
            %legend
              Subject DN
            - @certificate_order.certificate_content.subject_dn.split(',').each do |s|
              .subject_dn_info.clearfix
                .subject_dn_label.right
                  =s.split('=')[0] + '  : '
                .subject_dn_value
                  =s.split('=')[1]

  -#-if @certificate_order.certificate_content.subject_dn
    %dl.center
      %dt
        %strong subject dn
      -@certificate_order.certificate_content.subject_dn.split(',').each do |s|
        %dt=s
  %input.cs_subject_dn{:type=>'hidden', :value=>"#{is_cs || is_client ? @certificate_order.certificate_content.locked_subject_dn : @certificate_order.certificate_content.subject_dn}"}
  %input.sign_alg_type{:type => 'hidden', :value => 'rsa'}
  .generate_wrap
    .row.pt-3
      - if current_user.blank?
        .col-md-6
          %input.generate_cert.right{:type=>'button', :value=>'Generate Certificate', :class=>'btn btn-primary'}
        .col-md-6{:style=>'font-size: 1.5em'}
          %input.own_csr{:type=>'checkbox', :style=>'height: 35px; width: 20px; vertical-align: middle; margin-right: 10px'} I have my own CSR
      - else
        .col-md-5
          %input.generate_cert.right{:type=>'button', :value=>'Generate Certificate', :class=>'btn btn-primary'}
        .col-md-2.create_csr_block
          %input.create_csr.center{:type=>'button', :value=>'Create CSR', :class=>'btn btn-primary'}
        .col-md-5{:style=>'font-size: 1.5em'}
          %input.own_csr{:type=>'checkbox', :style=>'height: 35px; width: 20px; vertical-align: middle; margin-right: 10px'} I have my own CSR
  .integrated_algorithm_wrap
    .row.pt-4
      .col-md-3{:style=>"text-align: right"}
        Algorithm :
      .col-md-8
        = select_tag 'integrated_algorithm', options_for_select(@integrated_algorithm), include_blank: false, class: 'form-control'
    .row.pt-4.pb-4
      .col-md-3
      .col-md-8
        %input.toggle_show_btn{:type=>'button', :value=>'Show Advanced Option', :class=>'btn btn-primary'}
  .algorithm_wrap.hidden
    -#.row.pt-4
    -#  .col-md-3{:style=>"text-align: right"}
    -#    Hash Algorithm :
    -#  .col-md-8
    -#    = select_tag 'hash_algorithm', options_for_select(@hash_algorithm), include_blank: false, class: 'form-control'
    .row.pt-4
      .col-md-3{:style=>"text-align: right"}
        Sign Algorithm :
      .col-md-8
        = select_tag 'sign_algorithm', options_for_select(@sign_algorithm), include_blank: false, class: 'form-control'
    .row.pt-4.rsa_key_size
      .col-md-3{:style=>"text-align: right"}
        Key Size :
      .col-md-8
        = select_tag 'rsa_key_size', options_for_select(@rsa_key_size), include_blank: false, class: 'form-control'
    .row.pt-4.ecc_key_size{:style=>"display: none"}
      .col-md-3{:style=>"text-align: right"}
        Key Size :
      .col-md-8
        = select_tag 'ecc_key_size', options_for_select(@ecc_key_size), include_blank: false, class: 'form-control'
    .row.pt-4.pb-4
      .col-md-3
      .col-md-8
        %input.toggle_hidden_btn{:type=>'button', :value=>'Hide Advanced Option', :class=>'btn btn-primary'}
  .csr_wrap.hidden
    .row.pt-4
      .col-md-3{:style=>"text-align: right"}
        CSR :
      .col-md-9
        = text_area_tag 'csr_body', @managed_csr.blank? ? nil : @managed_csr.body, class: 'csr', cols: '80', rows: '10'
        -#%textarea.csr{:cols=>80, :rows=>10}
  .pri_key_wrap.hidden
    .row.pt-4
      .col-md-3{:style=>"text-align: right"}
        Private Key :
      .col-md-9.pri_key_block
        %textarea.pri_key{:cols=>80, :rows=>10}
        .error_msg
          * It requires private key
  .cert_wrap.hidden
    .row.pt-4
      .col-md-3{:style=>"text-align: right"}
        Certificate :
      .col-md-9
        %textarea.cert{:cols=>80, :rows=>10}
  .pkcs_download_wrap.hidden
    .row.pt-0
      .col-md-3
      .col-md-6.pt-4.pkcs_download_instruction
        Create a downloadable pfx file by setting a password and providing the private key (your private key is not sent to SSL.com or any other site)
    .row.pt-3
      .col-md-3{:style=>"text-align: right"}
        Password :
      .col-md-4.pkcs_password_block
        %input.pkcs_password.form-control{:type=>'password', :style=>'width: 100%'}
        .notice_msg
          * minimum of 6 characters required
      .col-md-5
        %input.pkcs_download{:type=>'button', :value=>'Download', :class=>'btn', :disabled=>'disabled'}
  .cert_download_wrap.pt-5.hidden
    %input.cert_download{:type=>'button', :value=>'Download', :style=>'display:block; margin: auto', :class=>'btn btn-primary'}
    = hidden_field_tag :cert_common_name, ''
    -#%a.user_cert_download{:download=>'sslcom_cert.crt'} Download File
