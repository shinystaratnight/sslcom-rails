<script type="text/javascript">
jQuery.noConflict();
jQuery(function($) {
  var ucc_reprocess = $('#calculated_reprocess_price');
  
  if (ucc_reprocess.length) {
    var wildcard_cost = $('#ucc-wildcard-amount').data('cost');
    wildcard_cost = (typeof wildcard_cost =='undefined') ? '0.00' : wildcard_cost;
    $('#order_wildcard_amount').val(wildcard_cost);
    $('#order_nonwildcard_amount').val($('#ucc-nonwildcard-amount').data('cost'));
  }
  
  $.uniqueStrings = function(list) {
    var result = [];
    $.each(list, function(i, e) {
      if ($.inArray(e, result) == -1) result.push(e);
    });
    return result;
  };
  
  $.domains = function(textArea){
    textArea.value = textArea.value.replace(/(\W)(\s+)/g, "$2").
      replace('_','').
      replace(/(\s+|^)([^<%='\*' if @certificate.allow_wildcard_ucc?%>\w])/g, "$1").
      replace(/[^\s\n\w\.\-<%='\*' if @certificate.allow_wildcard_ucc?%>]/g, "");
    <%if @certificate.allow_wildcard_ucc?-%>
      textArea.value = textArea.value.replace(/(\w)\*/g, "$1");
      textArea.value = textArea.value.replace(/(\*)[^\.]/g, "$1");
    <%end-%>
    domains = textArea.value.split(/\s/);
    <%if @certificate.is_premium_ssl?-%>
      domains = domains.slice(0,3);
      textArea.value = domains.join(' ');
    <%end-%>
    return domains.filter(Boolean);
  };
  
  $('#previous_csr').change(function(){
    if($(this).is(':checked'))
      $('#certificate_order_certificate_contents_attributes_0_signing_request').val($('#previous_csr_body').val());
    else
      $('#certificate_order_certificate_contents_attributes_0_signing_request').val("");
    $('#certificate_order_certificate_contents_attributes_0_signing_request').change();
  });
  $('span.use_previous_csr').click(function(){
    $('#previous_csr').click();
  });
  
  $.removeFromArray = function(value, arr) {
      return jQuery.grep(arr, function(elem, index) {
          return elem !== value;
      });
  };
  
  $.extractWildcards = function(domains) {
    var wildcards;
    if ( $('#ucc-wildcard-amount').length ) {
      wildcards = $.grep(domains, function(n, i) {
        return ( n.indexOf('*.')==0);
      }).filter(Boolean);
    } else {
      wildcards = [];
    }
    return wildcards.length;
  };
  
  $.getAllDomainCounts = function(domains) {
    var init_nonwildcard = $('#ucc-nonwildcard-amount').data('initial-count'),
        wildcard         = $('#ucc-wildcard-amount');
    init_nonwildcard     = (init_nonwildcard < 3 ? 3 : init_nonwildcard);
    var cur_wildcard     = $.extractWildcards(domains),
        init_wildcard    = (wildcard.length ? wildcard.data('initial-count') : 0),
        cur_nonwildcard  = domains.length - cur_wildcard,
        addt_nonwildcard = cur_nonwildcard - init_nonwildcard,
        addt_wildcard    = cur_wildcard - init_wildcard;
    return {
      cur_nonwildcard: cur_nonwildcard,
      cur_wildcard: cur_wildcard,
      addt_nonwildcard: (addt_nonwildcard < 0) ? 0 : addt_nonwildcard,
      addt_wildcard: (addt_wildcard < 0) ? 0 : addt_wildcard,
      init_nonwildcard: init_nonwildcard,
      init_wildcard: init_wildcard
    };
  };  
  
  $.adjustDomainPricing = function(textArea) {
      var domains = $.domains(textArea),
          ucc_initial = <%= Certificate::UCC_INITIAL_DOMAINS_BLOCK %>;
      $.removeFromArray("", domains);
      $('.order_amount_desc span').text(
        (domains.length > ucc_initial) ? domains.length : ucc_initial
      );
      
      if (ucc_reprocess.length > 0) {
        var domain_counts = $.getAllDomainCounts(domains);
        $('#order_wildcard_count').val(domain_counts.cur_wildcard);
        $('#order_nonwildcard_count').val(domain_counts.cur_nonwildcard);
        $('#wildcard-current-count').text('x ' + domain_counts.addt_wildcard);
        $('#nonwildcard-current-count').text('x ' + domain_counts.addt_nonwildcard);
        
        $.updateUccReprocessAmount(domain_counts.addt_nonwildcard, domain_counts.addt_wildcard);
        $.updateOrderDescription(domain_counts);
      } else {
        $.update_order_pricing();
      }
  };
  
  $.updateOrderDescription  = function(args) {
    var wildcard_data = $('#ucc-wildcard-amount').data('cost'),
      wildcard_cost = (typeof wildcard_data =='undefined') ? '0.00' : wildcard_data;
    
    $('#order_order_description').val('Prorated charge for ' 
      + (args.addt_nonwildcard + args.addt_wildcard)
      + ' additional domains: (wildcard: ' + args.addt_wildcard + ' x $' + wildcard_cost
      + ', non wildcard: ' + args.addt_nonwildcard + ' x $'
      + $('#ucc-nonwildcard-amount').data('cost') + '). '
      + 'Used ' + args.cur_wildcard + ' of ' + args.init_wildcard 
      + ' available wildcard domains and '
      + args.cur_nonwildcard + ' of ' + args.init_nonwildcard 
      + ' available non wildcard domains.'
    );
  };
  
  $("textarea[name*=signing_request]").click(function(){
    $(this).select();
  });
  
  <% unless @certificate.is_code_signing? || Rails.env.test? %>
    $("textarea[name*=signing_request]").bind("change keyup paste", function() {
      if($(this).val()==""){
        $(".flash_message").remove();
        return;
      }
      $.ajax({
        url: "<%=parse_csr_certificate_orders_path%>",
        data: {csr: $(this).val(), certificate: "<%=@certificate.product%>"},
        type: "POST",
        success: function(data, status){
          $(".flash_message").remove();
          var ajax_errors="";
          if((typeof data.certificate_content.csr.errors.base != 'undefined') && (data.certificate_content.csr.errors.base.length>0)){
            $.each(data.certificate_content.csr.errors.base, function(key, value){
              ajax_errors+="<li>"+value+"</li>";
            });
          }
          if((typeof data.certificate_content.errors.base != 'undefined') && (data.certificate_content.errors.base.length>0))
            $.each(data.certificate_content.errors.base, function(key, value){
              ajax_errors+="<li>"+value+"</li>";
            });
          if((typeof data.certificate_content.errors.signing_request != 'undefined') && (data.certificate_content.errors.signing_request.length>0))
            $.each(data.certificate_content.errors.signing_request, function(key, value){
              ajax_errors+="<li>signing request "+value+"</li>";
            });
          if(ajax_errors!="")
            $(".cert_reqs").after("<div class='flash_message error'><span><ul class='ajax_info'>"+ajax_errors+"</ul></span></div>");
          else{
            if((typeof data.certificate_content.csr.common_name != 'undefined')){
              <%if @certificate.product != "free" && @certificate_order.external_order_number.blank?%>
              var days_left = data.certificate_content.csr.days_left > 0 ? "<br><hr>"+data.certificate_content.csr.days_left+" free SSL.com Carryover days will be added from expiring SSL/TLS certificate" : "";
              <%else%>
              var days_left = "";
              <%end%>
              $(".cert_reqs").after("<div class='flash_message notice'><span class='ajax_info'>common name field in csr is: "+data.certificate_content.csr.common_name+days_left+"</span></div>");
            }
          <%if @certificate.is_ucc?-%>
            if((typeof data.certificate_content.csr.subject_alternative_names != 'undefined')){
              additional_domains = $("textarea[name*=additional_domains]").text() + " " + data.certificate_content.csr.subject_alternative_names;
              $("textarea[name*=additional_domains]").val($.uniqueStrings(additional_domains.split(/[\s,\n]+/)).join(" "));
              $.adjustDomainPricing($("textarea[name*=additional_domains]")[0]);
            }
          <%end-%>
          }
        }
      });
    });
  <%end%>
  
  $.updateUccReprocessAmount = function(nonwildcard_count, wildcard_count) {
    var wildcard         = $('#ucc-wildcard-amount'),
        wildcard_cost    = (wildcard.length ? wildcard.data('cost') : 0),
        nonwildcard_cost = $('#ucc-nonwildcard-amount').data('cost'),
        final_amount     = (nonwildcard_count * nonwildcard_cost) + (wildcard_count * wildcard_cost);
    
    $('#order_adjustment_amount').val(final_amount.toFixed(2));
    $('#calculated_reprocess_price').text('$' + final_amount.toFixed(2) + " USD");
  };
  
  $.update_order_pricing = function(){
    domains_cost = 0.0
    server_license_cost = 0.0;
    duration_index = <%= @certificate_order.certificate ? @certificate_order.certificate_duration(:years) : "$(':radio[name*=duration]:checked').val();".html_safe %>
    duration_cost = durations[duration_index-1];
    <%if @certificate.is_ucc? || @certificate.is_wildcard?%>
      server_license_cost = licenses[duration_index-1] * $('#certificate_order_server_licenses').val();
      included = "";
      if(server_license_cost==0)
        included = " (included)";
      $('#server_license_cost_ea').text(server_license_cost.toFixed(2)+included);
      <%if @certificate.is_ucc?%>
        wildcard_domains = $.grep(domains, function( n, i ) {
          return ( n.indexOf('*.')==0);
        }).filter(Boolean);
        if((domains.length - wildcard_domains.length) > <%=Certificate::UCC_INITIAL_DOMAINS_BLOCK%>){
          num_domains_buy = domains.length - wildcard_domains.length - <%=Certificate::UCC_INITIAL_DOMAINS_BLOCK%>;
          domains_cost = durations[duration_index-1][1]*num_domains_buy;
        }
        <%ratio = ("* "+@certificate_order.duration_remaining.to_s) if @certificate_order.signed_certificates.try(:last)%>
        $('#first_domain_tier_price').text((durations[duration_index-1][0]<%=ratio%>).toFixed(2));
        $('#second_domain_tier_price').text((durations[duration_index-1][1]<%=ratio%>).toFixed(2));
        <%unless @certificate.is_ev? or @certificate.is_premium_ssl?%>
          domains_cost = domains_cost + durations[duration_index-1][2]*wildcard_domains.length;
          $('#third_domain_tier_price').text((durations[duration_index-1][2]<%=ratio%>).toFixed(2));
        <%end%>
      <%end%>
    <%end%>
    if (ucc_reprocess.length == 0) {
      $('#calculated_price').text('$'+((parseFloat(duration_cost)+
        parseFloat(domains_cost)+parseFloat(server_license_cost)).toFixed(2))+
        " USD");
    }
  };
    var show_csr=true;
  $.build_cart_item = function(){
    return {"<%=ShoppingCart::PRODUCT_CODE%>" : $('#certificate_product').val() ,
      "<%=ShoppingCart::DURATION%>" : $(':radio[name*=duration]:checked').val(),
      <%if instance_variable_get('@'+CertificateOrder::RENEWING)-%>
        "<%=ShoppingCart::RENEWAL_ORDER%>" : '<%=instance_variable_get('@'+CertificateOrder::RENEWING).ref%>',
      <%end-%>
      "<%=ShoppingCart::LICENSES%>" :
      <%if @certificate.is_ucc? || @certificate.is_wildcard?-%>
      $('#certificate_order_server_licenses').val()
      <%else%>
      "0"
      <%end%>
      , "<%=ShoppingCart::DOMAINS%>" :
      <%if @certificate.is_ucc?%>
      $.domains($('textarea[id$=domains]')[0]).join(" ")
      <%else%>
      "0"
      <%end%>
      , "<%=ShoppingCart::AFFILIATE%>" : $.get_affiliate()};
  };
  $.change_cart_items = function(add_or_remove){
    add = (add_or_remove=="add") ? true : false;
    configured = $.build_cart_item();
    $.add_remove_cart_items(add, configured);
  };

  $.noLimitAccount = function() {
    return <%= current_user && current_user.ssl_account && current_user.ssl_account.no_limit %>;
  };

  $(document).ready(function() {
    domains = [];
    durations = new Array(<%=@certificate.num_durations%>);
    <%c = -1%>
    <%@certificate.num_durations.times do |i| -%>
      <%if @certificate.is_ucc?-%>
        durations[<%=i%>] = new Array(<%=@certificate.num_domain_tiers%>);
        <%@certificate.num_domain_tiers.times do |j|%>
          durations[<%=i%>][<%=j%>] = <%=(@certificate.items_by_domains(true)[i][j].price*((j==0)?3:1))%>;
        <%end%>
      <%else -%>
        durations[<%=i%>] = <%=@certificate.items_by_duration[i].price%>;
      <%end -%>
    <%end -%>
    <%if @certificate.is_ucc? || @certificate.is_wildcard?%>
      licenses = new Array(<%=@certificate.num_durations%>);
      <%@certificate.num_durations.times do |i| -%>
        licenses[<%=i%>] = <%=@certificate.items_by_server_licenses[i].price%>;
      <%end -%>
    <%end%>
    $('.submit_csr_img_tag').click(function() {
        var domains = $('.subject_alternative_names').val();

        if (domains.indexOf('_') > -1) {
          var message_wrap_element = $('<div></div>');
          message_wrap_element.attr('class', 'flash_message error');

          var message_element = $('<span></span>');
          message_element.append("Domain names can not contains '_' underline letter.");
          message_wrap_element.append(message_element);

          var btn_element = $('<small></small>');
          var close_btn_element = $('<div></div>');
          close_btn_element.attr('class', 'close_flash_message');

          var close_sign_element = $('<span></span>');
          close_sign_element.append('X');

          close_btn_element.append(close_sign_element);
          close_btn_element.append('close');

          btn_element.append(close_btn_element);
          message_wrap_element.append(btn_element);

          if ($('#content').find('.inner').children().first().hasClass('flash_message')) {
            $('#content').find('.inner').children().first().remove();
          }
          message_wrap_element.insertBefore($('#content').find('.inner').children().first());

          return false;
        }
    });
    $('textarea[id$=domains]').keyup(function () {
      $.adjustDomainPricing(this);
    });
    $(':radio[name*=duration]').click(function(){
      duration_index = $(':radio[name*=duration]:checked').val();
      $.update_order_pricing();
    });
    $('#certificate_order_server_licenses').click(function(){
      $.update_order_pricing();
    });
    $("li:contains('<%=CertificateContent::NOT_VALID_ISO_CODE%>')")
      .append(" <a href='<%=country_codes_csrs_path%>'>Please visit this link</a> for accepted country codes.");
    var profile_id = "";
    $('#expand_register_card').toggle(
      function(event){
          $.profileRequiredToggle('enable');
          $('#register_card_form').fadeIn();
          $(this).add('img[id=toggle_billing_profile_form]').attr('src', "<%= asset_path('hide_billing_profile_form.png') %>");
          $(event.target).text('Click here to hide form');
          profile_id = $(':radio[id*=funded_account_funding_source]:checked').attr("id");
          $(':radio[id*=funded_account_funding_source]').removeAttr('checked');},
      function(event){
          $.profileRequiredToggle('disable');
          $('#register_card_form').fadeOut();
          $(this).add('img[id=toggle_billing_profile_form]').attr('src', "<%= asset_path('add_new_billing_profile.png') %>");
          $(event.target).text('Click here to add a new credit card')
          $(':radio[id*='+profile_id+']').attr("checked","checked")}
      );
    $.last_delete_clicked=function(){
      if($('.delete_billing_profile').size() <= 1)
        $('.funding_sources_head, #existing_credit_cards').empty();
      $('#register_card_form').fadeIn();
    };
    $('#funded_account_amount').keyup(function () {
      amount = this.value
      $.update_balance_after_load();
    });
    $('#register_card_form').click(function(){
      $(':radio[id*=funded_account_funding_source]').removeAttr('checked');
    });
    $(':radio[id*=funded_account_funding_source]').click(function(){
      $('#register_card_form').fadeOut();
    });
    $('.has_csr_container').click(function(){
      $(this).siblings().filter(':radio[name*=has_csr]').click();
    });
    $('input[name*=agreement]').change(function(){
      $('#button_container').toggle(this.checked);
    });
    $(':radio[name*=has_csr]').click(function(){
      if($(this).val()=="false"){
        show_csr=false;
        $('#csr_section').hide();
        $('#form_progress_indicator').fadeOut();
      }
      else{
        show_csr=true;
        $('#csr_section').show();
        $('#form_progress_indicator').fadeIn();
      }
    });
    <%if !@certificate_order.is_unused_credit?%>
    $('form').submit(function(){
      //add to cart if csr is not ready
      if ($(':radio[name*=has_csr]').length!=0 && $(':radio[name*=has_csr]:checked').val()=="false") {
        $('textarea[name*=signing_request]').remove();
        $.change_cart_items("add");
        if ($.noLimitAccount()) {
          return true;
        } else {
          window.location = "<%=show_cart_orders_url%>";
          return false;
        }
      }
    });
    if($(':radio[name*=has_csr]:checked').val()=="false"){
      show_csr=false;
      $('#csr_section').hide();
      $('#form_progress_indicator').hide();
    }
    $('.add_to_cart_button').click(function(){
      $.change_cart_items("add");
    });
    $('.remove_from_cart_button').click(function(){
      $.change_cart_items("remove");
    });
    <%end%>
    <%if @certificate.is_ucc?-%>
      $.adjustDomainPricing($('textarea[id$=domains]')[0]);
    <%end-%>
    $.update_order_pricing();
    <%unless Settings.show_csr_submit_on_buy_page%>
      $('#has_csr_switch').hide();
    <%end%>
  });
});
</script>
