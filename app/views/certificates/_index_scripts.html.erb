<script type="text/javascript">
jQuery.noConflict();
jQuery(function($) {
  var ucc_reprocess = $('#calculated_reprocess_price');
  var names = '';
  
  if (ucc_reprocess.length) {
    var wildcard_cost = $('#ucc-wildcard-amount').data('cost');
    wildcard_cost = (typeof wildcard_cost =='undefined') ? '0.00' : wildcard_cost;
    $('#order_wildcard_amount').val(wildcard_cost);
    $('#order_nonwildcard_amount').val($('#ucc-nonwildcard-amount').data('cost'));
  }
  
  $.uniqueStrings = function(list) {
    var result = [];
    $.each(list, function(i, e) {
      if ($.inArray(e, result) == -1) result.push(e);
    });
    return result;
  };

  $.checkDomain = function(str) {
    var asterisk_counts = (str.match(/\*/g) || []).length;
    if (asterisk_counts == 0) {
      var ip_address_pattern = /\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b/;
      return psl.isValid(str) || ip_address_pattern.test(str);
    } else if (asterisk_counts == 1) {
      return psl.isValid(str.substr(2));
    } else if (asterisk_counts > 1) {
      return false;
    }
  };

  $.isWildcard = function(str) {
    var asterisk_counts = (str.match(/\*/g) || []).length;

    if (asterisk_counts == 0) {
      return false;
    } else {
      return true;
    }
  };
  
  <%if Settings.csr_domains_ui%>
    $.domains = function(all_domains){
      names = all_domains.replace(/(\W)(\s+)/g, "$2")
        .replace('_','')
        .replace(/(\s+|^)([^<%='\*' if @certificate.allow_wildcard_ucc?%>\w])/g, "$1")
        .replace(/[^\s\n\w\.\-<%='\*' if @certificate.allow_wildcard_ucc?%>]/g, "");
      <%if @certificate.allow_wildcard_ucc?-%>
        names = names.replace(/(\w)\*!/g, "$1");
        names = names.replace(/(\*)[^\.]/g, "$1");
      <%end-%>

      domains = names.split(/\s/);
      <%if @certificate.is_premium_ssl?-%>
        domains = domains.slice(0,3);
        names = domains.join(' ');
      <%end-%>

      return domains.filter(Boolean);
    };
  <%else%>
    $.domains = function(textArea){
      textArea.value = textArea.value.replace(/(\W)(\s+)/g, "$2")
        .replace('_','')
        .replace(/(\s+|^)([^<%='\*' if @certificate.allow_wildcard_ucc?%>\w])/g, "$1")
        .replace(/[^\s\n\w\.\-<%='\*' if @certificate.allow_wildcard_ucc?%>]/g, "");
      <%if @certificate.allow_wildcard_ucc?-%>
        textArea.value = textArea.value.replace(/(\w)\*/g, "$1");
        textArea.value = textArea.value.replace(/(\*)[^\.]/g, "$1");
      <%end-%>
      domains = textArea.value.split(/\s/);
      valid_domains = [];

      $.each(domains, function(idx) {
        if ($.checkDomain(domains[idx])) {
          valid_domains.push(domains[idx]);
        }
      });

      textArea.value = valid_domains.join(' ');

      <%if @certificate.is_premium_ssl?-%>
        valid_domains = valid_domains.slice(0, 3);
        textArea.value = valid_domains.join(' ');
      <%end-%>

      return valid_domains.filter(Boolean);
    };
  <%end%>
  
  $('#previous_csr').change(function(){
    if($(this).is(':checked')) {
      $('#certificate_order_certificate_contents_attributes_0_signing_request').val($('#previous_csr_body').val());
      $('.add_to_manager_block').hide();
      $('.managed_csrs_block').hide();
    } else {
      $('#certificate_order_certificate_contents_attributes_0_signing_request').val("");
      $('.add_to_manager_block').show();
      $('.managed_csrs_block').show();
    }

    $('#certificate_order_certificate_contents_attributes_0_signing_request').change();
  });
  $('span.use_previous_csr').click(function(){
    $('#previous_csr').click();
  });
  
  $.removeFromArray = function(value, arr) {
      return jQuery.grep(arr, function(elem, index) {
          return elem !== value;
      });
  };
  
  $.extractWildcards = function(domains) {
    var wildcards;
    if ( $('#ucc-wildcard-amount').length ) {
      wildcards = $.grep(domains, function(n, i) {
        return ( n.indexOf('*.')==0);
      }).filter(Boolean);
    } else {
      wildcards = [];
    }
    return wildcards.length;
  };
  
  $.getAllDomainCounts = function(domains) {
    var init_nonwildcard = $('#ucc-nonwildcard-amount').data('initial-count'),
        wildcard         = $('#ucc-wildcard-amount');
    init_nonwildcard     = (init_nonwildcard < 3 ? 3 : init_nonwildcard);
    var cur_wildcard     = $.extractWildcards(domains),
        init_wildcard    = (wildcard.length ? wildcard.data('initial-count') : 0),
        cur_nonwildcard  = domains.length - cur_wildcard,
        addt_nonwildcard = cur_nonwildcard - init_nonwildcard,
        addt_wildcard    = cur_wildcard - init_wildcard;
    return {
      cur_nonwildcard: cur_nonwildcard,
      cur_wildcard: cur_wildcard,
      addt_nonwildcard: (addt_nonwildcard < 0) ? 0 : addt_nonwildcard,
      addt_wildcard: (addt_wildcard < 0) ? 0 : addt_wildcard,
      init_nonwildcard: init_nonwildcard,
      init_wildcard: init_wildcard
    };
  };

  <%if Settings.csr_domains_ui%>
    $.adjustDomainPricing = function(all_domains) {
      var domains = $.domains(all_domains),
        ucc_initial = <%= Certificate::UCC_INITIAL_DOMAINS_BLOCK %>;
      $.removeFromArray("", domains);
      $('.order_amount_desc span').text(
        (domains.length > ucc_initial) ? domains.length : ucc_initial
      );

      if (ucc_reprocess.length > 0) {
        var domain_counts = $.getAllDomainCounts(domains);
        $('#order_wildcard_count').val(domain_counts.cur_wildcard);
        $('#order_nonwildcard_count').val(domain_counts.cur_nonwildcard);
        $('#wildcard-current-count').text('x ' + domain_counts.addt_wildcard);
        $('#nonwildcard-current-count').text('x ' + domain_counts.addt_nonwildcard);

        $.updateUccReprocessAmount(domain_counts.addt_nonwildcard, domain_counts.addt_wildcard);
        $.updateOrderDescription(domain_counts);
      } else {
        $.update_order_pricing();
      }
    };
  <%else%>
    $.adjustDomainPricing = function(textArea) {
      var domains = $.domains(textArea),
        ucc_initial = <%= Certificate::UCC_INITIAL_DOMAINS_BLOCK %>;
      $.removeFromArray("", domains);
      $('.order_amount_desc span').text(
        (domains.length > ucc_initial) ? domains.length : ucc_initial
      );

      if (ucc_reprocess.length > 0) {
        var domain_counts = $.getAllDomainCounts(domains);
        $('#order_wildcard_count').val(domain_counts.cur_wildcard);
        $('#order_nonwildcard_count').val(domain_counts.cur_nonwildcard);
        $('#wildcard-current-count').text('x ' + domain_counts.addt_wildcard);
        $('#nonwildcard-current-count').text('x ' + domain_counts.addt_nonwildcard);

        $.updateUccReprocessAmount(domain_counts.addt_nonwildcard, domain_counts.addt_wildcard);
        $.updateOrderDescription(domain_counts);
      } else {
        $.update_order_pricing();
      }
    };
  <%end%>

  $.updateOrderDescription  = function(args) {
    var wildcard_data = $('#ucc-wildcard-amount').data('cost'),
      wildcard_cost = (typeof wildcard_data =='undefined') ? '0.00' : wildcard_data;
    
    $('#order_order_description').val('Prorated charge for ' 
      + (args.addt_nonwildcard + args.addt_wildcard)
      + ' additional domains: (wildcard: ' + args.addt_wildcard + ' x $' + wildcard_cost
      + ', non wildcard: ' + args.addt_nonwildcard + ' x $'
      + $('#ucc-nonwildcard-amount').data('cost') + '). '
      + 'Used ' + args.cur_wildcard + ' of ' + args.init_wildcard 
      + ' available wildcard domains and '
      + args.cur_nonwildcard + ' of ' + args.init_nonwildcard 
      + ' available non wildcard domains.'
    );
  };

  $.filteringDomainsByCOType = function(domains, type) {
    var results = [];
    $.each(domains, function(idx) {
      var appendix = type == 'wildcard' ? '*.' : 'www.';
      var domain = type == 'wildcard' ? domains[idx].replace('www.', '') : domains[idx];

      if ($.inArray(domain, results) == -1) {
        results.push(domain);
      }

      if (domain.indexOf(appendix) > -1) {
        if ($.inArray(domain.substr(appendix.length), results) == -1) {
          results.push(domain.substr(appendix.length));
        }
      } else {
        if ($.inArray(appendix + domain, results) == -1) {
          results.push(appendix + domain);
        }
      }
    });

    return results;
  };
  
  $("textarea[name*=signing_request]").click(function(){
    $(this).select();
  });

  $('.managed_csr').change(function() {
    // remove flash message.
    $(".flash_message").remove();

    var ref_val = $(this).val();
    if (ref_val == 'none') {
      // empty previous CSR body.
      $("textarea[name*=signing_request]").val('');

      // show checkbox for adding pasted CSR to Managed CSR.
      $('.add_to_manager_block').show();
    } else {
      // hide checkbox for adding pasted CSR to Managed CSR.
      $('.add_to_manager_block').hide();

      $.ajax({
        url: "<%= all_domains_csrs_path %>",
        data: {
          ref: ref_val
        },
        type: "POST",
        success: function(data) {
          // paste CSR extracted from selected Managed CSR.
          $("textarea[name*=signing_request]").val(data['csr_body']);

          // show flash messages.
          <% if @certificate.product != "free" && @certificate_order.external_order_number.blank? %>
          var days_left = parseInt(data['days_left']) > 0 ?
            "<br><hr>" + data['days_left'] + " free SSL.com Carryover days will be added from the existing SSL/TLS certificate"
            :
            "";
          <%else%>
          var days_left = "";
          <%end%>
          $(".cert_reqs").after("<div class='flash_message notice'><span class='ajax_info'>common name field in csr is: "
            + data['common_name'] + days_left + "</span></div>");

          $('#common_name').val(data['common_name']);

          var csr_names = [];
          // adjust domain price.
          <% if @certificate.is_ucc?-%>
            if ((typeof data['subject_alternative_names'] != 'undefined')) {
              <%if Settings.csr_domains_ui%>
                csr_names = $.unique($.merge(data['subject_alternative_names'], [data['common_name']]));

                exist_domains = $('.managed_domains').val();
                if (exist_domains) {
                  exist_domains = exist_domains.join(' ').replace(/validated-/g, '').replace(/manual-/g, '').replace(/csr-/g, '').split(' ');
                  all_domains = $.unique($.merge(exist_domains, csr_names));
                } else {
                  all_domains = csr_names
                }

                $.adjustDomainPricing(all_domains.join(' '));
              <%else%>
                all_domains = $.unique($.merge(data['subject_alternative_names'], [data['common_name']]));
                /*additional_domains = $("textarea[name*=additional_domains]").text() + " " + data['subject_alternative_names'];*/
                additional_domains = $("textarea[name*=additional_domains]").text() + " " + all_domains;
                $("textarea[name*=additional_domains]").val($.uniqueStrings(additional_domains.split(/[\s,\n]+/)).join(" "));

                $.adjustDomainPricing($("textarea[name*=additional_domains]")[0]);
              <%end%>
            }
          <% else-%>
            csr_names = $.unique($.merge([data['common_name']], data['subject_alternative_names']));
          <% end-%>

          <%if Settings.csr_domains_ui%>
            co_type = '';
            <% if @certificate.is_free?-%>
              co_type = 'free';
            <% elsif @certificate.is_basic?-%>
              co_type = 'basic';
            <% elsif @certificate.is_high_assurance?-%>
              co_type = 'highAssurance';
            <% elsif @certificate.is_ev?-%>
              co_type = 'evSSL';
            <% elsif @certificate.is_wildcard?-%>
              co_type = 'wildcard';
            <% end-%>

            if (co_type != '') {
              all_domains = $.filteringDomainsByCOType(csr_names, co_type);
            }

            if (all_domains.length > 0) {
              // add domains what belongs to previous selected Managed CSR.
              select_obj = $('.managed_domains');

              // adding domains without validations.
              $.each(all_domains, function(idx) {
                var is_exist = false;
                var selected_value = $('.managed_domains').val();

                // checking duplication
                if ($.inArray(('csr-' + all_domains[idx]), selected_value) != -1
                  || $.inArray(all_domains[idx], selected_value) != -1) {
                  is_exist = true;
                }

                if (!is_exist && $.checkDomain(all_domains[idx])) {
                  var optElement = $('<option></option>');

                  optElement.attr('value', 'csr-' + all_domains[idx]);
                  optElement.attr('selected', true);
                  optElement.append(all_domains[idx]);

                  select_obj.append(optElement);
                }

                $('.clear_domains').show();

                $('#managed_domains').select2({
                  tags: true,
                  tokenizer: function(input, selection, callback) {
                    if (input.term.indexOf(',') == -1 && input.term.indexOf(' ') == -1)
                      return input;

                    var parts = input.term.split(/,| /);
                    $.each(parts, function(idx) {
                      var part = parts[idx];
                      part = part.trim();

                      if (part != '') {
                        callback({
                          id: part,
                          text: part
                        });
                      }
                    });

                    return '';
                  },
                  templateSelection: function(data, container) {
                    var value = data.element.value;

                    if (value.indexOf('csr-') == -1) {
                      $(container).css("background-color", "#A4C000");
                    }

                    return data.text;
                  }
                });
              });
            }
          <%end%>
        }
      });
    }
  });
  
  <% unless @certificate.is_code_signing? || Rails.env.test? %>
    $("textarea[name*=signing_request]").bind("change paste", function() {
      if ($(this).val() == "") {
        $(".flash_message").remove();
        return;
      }

      // parsing pasted CSR and getting Domains from this.
      if ( $(this).val().includes('-----END CERTIFICATE REQUEST-----') ) {
        $.ajax({
          url: "<%=parse_csr_certificate_orders_path%>",
          data: {csr: $(this).val(), certificate: "<%=@certificate.product%>"},
          type: "POST",
          success: function(data, status) {
            $(".flash_message").remove();

            var ajax_errors="";
            if ((typeof data.certificate_content.csr.errors.base != 'undefined')
              && (data.certificate_content.csr.errors.base.length>0)) {
              $.each(data.certificate_content.csr.errors.base, function(key, value) {
                ajax_errors+="<li>"+value+"</li>";
              });
            }

            if ((typeof data.certificate_content.errors.base != 'undefined') &&
              (data.certificate_content.errors.base.length>0)) {
              $.each(data.certificate_content.errors.base, function(key, value) {
                ajax_errors+="<li>"+value+"</li>";
              });
            }

            if ((typeof data.certificate_content.errors.signing_request != 'undefined')
              && (data.certificate_content.errors.signing_request.length>0)) {
              $.each(data.certificate_content.errors.signing_request, function(key, value) {
                ajax_errors+="<li>signing request "+value+"</li>";
              });
            }

            if (ajax_errors!="") {
              $(".cert_reqs").after("<div class='flash_message error'><span><ul class='ajax_info'>" + ajax_errors + "</ul></span></div>");
            } else {
              var csr_names = [];

              if ((typeof data.certificate_content.csr.common_name != 'undefined')) {
                <%if @certificate.product != "free" && @certificate_order.external_order_number.blank?%>
                  var days_left = data.certificate_content.csr.days_left > 0 ? "<br><hr>"+data.certificate_content.csr.days_left+" free SSL.com Carryover days will be added from expiring SSL/TLS certificate" : "";
                <%else%>
                  var days_left = "";
                <%end%>
                $(".cert_reqs").after("<div class='flash_message notice'><span class='ajax_info'>common name field in csr is: "+data.certificate_content.csr.common_name+days_left+"</span></div>");
                $('#common_name').val(data.certificate_content.csr.common_name);
              }

              <%if @certificate.is_ucc?-%>
                if((typeof data.certificate_content.csr.subject_alternative_names != 'undefined')){
                  <%if Settings.csr_domains_ui%>
                    csr_names = $.unique($.merge(data.certificate_content.csr.subject_alternative_names, [data.certificate_content.csr.common_name]));

                    exist_domains = $('.managed_domains').val();
                    if (exist_domains) {
                      exist_domains = exist_domains.join(' ').replace(/validated-/g, '').replace(/manual-/g, '').replace(/csr-/g, '').split(' ');
                      all_domains = $.unique($.merge(exist_domains, csr_names));
                    } else {
                      all_domains = csr_names;
                    }

                    $.adjustDomainPricing(all_domains.join(' '));
                  <%else%>
                    all_domains = $.unique($.merge(data.certificate_content.csr.subject_alternative_names, [data.certificate_content.csr.common_name]));
                    additional_domains = $("textarea[name*=additional_domains]").text() + " " + all_domains;
                    $("textarea[name*=additional_domains]").val($.uniqueStrings(additional_domains.split(/[\s,\n]+/)).join(" "));

                    $.adjustDomainPricing($("textarea[name*=additional_domains]")[0]);
                  <%end%>
                }
              <%else-%>
                common_name = data.certificate_content.csr.common_name;
                sans = data.certificate_content.csr.subject_alternative_names;
                all_domains = $.merge([common_name], sans);
                csr_names = $.unique(all_domains);
              <%end-%>

              // setting 'none' for Managed CSR
              $('.managed_csr').val('none');

              // show checkbox for adding this CSR to Managed CSR.
              if ($('#previous_csr').prop('checked')) {
                $('.add_to_manager_block').hide();
              } else {
                $('.add_to_manager_block').show();
              }

              <%if Settings.csr_domains_ui%>
                co_type = '';
                <% if @certificate.is_free?-%>
                  co_type = 'free';
                <% elsif @certificate.is_basic?-%>
                  co_type = 'basic';
                <% elsif @certificate.is_high_assurance?-%>
                  co_type = 'highAssurance';
                <% elsif @certificate.is_ev?-%>
                  co_type = 'evSSL';
                <% elsif @certificate.is_wildcard?-%>
                  co_type = 'wildcard';
                <% end-%>

                if (co_type != '') {
                  all_domains = $.filteringDomainsByCOType(csr_names, co_type);
                }

                // adding domains what belongs to current pasted CSR.
                select_obj = $('.managed_domains');

                // adding domains without validations.
                $.each(all_domains, function(idx) {
                  var is_exist = false;
                  var selected_value = $('.managed_domains').val();

                  // checking duplication
                  if ($.inArray(('csr-' + all_domains[idx]), selected_value) != -1
                    || $.inArray(all_domains[idx], selected_value) != -1) {
                    is_exist = true;
                  }

                  if (!is_exist && $.checkDomain(all_domains[idx])) {
                    var optElement = $('<option></option>');

                    optElement.attr('value', 'csr-' + all_domains[idx]);
                    optElement.attr('selected', true);
                    optElement.append(all_domains[idx]);

                    select_obj.append(optElement);
                  }

                  $('.clear_domains').show();

                  $('#managed_domains').select2({
                    tags: true,
                    tokenizer: function(input, selection, callback) {
                      if (input.term.indexOf(',') == -1 && input.term.indexOf(' ') == -1)
                        return input;

                      var parts = input.term.split(/,| /);
                      $.each(parts, function(idx) {
                        var part = parts[idx];
                        part = part.trim();

                        if (part != '') {
                          callback({
                            id: part,
                            text: part
                          });
                        }
                      });

                      return '';
                    },
                    templateSelection: function(data, container) {
                      var value = data.element.value;

                      if (value.indexOf('csr-') == -1) {
                        $(container).css("background-color", "#A4C000");
                      }

                      return data.text;
                    }
                  });
                });
              <%end%>
            }
          }
        });
      }
    });
  <%end%>

  $.updateUccReprocessAmount = function(nonwildcard_count, wildcard_count) {
    var wildcard         = $('#ucc-wildcard-amount'),
        wildcard_cost    = (wildcard.length ? wildcard.data('cost') : 0),
        nonwildcard_cost = $('#ucc-nonwildcard-amount').data('cost'),
        final_amount     = (nonwildcard_count * nonwildcard_cost) + (wildcard_count * wildcard_cost);

    $('#order_adjustment_amount').val(final_amount.toFixed(2));
    $('#calculated_reprocess_price').text('$' + final_amount.toFixed(2) + " USD");
  };

  $.update_order_pricing = function(){
    domains_cost = 0.0
    server_license_cost = 0.0;
    duration_index = <%= @certificate_order.certificate ? @certificate_order.certificate_duration(:years) : "$(':radio[name*=duration]:checked').val();".html_safe %>
    duration_cost = durations[duration_index-1];
    <%if @certificate.is_ucc? || @certificate.is_wildcard?%>
      server_license_cost = licenses[duration_index-1] * $('#certificate_order_server_licenses').val();
      included = "";
      if(server_license_cost==0)
        included = " (included)";
      $('#server_license_cost_ea').text(server_license_cost.toFixed(2)+included);
      <%if @certificate.is_ucc?%>
        wildcard_domains = $.grep(domains, function( n, i ) {
          return ( n.indexOf('*.')==0);
        }).filter(Boolean);
        if((domains.length - wildcard_domains.length) > <%=Certificate::UCC_INITIAL_DOMAINS_BLOCK%>){
          num_domains_buy = domains.length - wildcard_domains.length - <%=Certificate::UCC_INITIAL_DOMAINS_BLOCK%>;
          domains_cost = durations[duration_index-1][1]*num_domains_buy;
        }
        <%ratio = ("* "+@certificate_order.duration_remaining.to_s) if @certificate_order.signed_certificates.try(:last)%>
        $('#first_domain_tier_price').text((durations[duration_index-1][0]<%=ratio%>).toFixed(2));
        $('#second_domain_tier_price').text((durations[duration_index-1][1]<%=ratio%>).toFixed(2));
        <%unless @certificate.is_ev? or @certificate.is_premium_ssl?%>
          domains_cost = domains_cost + durations[duration_index-1][2]*wildcard_domains.length;
          $('#third_domain_tier_price').text((durations[duration_index-1][2]<%=ratio%>).toFixed(2));
        <%end%>
      <%end%>
    <%end%>
    if (ucc_reprocess.length == 0) {
      $('#calculated_price').text('$'+((parseFloat(duration_cost)+
        parseFloat(domains_cost)+parseFloat(server_license_cost)).toFixed(2))+
        " USD");
    }
  };

  var show_csr=true;
  $.build_cart_item = function(){
    return {"<%=ShoppingCart::PRODUCT_CODE%>" : $('#certificate_product').val() ,
      "<%=ShoppingCart::DURATION%>" : $(':radio[name*=duration]:checked').val(),
      <%if instance_variable_get('@'+CertificateOrder::RENEWING)-%>
        "<%=ShoppingCart::RENEWAL_ORDER%>" : '<%=instance_variable_get('@'+CertificateOrder::RENEWING).ref%>',
      <%end-%>
      "<%=ShoppingCart::LICENSES%>" :
      <%if @certificate.is_ucc? || @certificate.is_wildcard?-%>
      $('#certificate_order_server_licenses').val()
      <%else%>
      "0"
      <%end%>
      , "<%=ShoppingCart::DOMAINS%>" :
      <%if @certificate.is_ucc?%>
        <%if Settings.csr_domains_ui%>
          $.domains($('.managed_domains').val() ? $('.managed_domains').val().join(' ') : '').join(" ")
        <%else%>
          $.domains($('textarea[id$=domains]')[0]).join(" ")
        <%end%>
      <%else%>
      "0"
      <%end%>
      , "<%=ShoppingCart::AFFILIATE%>" : $.get_affiliate()};
  };

  $.change_cart_items = function(add_or_remove){
    add = (add_or_remove=="add") ? true : false;
    configured = $.build_cart_item();
    $.add_remove_cart_items(add, configured);
  };

  $.noLimitAccount = function() {
    return <%= current_user && current_user.ssl_account && current_user.ssl_account.no_limit %>;
  };

  $(document).ready(function() {
    domains = [];
    durations = new Array(<%=@certificate.num_durations%>);
    <%c = -1%>
    <%@certificate.num_durations.times do |i| -%>
      <%if @certificate.is_ucc?-%>
        durations[<%=i%>] = new Array(<%=@certificate.num_domain_tiers%>);
        <%@certificate.num_domain_tiers.times do |j|%>
          durations[<%=i%>][<%=j%>] = <%=(@certificate.items_by_domains(true)[i][j].price*((j==0)?3:1))%>;
        <%end%>
      <%else -%>
        durations[<%=i%>] = <%=@certificate.items_by_duration[i].price%>;
      <%end -%>
    <%end -%>
    <%if @certificate.is_ucc? || @certificate.is_wildcard?%>
      licenses = new Array(<%=@certificate.num_durations%>);
      <%@certificate.num_durations.times do |i| -%>
        licenses[<%=i%>] = <%=@certificate.items_by_server_licenses[i].price%>;
      <%end -%>
    <%end%>

    $('.submit_csr_img_tag').click(function() {
      <%if Settings.csr_domains_ui%>
        var slt_value_list = $('#managed_domains').val();
        if (slt_value_list && slt_value_list.length > 0) {
          $.each(slt_value_list, function(idx) {
            var ori_value = slt_value_list[idx].replace(/validated-/g, '').replace(/manual-/g, '').replace(/csr-/g, '');
            $('#managed_domains').find('option[value="' + slt_value_list[idx] + '"]').val(ori_value);
          });
        }
      <%end%>
    });

    $('textarea[id$=domains]').keypress(function (e) {
      if (e.keyCode == 13 || e.keyCode == 32) {
        $.adjustDomainPricing(this);
      }
    });

    $('textarea[id$=domains]').blur(function() {
      $.adjustDomainPricing(this);
    });

    $('textarea[id$=domains]').on('paste', function () {
      var $this = $(this);

      setTimeout(function() {
        $.adjustDomainPricing($this[0]);
      }, 0);
    });

    $(':radio[name*=duration]').click(function(){
      duration_index = $(':radio[name*=duration]:checked').val();
      $.update_order_pricing();
    });

    $('#certificate_order_server_licenses').click(function(){
      $.update_order_pricing();
    });

    $("li:contains('<%=CertificateContent::NOT_VALID_ISO_CODE%>')")
      .append(" <a href='<%=country_codes_csrs_path%>'>Please visit this link</a> for accepted country codes.");

    var profile_id = "";
    $('#expand_register_card').toggle(
      function(event){
          $.profileRequiredToggle('enable');
          $('#register_card_form').fadeIn();
          $(this).add('img[id=toggle_billing_profile_form]').attr('src', "<%= asset_path('hide_billing_profile_form.png') %>");
          $(event.target).text('Click here to hide form');
          profile_id = $(':radio[id*=funded_account_funding_source]:checked').attr("id");
          $(':radio[id*=funded_account_funding_source]').removeAttr('checked');},
      function(event){
          $.profileRequiredToggle('disable');
          $('#register_card_form').fadeOut();
          $(this).add('img[id=toggle_billing_profile_form]').attr('src', "<%= asset_path('add_new_billing_profile.png') %>");
          $(event.target).text('Click here to add a new credit card')
          $(':radio[id*='+profile_id+']').attr("checked","checked")}
      );

    $.last_delete_clicked=function(){
      if($('.delete_billing_profile').size() <= 1)
        $('.funding_sources_head, #existing_credit_cards').empty();
      $('#register_card_form').fadeIn();
    };

    $('#funded_account_amount').keyup(function () {
      amount = this.value
      $.update_balance_after_load();
    });

    $('#register_card_form').click(function(){
      $(':radio[id*=funded_account_funding_source]').removeAttr('checked');
    });

    $(':radio[id*=funded_account_funding_source]').click(function(){
      $('#register_card_form').fadeOut();
    });

    $('.has_csr_container').click(function(){
      $(this).siblings().filter(':radio[name*=has_csr]').click();
    });

    $('input[name*=agreement]').change(function(){
      $('#button_container').toggle(this.checked);
    });

    $(':radio[name*=has_csr]').click(function(){
      if($(this).val()=="false"){
        show_csr=false;
        $('#csr_section').hide();
        $('#form_progress_indicator').fadeOut();
      }
      else{
        show_csr=true;
        $('#csr_section').show();
        $('#form_progress_indicator').fadeIn();
      }
    });

    <%if !@certificate_order.is_unused_credit?%>
      $('form').submit(function(){
        //add to cart if csr is not ready
        if ($(':radio[name*=has_csr]').length!=0 && $(':radio[name*=has_csr]:checked').val()=="false") {
          $('textarea[name*=signing_request]').remove();

          if ($.noLimitAccount()) {
            return true;
          } else {
            var ajaxAddCartUrl = "<%=add_cart_orders_url%>";
            $.ajax({
              url: ajaxAddCartUrl,
              data: {
                cart: {
                  "<%=ShoppingCart::PRODUCT_CODE%>" : $('#certificate_product').val() ,
                  "<%=ShoppingCart::DURATION%>" : $(':radio[name*=duration]:checked').val(),
                  <%if instance_variable_get('@'+CertificateOrder::RENEWING)-%>
                    "<%=ShoppingCart::RENEWAL_ORDER%>" : '<%=instance_variable_get('@'+CertificateOrder::RENEWING).ref%>',
                  <%end-%>
                  "<%=ShoppingCart::LICENSES%>" :
                    <%if @certificate.is_ucc? || @certificate.is_wildcard?-%>
                      $('#certificate_order_server_licenses').val()
                    <%else%>
                    "0"
                    <%end%>
                  , "<%=ShoppingCart::DOMAINS%>" :
                    <%if @certificate.is_ucc?%>
                      <%if Settings.csr_domains_ui%>
                        $.domains($('.managed_domains').val() ? $('.managed_domains').val().join(' ') : '').join(" ")
                      <%else%>
                        $.domains($('textarea[id$=domains]')[0]).join(" ")
                      <%end%>
                    <%else%>
                      "0"
                    <%end%>
                  , "<%=ShoppingCart::AFFILIATE%>" : $.get_affiliate()
                  , "<%=ShoppingCart::QUANTITY%>" : 1
                }
              },
              type: "POST",
              success: function (result) {
                if (result['guid'] != '') {
                  window.location = "<%=show_cart_orders_url%>" + '?id=' + result['guid'];
                }
              }
            });

            return false;
          }
        }
      });
      if($(':radio[name*=has_csr]:checked').val()=="false"){
        show_csr=false;
        $('#csr_section').hide();
        $('#form_progress_indicator').hide();
      }
      $('.add_to_cart_button').click(function(){
        $.change_cart_items("add");
      });
      $('.remove_from_cart_button').click(function(){
        $.change_cart_items("remove");
      });
    <%end%>

    <%if @certificate.is_ucc?-%>
      <%if Settings.csr_domains_ui%>
        // checking price for order
        all_domains = $('.managed_domains').val();
        all_domains = all_domains && all_domains.length > 0
          ? all_domains.join(' ').replace(/validated-/g, '').replace(/manual-/g, '').replace(/csr-/g, '')
          : '';
        $.adjustDomainPricing(all_domains);
      <%else%>
        $.adjustDomainPricing($('textarea[id$=domains]')[0]);
      <%end%>
    <%end-%>

    $.update_order_pricing();

    <%unless Settings.show_csr_submit_on_buy_page%>
      $('#has_csr_switch').hide();
    <%end%>

    <%if Settings.csr_domains_ui%>
      $('#managed_domains').select2({
        tags: true,
        tokenizer: function(input, selection, callback) {
          if (input.term.indexOf(',') == -1 && input.term.indexOf(' ') == -1)
            return input;

          var parts = input.term.split(/,| /);
          $.each(parts, function(idx) {
            var part = parts[idx];
            part = part.trim();

            if (part != '') {
              callback({
                id: part,
                text: part
              });
            }
          });

          return '';
        },
        templateSelection: function(data, container) {
          var value = data.element.value;

          if (value.indexOf('csr-') == -1) {
            $(container).css("background-color", "#A4C000");
          }

          return data.text;
        }
      });
    <%end%>

    $('#weekday_custom_list').select2({ tags: true });
    $('#month_custom_list').select2({ tags: true });
    $('#day_custom_list').select2({ tags: true });
    $('#hour_custom_list').select2({ tags: true });
    $('#minute_custom_list').select2({ tags: true });

    var url = window.location.pathname;
    if (url.substr(url.lastIndexOf('/') + 1, url.length) == 'edit') {
      $('.custom_selected_block').hide();
      $('.custom_schedule').hide();
      $('.notification_group_schedule').hide();

      $('#schedule_simple_type option[value="2"]').attr('selected', true);
    }

    if (url.substr(url.lastIndexOf('/') + 1, url.length) == 'reprocess') {
      $('.custom_selected_block').hide();
      $('.custom_schedule').hide();
      $('.notification_group_schedule').hide();

      var slt_notification_group = '<%= @slt_notification_group ? @slt_notification_group.join(' ') : "" %>';
      if (slt_notification_group != '') {
        $('.custom_selected_block').hide();
        $('.custom_schedule').hide();
        $('.simple_schedule').hide();

        $('.notification_group_schedule').show();
        $('#schedule_type_none').prop('checked', true);
      } else {
        $('#schedule_simple_type option[value="2"]').attr('selected', true);
      }
    }

    <%if Settings.csr_domains_ui && @certificate.is_premium_ssl?%>
      $('#managed_domains').on('select2:opening select2:closing', function() {
        if ($('#managed_domains').val() != null && $('#managed_domains').val().length > 2) {
          var $searchfield = $(this).parent().find('.select2-search__field');
          $searchfield.prop('readonly', true);
        } else {
          var $searchfield = $(this).parent().find('.select2-search__field');
          $searchfield.removeProp('readonly');
        }
      });
      $('#managed_domains').on('select2:open', function() {
        if ($('#managed_domains').val() != null && $('#managed_domains').val().length > 2) {
          if (!$('.select2-dropdown').is(":hidden")) {
            $('.select2-dropdown').hide();
          }
        } else {
          if ($('.select2-dropdown').is(":hidden")) {
            $('.select2-dropdown').show();
          }
        }
      });
    <%end%>

    <%if Settings.csr_domains_ui%>
      $('#managed_domains1').on('change', function() {
        var changed_value = $(this).val();

        if (changed_value != null) {
          var needed_validate_list = [];

          // checking certificate type
          var co_type = '';
          <% if @certificate.is_evucc?-%>
            co_type = 'evUCC';
          <% end-%>

          // getting new selected option's value
          $.each(changed_value, function(idx) {
            // checking new selected option or not
            if (changed_value[idx].indexOf('validated-') == -1
              && changed_value[idx].indexOf('csr-') == -1
              && changed_value[idx].indexOf('manual-') == -1) {
              // checking duplication
              if ($.inArray(('validated-' + changed_value[idx]), changed_value) != -1
                || $.inArray(('csr-' + changed_value[idx]), changed_value) != -1
                || $.inArray(('manual-' + changed_value[idx]), changed_value) != -1
                || !$.checkDomain(changed_value[idx])
                || (co_type != '' && $.isWildcard(changed_value[idx]))) {
                // remove duplicated option element
                $('#managed_domains').find('option[value="' + changed_value[idx] + '"]').remove();
              } else {
                // adding option for checking validation
                needed_validate_list.push(changed_value[idx]);
              }
            }
          });

          // checking validation if exist need to be checked.
          if (needed_validate_list.length > 0) {
            $.ajax({
              url: "<%= check_validation_csrs_path %>",
              data: {
                domains: needed_validate_list
              },
              type: "POST",
              success: function (data) {
                $('.clear_domains').show();

                // Changing option value
                Object.keys(data).map(function(key) {
                  var value = data[key] == 'true' ? 'validated-' : 'manual-';
                  $('#managed_domains').find('option[value="' + key + '"]').val(value + key);
                });

                var managed_domains_obj = $('#managed_domains').select2({
                  tags: true,
                  tokenizer: function(input, selection, callback) {
                    if (input.term.indexOf(',') == -1 && input.term.indexOf(' ') == -1)
                      return input;

                    var parts = input.term.split(/,| /);
                    $.each(parts, function(idx) {
                      var part = parts[idx];
                      part = part.trim();

                      if (part != '') {
                        callback({
                          id: part,
                          text: part
                        });
                      }
                    });

                    return '';
                  },
                  templateSelection: function(data, container) {
                    var value = data.element.value;

                    if (value.indexOf('csr-') == -1 && value.indexOf('validated-') == -1) {
                      $(container).css("background-color", "#A4C000");
                    } else if (value.indexOf('validated-') != -1) {
                      $(container).css("background-color", "#ccffcc");
                    }

                    return data.text;
                  }
                });

                // checking price for order
                all_domains = $('.managed_domains').val();
                all_domains = all_domains && all_domains.length > 0
                  ? all_domains.join(' ').replace(/validated-/g, '').replace(/manual-/g, '').replace(/csr-/g, '')
                  : '';
                $.adjustDomainPricing(all_domains);

                // Focusing again.
                managed_domains_obj.select2('open');
              }
            });
          }
        } else {
          $('.clear_domains').hide();

          // checking price for order
          $.adjustDomainPricing('');
        }
      });
      $('#managed_domains').on('select2:select select2:unselect', function() {
        if ($('#managed_domains').val() != null && $('#managed_domains').val().length > 0) {
          $('.clear_domains').show();
        } else {
          $('.clear_domains').hide();
        }

        // checking price for order
        all_domains = $('.managed_domains').val();
        all_domains = all_domains && all_domains.length > 0
          ? all_domains.join(' ').replace(/validated-/g, '').replace(/manual-/g, '').replace(/csr-/g, '')
          : '';
        $.adjustDomainPricing(all_domains);
      });
    <%end%>

    $('#weekday_custom_list').on('select2:opening select2:closing', function( event ) {
      var $searchfield = $(this).parent().find('.select2-search__field');
      $searchfield.prop('readonly', true);
    });
    $('#month_custom_list').on('select2:opening select2:closing', function( event ) {
      var $searchfield = $(this).parent().find('.select2-search__field');
      $searchfield.prop('readonly', true);
    });
    $('#day_custom_list').on('select2:opening select2:closing', function( event ) {
      var $searchfield = $(this).parent().find('.select2-search__field');
      $searchfield.prop('readonly', true);
    });
    $('#hour_custom_list').on('select2:opening select2:closing', function( event ) {
      var $searchfield = $(this).parent().find('.select2-search__field');
      $searchfield.prop('readonly', true);
    });
    $('#minute_custom_list').on('select2:opening select2:closing', function( event ) {
      var $searchfield = $(this).parent().find('.select2-search__field');
      $searchfield.prop('readonly', true);
    });

    $('input[name="schedule_type"]').change(function() {
      if ($(this).val() == 'simple') {
        $('input[name="weekday_type"][value="true"]').prop('checked', true);
        if ($('#weekday_custom_list').val() != null) {
          $('#weekday_custom_list').val(null).trigger('change');
        }

        $('input[name="month_type"][value="true"]').prop('checked', true);
        if ($('#month_custom_list').val() != null) {
          $('#month_custom_list').val(null).trigger('change');
        }

        $('input[name="day_type"][value="true"]').prop('checked', true);
        if ($('#day_custom_list').val() != null) {
          $('#day_custom_list').val(null).trigger('change');
        }

        $('input[name="hour_type"][value="true"]').prop('checked', true);
        if ($('#hour_custom_list').val() != null) {
          $('#hour_custom_list').val(null).trigger('change');
        }

        $('input[name="minute_type"][value="true"]').prop('checked', true);
        if ($('#minute_custom_list').val() != null) {
          $('#minute_custom_list').val(null).trigger('change');
        }

        $('.custom_selected_block').hide();
        $('.custom_schedule').hide();
        $('.notification_group_schedule').hide();

        $('#schedule_simple_type option[value="2"]').prop('selected', true);
        $('.simple_schedule').show();
      } else if ($(this).val() == 'custom') {
        $('.simple_schedule').hide();
        $('.notification_group_schedule').hide();

        $('.custom_schedule').show();
      } else if ($(this).val() == 'none') {
        $('input[name="weekday_type"][value="true"]').prop('checked', true);
        if ($('#weekday_custom_list').val() != null) {
          $('#weekday_custom_list').val(null).trigger('change');
        }

        $('input[name="month_type"][value="true"]').prop('checked', true);
        if ($('#month_custom_list').val() != null) {
          $('#month_custom_list').val(null).trigger('change');
        }

        $('input[name="day_type"][value="true"]').prop('checked', true);
        if ($('#day_custom_list').val() != null) {
          $('#day_custom_list').val(null).trigger('change');
        }

        $('input[name="hour_type"][value="true"]').prop('checked', true);
        if ($('#hour_custom_list').val() != null) {
          $('#hour_custom_list').val(null).trigger('change');
        }

        $('input[name="minute_type"][value="true"]').prop('checked', true);
        if ($('#minute_custom_list').val() != null) {
          $('#minute_custom_list').val(null).trigger('change');
        }

        $('.custom_selected_block').hide();
        $('.custom_schedule').hide();
        $('.simple_schedule').hide();

        $('.notification_group_schedule').show();
      }
    });

    $('input[name="weekday_type"]').change(function() {
      if ($(this).val() == 'true') {
        if ($('#weekday_custom_list').val() != null) {
          $('#weekday_custom_list').val(null).trigger('change');
        }
        $('.block_weekday_custom').hide();
      } else {
        $('.block_weekday_custom').show();
      }
    });

    $('input[name="month_type"]').change(function() {
      if ($(this).val() == 'true') {
        if ($('#month_custom_list').val() != null) {
          $('#month_custom_list').val(null).trigger('change');
        }
        $('.block_month_custom').hide();
      } else {
        $('.block_month_custom').show();
      }
    });

    $('input[name="day_type"]').change(function() {
      if ($(this).val() == 'true') {
        if ($('#day_custom_list').val() != null) {
          $('#day_custom_list').val(null).trigger('change');
        }
        $('.block_day_custom').hide();
      } else {
        $('.block_day_custom').show();
      }
    });

    $('input[name="hour_type"]').change(function() {
      if ($(this).val() == 'true') {
        if ($('#hour_custom_list').val() != null) {
          $('#hour_custom_list').val(null).trigger('change');
        }
        $('.block_hour_custom').hide();
      } else {
        $('.block_hour_custom').show();
      }
    });

    $('input[name="minute_type"]').change(function() {
      if ($(this).val() == 'true') {
        if ($('#minute_custom_list').val() != null) {
          $('#minute_custom_list').val(null).trigger('change');
        }
        $('.block_minute_custom').hide();
      } else {
        $('.block_minute_custom').show();
      }
    });

    <%if Settings.csr_domains_ui%>
    $('.clear_domains').click(function(e) {
      e.preventDefault();
      $('#managed_domains').val(null).trigger('change');
      $.adjustDomainPricing('');
    });
    <%end%>
  });
});
</script>
