-title = "CDN Management"
-content_for :title, title
=render :partial => 'index_scripts'
=stylesheet_link_tag "bootstrap_style", :media => 'all'
-resources = @results[:resources]
#search_bar.hidden
  =form_tag :cdns, :id=>'hidden_form', :method=>:get do
    =hidden_field_tag :per_page, @per_page
#cdns
  %hr
  %div
    .sub-title Resources
    .sub-cont
      =form_tag :update_resources_cdns, :method=>:post do
        =hidden_field_tag :api_key, @current_user_api_key
        #resources
          %table(cellspacing="0")
            -if resources && resources.length > 0
              %tfoot
                %tr
                  %td.wrap_number_rows(colspan='2')
                    =select_tag :number_rows,
                    options_for_select([[5, 5], [10, 10], [20, 20], [50, 50], [100, 100]], @per_page),
                    :class=>'per_page'
                  %td(colspan='4')=will_paginate resources
            %caption
              Resources Management
              =will_paginate resources
            %tr.heading_row
              %th Hostname
              %th Origin
              %th Custom Host Name
              %th Created
              %th Delete?
            -if resources && resources.length > 0
              -resources.each do |resource|
                -owner_key = resource['user_api_key'] ? resource['user_api_key'] : @current_user_api_key
                %tr
                  %td
                    =link_to resource['hostname'], resource_cdn_cdn_path(@ssl_slug, resource['id'])
                  %td
                    =resource['origin']
                  %td
                    -if resource['custom_domains'].size > 0
                      -resource['custom_domains'].each do |custom_domain|
                        %p=custom_domain['hostname']
                    -else
                      %span ---
                  %td
                    =DateTime.parse(resource['created_at']).strftime("%d/%m/%Y")
                  %td
                    =check_box_tag "deleted_resources[]", resource['id'] + '|' + resource['alias'] + '|' + owner_key, false, class: 'chk-delete'
            -else
              %tr
                %td(colspan="5")
                  There are no resources
          -if resources && resources.length > 0
            =submit_tag 'Save', :id=>'btn_update_resource', :disabled=>true
    %hr
    %div.create-resource
      .sub-title Create Resource
      .sub-cont
        =form_tag '', :id=>'create_resource', :method=>:post do
          =hidden_field_tag :api_key, @current_user_api_key
          %div.reg-resource.clearfix
            .field-label * Resource Origin:
            .field-cont
              =text_field_tag :resource_origin, nil, placeholder: 'http://www.yoursite.com'
              .note
                Which website should we mirror on the CDN?
          %div.reg-resource.clearfix
            .field-label * Resource Name:
            .field-cont
              =text_field_tag :resource_name, nil, placeholder: 'mysite'
              %span .a.cdnify.io
              .note
                Something to identify this resource by (e.g. mysite.a.cdnify.io)
          =submit_tag 'Create', :id=>'btn_create_resource'
    %hr
  %div.modal#tos-modal
    %div.modal-dialog
      %div.modal-content
        %div.modal-header
          %h4.modal-title#modal-label Activate CDN
          %button.close{:type => 'button', 'data-dismiss' => 'modal'}
            #span &times
        %div.modal-body
          %div.container-fluid
            .row
              =text_area_tag :agreement, render(file: "public/agreements/cdnify.txt"), :size=>"100x20", :readonly=>true
            .row.pt-3
              %label
                =check_box_tag :agree_tos_chk, false
                I agree to CDNify's "Terms of Service" above
        %div.modal-footer
          %div.container-fluid
            %div.row
              .col-12
                =button_tag 'Save', 'class' => 'agree-cdn-tos float-right', 'type' => 'button', 'disabled' => 'disabled'
                =button_tag 'Cancel', 'class' => 'float-right mr-1', 'data-dismiss' => 'modal', 'type' => 'button'
