-title = "User Management"
-content_for :title, title
-slug_params = {ssl_slug: @ssl_slug}
=render :partial => 'index_scripts'
%div{style: 'display:flex;justify-content:flex-end'}
  #search_bar{style: 'flex-basis:400px;margin:1.5rem;'}
    =form_tag :search_users, :id=>'search_form', :method=>:get do
      username or email or role
      =text_field_tag :search, @search
      =hidden_field_tag :per_page, @per_page
      =submit_tag 'search'
      .search-hint
        = '*e.g.: role:account_admin'
  %div{style: 'flex-basis:270px;'}
#validations
  %table(cellspacing="0")
    -if @users.any?
      %tfoot
        %tr
          %td.wrap_number_rows
            = select_tag :number_rows, options_for_select([[5, 5], [10, 10], [20, 20], [50, 50], [100, 100]], @per_page), class: 'per_page'
          %td(colspan='7')
            = render partial: 'shared/paginate', locals: { collection: @users }
    %caption
      = title
      [learn about #{link_to "inviting users", "https://#{portal_domain}/how-to/inviting-users-to-your-team/", target: "_blank"}]
      = render partial: 'shared/paginate', locals: { collection: @users }
    - unless current_user.is_system_admins?
      %tr
        =link_to 'Invite User', new_managed_user_path(slug_params), class: 'button_blue button_index'
    %tr.heading_row
      %th
      %th
      %th.name(scope="col")Username
      %th(scope="col") Email Address
      %th(scope="col") Role(s)
      -if current_user.is_system_admins?
        %th(scope="col") Created
        %th(scope="col") Last Login
        %th(scope="col") Status
      -else
        %th(scope="col") Approved
    -if current_user.is_system_admins?
      -if @users.any?
        -@users.includes(:ssl_accounts).each do |u|
          -cache([current_user.id,'admin_users_list', u.cache_key], expires_in: 12.hours) do
            -user_view = true
            -user_view ||= u!=current_user && u.is_owner?(current_user.ssl_account)
            -type = user_role_names(u)
            -us, us_class=user_status(u)
            %tr{class: "#{user_view ? 'enable' : 'disable'}", alt: "#{u.id}"}
              %td.dropdown= user_view ? image_tag('expand.png') : ''
              %td.expandable= u.decorate.thumbnail
              %td.name.expandable=u.login
              %td.expandable=u.email
              %td.expandable.constrained=type.html_safe
              %td.expandable=u.created_at.strftime("%b %d, %Y")
              %td.expandable=(u.last_login_at.blank?) ? "never" : u.last_login_at.strftime("%b %d, %Y")
              %td.expandable.validation_status_message(class="#{us_class}" colspan="1")=us
            -#%tr.hidden.expanded
              %td(colspan="8")
                .certificate_details
                  =render "details", u: u
      -else
        %tr
          %td(colspan='8')
            There are no Users
    -else
      -if @users.size > 0
        -@users.each do |u|
          -cache([current_user.id,'users_list', u.cache_key], expires_in: 12.hours) do
            -user_view = false
            -user_view ||= u!=current_user && u.is_owner?(current_user.ssl_account)
            -as, as_class=ssl_account_status(u, current_user.ssl_account)
            %tr{class: "#{user_view ? 'enable' : 'disable'}", alt: "#{u.id}"}
              %td.dropdown= user_view ? image_tag('expand.png') : ''
              %td.expandable= u.decorate.thumbnail
              %td.name.expandable=u.login
              %td.expandable=u.email
              %td.expandable="#{u.role_symbols(current_user.ssl_account).join('/')}"
              %td.expandable.validation_status_message(class="#{as_class}" colspan="1")=as
            -#%tr.hidden.expanded
              %td(colspan="5")
                .certificate_details
                  =render "details", u: u
      -else
        %tr
          %td(colspan='5')
            There are no Users
