-title = "Teams"
-will_paginate @teams
-content_for :title, title
-system_admins = current_user.is_system_admins?
=render :partial => 'team_scripts'

#search_bar
  =form_tag teams_user_path, id: 'search_form', method: :get do
    name, account #, or slug
    =text_field_tag :team, params[:team]
    =hidden_field_tag :per_page, @per_page
    =button_tag 'Search', id: 'btn_teams_search'

#validations
  %table(cellspacing="0")
    -unless @teams.empty?
      %tfoot
        %tr
          %td.wrap_number_rows(colspan='2')
            =select_tag :number_rows,
            options_for_select([[5, 5], [10, 10], [20, 20], [50, 50], [100, 100]], @per_page),
            :class=>'per_page'
          %td(colspan='5')=will_paginate @teams
    -#-if will_paginate @teams
      %tfoot
        %tr
          %td(colspan='7')=will_paginate @teams
    %caption
      =title
      [learn about #{link_to "teams", "https://#{Settings.portal_domain}/article/introducing-teams-ssl-com-multiuser-accounts/", target: "_blank"}]
      =will_paginate @teams
    -if permitted_to?(:create_team, current_user) and !system_admins
      %br
      %tr
        =link_to "+ Create Team (#{current_user.max_teams-current_user.total_teams_owned.count} Remaining)", create_team_user_path(current_user), class: 'button_blue button_index'
    %tr.heading_row
      %th.name(scope="col") Name
      %th(scope="col") Account #
      -unless system_admins
        %th(scope="col" class="teams-index-text-left") Roles
      -else
        %th(scope="col") Owner
      %th(scope="col") Funds
      %th(scope="col") Details
      %th(scope="col") Join Date
      -#-unless system_admins
        %th(scope="col" class="teams-index-text-left") Action
      %th(scope="col" class="teams-index-text-left") Action
    -unless @team_invites.nil?
      -@team_invites.each do |t|
        -invite_ssl = SslAccount.find(t[:ssl_account_id])
        %tr
          %td=invite_ssl.get_team_name
          %td=invite_ssl.acct_number
          %td
          %td=current_user.role_symbols(invite_ssl)
          %td
          %td Invited to team. Pending approval...
          %td="<span class='chip'>pending</span>".html_safe
          %td
            =link_to "accept", t[:accept]
            %br
            =link_to "decline", t[:decline], {style: 'color:red;'}
    -if @teams.size > 0
      -@teams.each do |t|
        -cache([current_user,'teams_list', t], expires_in: 12.hours) do
          -if t.active?
            -account_owner = current_user.is_account_owner? t
            -account_admin = current_user.is_account_team_admin? t
            %tr
              %td
                -unless system_admins
                  =link_to t.get_team_name, switch_default_ssl_account_user_path(current_user.id, ssl_account_id: t.id)
                -else
                  =t.get_team_name
              %td=t.acct_number
              -unless system_admins
                %td#teams-user-roles.teams-index-text-left
                  =render_user_roles(current_user.role_symbols(t))
              -else
                %td=link_to(t.get_account_owner.try(:login).shorten(15,false),admin_show_user_path(t.get_account_owner), title: t.get_account_owner.try(:login)) if t.get_account_owner.try(:login)
              %td
                -if system_admins
                  %a{style:"cursor: pointer;", onclick: "adjust_funds_ssl_account('#{t.to_slug}','#{t.get_team_name}')"} $#{t.funded_account.try :amount}
                -elsif !current_user.role_symbols(t).include?((Role::INDIVIDUAL_CERTIFICATE).to_sym)
                  $#{t.funded_account.try :amount}
              %td#team-detail-links
                -permissions = team_index_permissions(current_user, t)
                %div
                  -if system_admins || permissions.include?(:orders)
                    =link_to "<i class='fa fa-file-text'></i> orders: #{t.cached_certificate_orders_count}".html_safe,
                      certificate_orders_path(ssl_slug: t.to_slug), class: 'btn-team-links'
                  -if system_admins || permissions.include?(:transactions)
                    =link_to "<i class='fa fa-credit-card'></i> transactions: #{t.orders.count}".html_safe,
                      orders_path(ssl_slug: t.to_slug), class: 'btn-team-links'
                  -if system_admins || permissions.include?(:validations)
                    =link_to "<i class='fa fa-expeditedssl'></i> validations: #{t.validations.count}".html_safe,
                      validations_path(ssl_slug: t.to_slug), class: 'btn-team-links'
                  -if system_admins || permissions.include?(:users)
                    =link_to "<i class='fa fa-user-circle-o'></i> users: #{t.users.count}".html_safe,
                      users_path(ssl_slug: t.to_slug), class: 'btn-team-links'

                -if system_admins
                  #team-billing-method
                    =form_tag ssl_account_path(ssl_slug: t.to_slug), id: 'frm-team-billing-method',  method: :put do
                      =label_tag 'BILLING METHOD:'
                      =select_tag :billing_method,                                                                           |
                        options_for_select(SslAccount::BILLING_METHODS.map{|bm| [bm.gsub('_', ' '), bm]}, t.billing_method),
                        class: 'team-sel-billing-method'
                      - if params[:page]
                        =hidden_field_tag :page, params[:page]

                  #team-no-limit
                    =form_tag ssl_account_path(ssl_slug: t.to_slug), id: 'frm-team-no-limit',  method: :put do
                      =label_tag 'NO LIMIT:'
                      =select_tag :no_limit, options_for_select([ ['ON', true], ['OFF', false] ], t.no_limit),
                        class: 'team-sel-no-limit'
                      - if params[:page]
                        =hidden_field_tag :page, params[:page]
                  %br/
                  #team-epki-switch
                    =form_tag ssl_account_path(ssl_slug: t.to_slug), id: 'frm-team-epki-switch',  method: :put do
                      =label_tag 'EPKI:'
                      =select_tag :epki_agreement, options_for_select([ ['ON', true], ['OFF', false] ], !t.epki_agreement.nil?),
                        class: 'team-sel-epki-switch'
                      -if params[:page]
                        =hidden_field_tag :page, params[:page]

                  #team-reseller-tier-switch
                    #frm-team-reseller-tier-switch.clearfix
                      =label_tag 'Reseller Level:'
                      =link_to 'Manage', '', class: 'team-sel-reseller-tier', "data-team-ref": t.acct_number || t.ssl_slug, "data-reseller-fields": reseller_fields(t)
                      -unless t.reseller.blank?
                        %span /
                        =link_to 'Delete', '', class: 'team-del-reseller-tier', "data-team-ref": t.acct_number || t.ssl_slug
              %td=t.created_at.strftime("%b %d, %Y")
              -#-unless system_admins
                %td#team-action-items.teams-index-text-left
                  =link_to "<i class='fa fa-eye'></i> view".html_safe, |
                    switch_default_ssl_account_user_path(current_user.id, ssl_account_id: t.id)
                  -unless account_owner || system_admins
                    %br/
                    =link_to "<i class='fa fa-user-times'></i> leave".html_safe, |
                      leave_team_user_path(current_user, ssl_account_id: t.id),  |
                      {data: {confirm: "Please confirm you want to leave team #{t.get_team_name}."}}
                  -if permitted_to?(:set_default_team, current_user) && !system_admins
                    %br/
                    = link_to "<i class='fa fa-certificate'></i> set default".html_safe, |
                      set_default_team_user_path(current_user, ssl_account_id: t.id), method: :put
              %td#team-action-items.teams-index-text-left
                -unless system_admins
                  =link_to "<i class='fa fa-eye'></i> view".html_safe,
                    switch_default_ssl_account_user_path(current_user.id, ssl_account_id: t.id)
                  -unless account_owner || system_admins
                    %br/
                    =link_to "<i class='fa fa-user-times'></i> leave".html_safe,
                      leave_team_user_path(current_user, ssl_account_id: t.id),
                      {data: {confirm: "Please confirm you want to leave team #{t.get_team_name}."}}
                  -if permitted_to?(:set_default_team, current_user) && !system_admins && current_user.default_ssl_account != t.id
                    %br/
                    = link_to "<i class='fa fa-certificate'></i> set default".html_safe,
                      set_default_team_user_path(current_user, ssl_account_id: t.id), method: :put
                - if account_owner and current_user.total_teams_owned.count > 1
                  =link_to "<i class='fa fa-chevron-circle-down'></i> archive".html_safe,
                    archive_team_user_path(current_user.id, ssl_account_id: t.id),
                    {data: {confirm: "Please confirm you want to archive team \"#{t.get_team_name}\"."}}
          -else
            -account_owner_admin = current_user.is_team_owner_admin? t
            %tr
              %td=t.get_team_name
              %td=t.acct_number
              -unless system_admins
                %td#teams-user-roles.teams-index-text-left
                  =render_user_roles(current_user.role_symbols_archived_team(t))
              -else
                %td=link_to(t.get_account_owner.try(:login).shorten(15,false),admin_show_user_path(t.get_account_owner), title: t.get_account_owner.try(:login)) if t.get_account_owner.try(:login)
              %td
                $#{t.funded_account.try :amount}
              %td#team-detail-links
              %td=t.created_at.strftime("%b %d, %Y")
              %td#team-action-items.teams-index-text-left
                - if account_owner_admin || system_admins
                  =link_to "<i class='fa fa-chevron-circle-up'></i> unarchive".html_safe,
                      retrieve_team_user_path(current_user.id, ssl_account_id: t.id)
    -else
      %tr
        %td(colspan="7")
          There are no teams.

#reseller-tier-modal.reseller-tier-modal
  #reseller-tier-modal-content.modal-content
    #reseller-tier-modal-header.modal-header
      %span#reseller-tier-modal-close.close
        &times;
      %p
        Change Reseller Tier.
    #reseller-tier-modal-body.modal-body
      =form_tag :manage_reseller_ssl_account, :id => 'change_reseller_tier_modal_form', :method => :post do
        =hidden_field_tag :ssl_account_ref
        =hidden_field_tag :exist_reseller
        .reseller-fields.clearfix
          =label_tag 'Level :', nil, class: 'lbl_reseller_tier'
          =select_tag :reseller_tier, options_for_select(@reseller_tiers), class: 'reseller-tier'
        .reseller-fields.clearfix
          =label_tag 'First Name :', nil, class: 'lbl_first_name'
          =text_field_tag :first_name, '', class: 'reseller-field-first-name'
          .required-field
            * First Name is required!
        .reseller-fields.clearfix
          =label_tag 'Last Name :', nil, class: 'lbl_last_name'
          =text_field_tag :last_name, '', class: 'reseller-field-last-name'
          .required-field
            * Last Name is required!
        .reseller-fields.clearfix
          =label_tag 'Email :', nil, class: 'lbl_email'
          =text_field_tag :email, '', class: 'reseller-field-email'
          .required-field
            * Email Address is required!
        .reseller-fields.clearfix
          =label_tag 'Phone :', nil, class: 'lbl_phone'
          =text_field_tag :phone, '', class: 'reseller-field-phone'
          .required-field
            * Phone Number is required!
        .reseller-fields.clearfix
          =label_tag 'Type Organization :', nil, class: 'lbl_type_organization'
          =select_tag :type_organization, options_for_select([[Reseller::INDIVIDUAL.capitalize, Reseller::INDIVIDUAL], [Reseller::BUSINESS.capitalize, Reseller::BUSINESS]]), class: 'reseller-field-type-organization'
        .reseller-fields.clearfix
          =label_tag 'Organization :', nil, class: 'lbl_organization'
          =text_field_tag :organization, '', class: 'reseller-field-organization'
          .required-field
            * Organization is required!
        .reseller-fields.clearfix
          =label_tag 'Website :', nil, class: 'lbl_website'
          =text_field_tag :website, '', class: 'reseller-field-website'
          .required-field
            * Website Address is required!
        .reseller-fields.clearfix
          =label_tag 'Address1 :', nil, class: 'lbl_address1'
          =text_field_tag :address1, '', class: 'reseller-field-address1'
          .required-field
            * Address is required!
        .reseller-fields.clearfix
          =label_tag 'Postal Code :', nil, class: 'lbl_postal_code'
          =text_field_tag :postal_code, '', class: 'reseller-field-postal-code'
          .required-field
            * Postal Code is required!
        .reseller-fields.clearfix
          =label_tag 'City :', nil, class: 'lbl_city'
          =text_field_tag :city, '', class: 'reseller-field-city'
          .required-field
            * City is required!
        .reseller-fields.clearfix
          =label_tag 'State :', nil, class: 'lbl_state'
          =text_field_tag :state, '', class: 'reseller-field-state'
          .required-field
            * State is required!
        .reseller-fields.clearfix
          =label_tag 'Tax Number :', nil, class: 'lbl_tax_number'
          =text_field_tag :tax_number, '', class: 'reseller-field-tax-number'
          .required-field
            * Tax Number is required!
        .reseller-fields.clearfix
          =label_tag 'Country :', nil, class: 'lbl_country'
          =select_tag :country, options_for_select(BillingProfile::TOP_COUNTRIES + [""], disabled: [""]) + options_for_select(Country.select_options("name"))
    #reseller-tier-modal-footer.modal-footer
      = button_tag 'Save', :type => 'button', :class => 'btn btn-grey btn-save-reseller float-right'
      = button_tag 'Cancel', :type => 'button', :class => 'btn btn-grey btn-cancel-reseller float-right mr-1'