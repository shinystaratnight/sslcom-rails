#dashboard
  table(cellspacing="0")
    caption
      | ssl account information for #{user.login} #{"(last logged in #{user.last_login_at.strftime("%b %d, %Y")})" unless user.last_login_at.blank?}
    tr.heading_row
      tr.expanded
        td(colspan="5")
          .certificate_details
            table(cellspacing="0")
              tbody
                tr.alt
                  th account type
                  th signup date
                  th last logged on
                  -if current_user.is_system_admins?
                    th last ip address
                tr.alt
                  td standard
                  td=user.created_at.strftime("%b %d, %Y")
                  td=user.updated_at.strftime("%b %d, %Y")
                  -if current_user.is_system_admins?
                    td = link_to(user.last_login_ip, "http://www.infosniper.net/index.php?ip_address=#{user.last_login_ip}&map_source=1&overview_map=1&lang=1&map_type=1&zoom_level=7", target: "_blank") if user.last_login_ip 
            table(cellspacing="0")
              tbody
                tr
                  td(colspan="5")
                    .row
                      .col-md-2
                        = render partial: 'user_profile', locals: { user: user}
                      .col-md-5
                        ul
                          li
                            strong
                              | login account
                          li username: #{user.login} 
                          li email: #{user.email}
                          li account number: #{user.ssl_account.acct_number} 
                          li roles: #{user.role_symbols(ssl_account).join('/')}
                          =render partial: 'ssl_slug_company', locals: {user: user}
                          -if permitted_to? :admin_manage, user
                            javascript:
                              | function adjust_funds_#{user.id}()
                              | {
                                | var amount = prompt("Amount to adjust (in USD)?", '');
                                | if (amount == null || amount=="")
                                  | return;
                                | else
                                  | window.location = '#{adjust_funds_user_url(user)}?amount='+encodeURIComponent(amount);
                              | }
                              | function change_login_#{user.id}()
                              | {
                                | var login = prompt("What is the new username? (3 chars min)", '');
                                | if (login == null || login=="")
                                  | return;
                                | else
                                  | window.location = '#{change_login_user_url(user)}?login='+encodeURIComponent(login);
                              | }
                            li=remote_login_link(user)
                          li=link_to 'edit email address', edit_email_user_url(user)
                          li=link_to 'change password', edit_password_user_url(user)
                          -if permitted_to?(:edit, :billing_profiles) && !is_sandbox?
                            -unless current_user.is_affiliate?
                              li=link_to 'become a referral link partner', "https://#{community_domain}/affiliate/index.php"
                            -unless ssl_account.is_registered_reseller?
                              li=link_to 'upgrade to reseller', new_reseller_url
                          -permitted_to? :edit_settings, current_user.ssl_account do
                            li=link_to "settings", edit_settings_ssl_account_path(ssl_slug: @ssl_slug)
                      .col-md-5
                        ul
                          -if ssl_account && permitted_to?(:read, :contacts)
                            li
                              strong contacts/identities
                            li=link_to 'contacts', saved_contacts_contacts_path(ssl_slug: @ssl_slug)
                            li=link_to 'identity manager', saved_contacts_contacts_path(ssl_slug: @ssl_slug, registrants: true)
                    .row
                      .col-md-2
                      -unless is_sandbox?
                        .col-md-5
                          ul
                            -if permitted_to?(:edit, :billing_profiles)
                              li
                                strong
                                  | billing and purchase
                              -if permitted_to?(:create, :funded_accounts)
                                li available funds: #{ssl_account.funded_account.decorate.available}
                              -if permitted_to? :read, :orders
                                li=link_to "billing", is_sandbox? ? search_orders_path(search:'is_test:true') : orders_path(ssl_slug: @ssl_slug)
                              li=link_to 'buy certificate', certificates_url
                              li=link_to "s/mime or client enrollment", smime_client_enrollment_certificate_orders_path(ssl_slug: @ssl_slug)
                              li=link_to 'deposit funds', allocate_funds_url(ssl_slug: @ssl_slug)
                              -if ssl_account && permitted_to?(:index, :billing_profiles)
                                li=link_to 'manage billing profiles', billing_profiles_path(ssl_slug: @ssl_slug)
                              li=link_to 'view purchased certificates', certificate_orders_url(ssl_slug: @ssl_slug)
                              -if ssl_account.has_credits?
                                li=link_to 'use certificate credits', credits_certificate_orders_url(ssl_slug: @ssl_slug)
                              -if ssl_account && permitted_to?(:index, :invoices) && ssl_account.invoices.any?
                                li=link_to 'monthly and daily invoices', invoices_path(@ssl_slug)
                      -if ssl_account.api_credentials
                        .col-md-5
                          ul
                            li
                              strong
                                | developers and integration
                            li=link_to "generate api commands", "https://www.ssl.com/how-to/pregenerated-api-calls-to-automate-certificate-management/"
                            -if user.is_account_admin? || user.is_owner? || user.is_installer?
                              li=link_to "api credentials", api_credentials_path(ssl_slug: @ssl_slug)
                              li=link_to "developer tools", is_sandbox? ? developers_certificate_orders_url : "https://sandbox.ssl.com"
                              li=link_to 'view documentation', "http://docs.sslcomapi.apiary.io/", target: "_new"
