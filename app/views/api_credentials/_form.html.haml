- system_admin = current_user.is_system_admins?
.clearfix.form_input
  - if system_admin || current_user.can_manage_team_users?
    - if @user_accounts_roles 
      .hidden{data: {accounts_roles: @user_accounts_roles.to_json}, id: 'user_account_roles'}
    - scoped_ssl     = @ac.ssl_account
    - ssl_label      = system_admin ? 'Ssl Account #' : 'Team(s)'
    - ssl_collection = system_admin ? @user.ssl_accounts : current_user.total_teams_can_manage_users
    - ssl_select     = system_admin ? scoped_ssl.id : current_user.default_ssl_account
  - else
    = form.hidden_field :ssl_account_ids, value: [current_user.ssl_account.try(:id)]
  = form.label :account_key, 'Account key'
  = form.text_field :account_key
  = form.label :account_key, 'Secret key'
  = form.text_field :secret_key
.clearfix.form_input
  - role_ids = @ac.role_ids
  = form.label :role_id, "Role(s)<span class='label_desc'>set permissions</span>".html_safe
  .checkbox_roles
    = collection_check_boxes(:api_credential, :role_ids, User.roles_list_for_user(current_user).order(:name), 
      :id, :name, checked: (role_ids)) do |r|
      .checkbox_role{id: "role_#{r.object.name}"}
        = r.check_box
        = r.label
      %br
      %br

