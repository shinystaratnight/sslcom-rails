-saved_registrants = (!params[:registrants].blank? && !(params[:registrants] && params[:registrants] == 'false')) || @registrants
-saved_contacts = !saved_registrants
-is_system_admins = current_user && current_user.is_system_admins?

-if current_user && @all_contacts
  #validations
    =render partial: 'filter_form', locals: {saved_registrants: saved_registrants, is_system_admins: is_system_admins}
  
  -will_paginate @all_contacts
  #validations
    %h3 Saved #{saved_contacts ? 'Contacts' : 'Identities'}
    %table{cellspacing: '0'}
      -if will_paginate @all_contacts
        %tfoot
          %tr
            %td(colspan='6')=will_paginate @all_contacts
      -if !is_system_admins && permitted_to?(:create, Contact.new)
        %br
        %tr
          =link_to "New", new_contact_path(saved_contact: true), class: 'button_blue button_index'
        %tr
          =link_to "New EPKI", new_contact_path(saved_contact: true, epki_registrant: true), class: 'button_blue button_index'
      %tr.heading_row
        %th Name
        %th Company
        -if is_system_admins
          %th Team
        -if saved_registrants
          %th Validation Status
          %th 
            = is_system_admins ? 'Files' : 'Documents'
          -if is_system_admins
            %th IV/OV
            %th Change Status
        - if saved_contacts
          %th Default
          %th{colspan: 4} 
            Default Notifications
            %br
            Administrative | Billing | Technical | Validation
        %th{colspan: 3} Actions
      -@all_contacts.each do |c|
        -f_name = c.first_name
        -l_name = c.last_name
        %tr
          %td= f_name.blank? && l_name.blank? ? '' : "#{l_name}, #{f_name}"
          %td #{c.company_name}
          -if is_system_admins
            %td
              %strong
                -team_name = c.contactable.get_team_name
                =link_to team_name, saved_contacts_contacts_path(@ssl_slug, team: team_name, commit: 'Search', registrants: saved_registrants), |
                  method: :get
          -if saved_registrants
            %td.contacts-index-status{class: c.validated? ? 'contacts-index-validated' : ''}
              #{c.status.nil? ? 'N/A' : c.status.humanize.downcase}
            %td
              %strong
                #{c.validation_histories.count}
            -if is_system_admins
              %td
                =c.contact_ov? ? 'OV' : 'IV'
              %td
                =form_tag admin_update_contact_path(c), method: :puts do
                  =select_tag :status, options_for_select(Contact::statuses.keys.map{|s| [s.humanize.downcase, s]}, c.status), |
                  class: 'btn-reg-update-status'

          -if saved_contacts
            %td #{c.saved_default ? "&#x2713;".html_safe : ''}
            -if c.type=='CertificateContact'
              %td=check_box_tag :administrative, 'yes', (c.roles.include?('administrative')), disabled: true
              %td=check_box_tag :billing, 'yes', (c.roles.include?('billing')), disabled: true
              %td=check_box_tag :technical, 'yes', (c.roles.include?('technical')), disabled: true
              %td=check_box_tag :validation, 'yes', (c.roles.include?('validation')), disabled: true
            -else
              %td{colspan: 4}
          %td#contacts-index-actions
            -if permitted_to?(:show, c.becomes(Contact))
              =link_to "<i class='fa fa-eye'></i> view".html_safe, contact_path(@ssl_slug, c.id, saved_contact: true)
            -if permitted_to?(:edit, c.becomes(Contact))
              =link_to "<i class='fa fa-edit'></i> edit".html_safe, edit_contact_path(@ssl_slug, c.id, saved_contact: true)
            -if permitted_to?(:destroy, c.becomes(Contact))
              =link_to "<i class='fa fa-trash'></i> delete".html_safe, contact_path(@ssl_slug, c.id, saved_contact: true), method: :delete, |
              data: {confirm: 'Are you sure you want to delete this contact?'}, class: 'contacts-index-destroy'
