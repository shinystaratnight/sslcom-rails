<script type="text/javascript">
jQuery.noConflict();
jQuery(function($) {
  $(document).ready(function() {
    <%js_roles = CertificateContent::CONTACT_ROLES.dclone%>
    var form_types = ["<%=js_roles.map{|role|role.insert(0,"#certificate_content_")}.join("_form\", \"").html_safe%>_form"];
    var check_boxes = ["<%=(js_roles-%w(administrative)).join("_checkbox\", \"").html_safe%>_checkbox"];
    var epki_contact = "<%= (params[:epki_registrant] || @render_epki_registrant || "false") %>";
    var iv_contact = "<%= @contact && @contact.contact_iv? %>";

    $(':checkbox[id*=checkbox]').click(function(){
      to = $(this).attr('id').length - '_checkbox'.length;
      form = $(this).attr('id').substring(0,to);
      if(!$('#'+form+'_form').is(":visible")){
        $('#'+form+'_form').show();
      }
      else{
        $('#'+form+'_form').hide();
      }
    });
    $('form[id^=edit_certificate_content]').submit(function(){
      for(i=0; i<check_boxes.length; i++){
        if($(check_boxes[i+1]).attr("checked"))
          $(form_types[i+1]+" input").each(function(index){
            if($(this).attr('id')!='roles')
              $(this).val($($(form_types[0]+" input")[index]).val());
          });
      }
    });
    for(i=0; i<check_boxes.length; i++){
      if($(check_boxes[i+1]).attr("checked"))
        $(form_types[i+1]).hide();
    }
    
    // Saved Contacts and Registrant Forms:
    // toggle form fields based on contact_type and registrant_type (organization vs. individual)
    // populate attribute if saved contact is selected for order contacts.
    function populateContact(form_id, label, data) {
      $("#" + form_id + " label[for='" + label + "']").siblings('input').val(data);
    }
    function getContactFormId(selected) {
      return ('#' + selected.parents()['1'].id);
    }
    function hideElement(element) {
      element.addClass('hidden');
    }
    function showElement(element) {
      element.removeClass('hidden');
    }
    function setSavedContact(selected) {
      var contact_id = selected.val(),
          form_id    = getContactFormId(selected),
          set_id     = form_id + ' .parent_id',
          fields_id  = form_id + ' .fields',
          update_id  = form_id + ' .link-contact-update',
          cancel_id  = form_id + ' .link-update-cancel';
      
      $(set_id).val((contact_id.length > 0) ? contact_id : '');
      if (contact_id.length > 0) {
        hideElement($(fields_id));
        showElement($(update_id));
        hideElement($(cancel_id));
      } else {
        showElement($(fields_id));
        hideElement($(update_id));
        showElement($(cancel_id));
      }
    }
    
    $('.link-contact-update, .link-update-cancel').click(function(e) {
      e.preventDefault();
      var form_id = getContactFormId($(this)),
          fields_id = form_id + ' .fields',
          update_id = form_id + ' .link-contact-update',
          cancel_id = form_id + ' .link-update-cancel',
          edit_id   = form_id + ' .update_parent';
      
      if ($(this).hasClass('link-contact-update')) {
        showElement($(fields_id));
        hideElement($(update_id));
        showElement($(cancel_id));
        $(edit_id).val(true);
      } else {
        hideElement($(fields_id));
        hideElement($(cancel_id));
        showElement($(update_id));
        $(edit_id).val(null);
      }
    });
    
    function copyContactFields(selected) {
      var form_id = selected.parents()['1']['id'];
      setSavedContact(selected);
      var list = [
        ['title', 'title'],
        ['company_name', 'company_name'],
        ['department', 'department'],
        ['po_box', 'po_box'],
        ['address1', 'address1'],
        ['address2', 'address2'],
        ['address3', 'address3'],
        ['city', 'city'],
        ['state', 'state'],
        ['postal_code', 'postal_code'],
        ['country', 'country'],
        ['postal_code', 'postal_code'],
        ['email', 'email'],
        ['phone', 'phone'],
        ['first_name', 'first_name'],
        ['last_name', 'last_name'],
        ['fax', 'fax'],
        ['ext', 'ext']
      ];
      list.forEach(function(el) {
        populateContact(
          form_id, el[0], $('#' + form_id + ' #saved_contacts option:selected').data(el[1])
        );
      });
    }
    function hideContactType() {
      hideElement($("label[for='type']").parent());
    }
    function hideOrgFields() {
      hideElement($("label[for='company_name']").parent());
      hideElement($("label[for='department']").parent());
      hideElement($("label[for='duns_number']").parent());
    }
    function showOrgFields() {
      showElement($("label[for='department']").parent());
      showElement($("label[for='company_name']").parent());
      showElement($("label[for='duns_number']").parent());
      
    }
    function hideIndivFields() {
      hideElement($("label[for='first_name']").parent());
      hideElement($("label[for='last_name']").parent());
      $("label[for='phone']").text('*Phone:');
    }
    function showIndivFields() {
      $("label[for='first_name']").parent().removeClass('hidden');
      $("label[for='last_name']").parent().removeClass('hidden');
      $("label[for='phone']").text('Phone:');
    }
    function showRegistrantType() {
      $('#contact_registrant_type').parent().removeClass('hidden');
    }
    function hideSavedContactFields() {
      hideElement($("label[for='administrative_role']").parent());
      hideElement($("label[for='billing_role']").parent());
      hideElement($("label[for='technical_role']").parent());
      hideElement($("label[for='validation_role']").parent());
      hideElement($("label[for='default']").parent());
      hideElement($(".saved-contact-roles"));
    }
    function showSavedContactFields() {
      showElement($("label[for='administrative_role']").parent());
      showElement($("label[for='billing_role']").parent());
      showElement($("label[for='technical_role']").parent());
      showElement($("label[for='validation_role']").parent());
      showElement($("label[for='default']").parent());
      showElement($(".saved-contact-roles"));
      showOrgFields();
      showIndivFields();
      addressNotRequired();
      $("label[for='phone']").text('*Phone:');
    }
    function hideAddressFields() {
      hideElement($(".saved-contact-fields"));
      hideElement($("label[for='address1']").parent());
      hideElement($("label[for='address2']").parent());
      hideElement($("label[for='address3']").parent());
      hideElement($("label[for='city']").parent());
      hideElement($("label[for='state']").parent());
      hideElement($("label[for='postal_code']").parent());
      hideElement($("label[for='country']").parent());
      hideElement($("label[for='po_box']").parent());
    }  
    function addressRequired() {
      $("label[for='address1']").text('*Address 1:');
      $("label[for='city']").text('*City:');
      $("label[for='state']").text('*State:');
      $("label[for='postal_code']").text('*Postal Code:');
      $("label[for='country']").text('*Country:');
      $("label[for='company_name']").text('*Company Name:');
    }
    function addressNotRequired() {
      $("label[for='address1']").text('Address 1:');
      $("label[for='city']").text('City:');
      $("label[for='state']").text('State:');
      $("label[for='postal_code']").text('Postal Code:');
      $("label[for='country']").text('Country:');
      $("label[for='company_name']").text('Company Name:');
    }
    function showRegistrantFields() {
      addressRequired();
      hideSavedContactFields();
      if ($('#contact_registrant_type').val()==<%= Registrant::registrant_types[:individual] %>) {
        hideOrgFields();
        showIndivFields();
      } else {
        showOrgFields();
        hideIndivFields();
      }
    }
    function epkiAgreementRequired() {
      if ( (epki_contact == 'true') && !$('#contact_epki_agreement_request').is(':checked') ) {
        alert("Please check 'Service Agreement' checkbox if you agree with 'SSL.com Enterprise PKI Service Agreement'");
        return false;
      } else {
        return true;
      }
    }

    $('.saved_contacts').change(function() {
      copyContactFields($(this));
    });
    
    $('.saved_contacts').each(function(el) {
      var selected_id = '#'+ $(this).parents()['1']['id'] + ' .saved_contacts' + ' option:selected';
      if ($(selected_id).text().length > 0) {
        copyContactFields($(this));  
      }
    });
    
    if ( ($('#edit_saved_contact').length || $('#new_saved_contact').length)
      && $('#contact_type').val()=='Registrant') {
      showRegistrantType();
      showRegistrantFields();
    }
    
    if (epki_contact == "true") {
      hideSavedContactFields();
      hideElement($('#contact_type').parent());
      hideElement($('#contact_registrant_type').parent());
      addressRequired();
      showIndivFields();
      showOrgFields();
    }

    if (iv_contact) {
      hideSavedContactFields();
      hideOrgFields();
      showIndivFields();
      hideAddressFields();
      hideContactType();
    }

    $('form').on('submit', function() {
      return epkiAgreementRequired();
    });

    $('#new_saved_contact #contact_type, #edit_saved_contact #contact_type').change(function() {
      if ($(this).val()=='Registrant') {
        $('#contact_registrant_type').parent().removeClass('hidden');
        showRegistrantFields();
      } else {
        hideElement($('#contact_registrant_type').parent());
        showSavedContactFields();
      }
    });
    
    $('#contact_registrant_type').change(function() {
      showRegistrantFields();
    });
    
    $("#btn-cancel-contact").click(function() {
      window.location.href = "<%= saved_contacts_contacts_url(ssl_slug: @ssl_slug, registrants: (@contact.is_a?(Registrant) ? true : nil)) %>";
    });
    
    // Toggle Contact form roles: if administrative THEN uncheck other roles and vice versa.
    $('#chk-administrative-role, #chk-billing-role, #chk-technical-role, #chk-validation-role').on('click', function() {
      if ($(this).is(':checked')) {
        if ( $(this).prop('id') == 'chk-administrative-role' ) {
          $('#chk-billing-role, #chk-technical-role, #chk-validation-role').prop('checked', false);
        } else {
          $('#chk-administrative-role').prop('checked', false);
        }
      }
    });

  });
});
</script>
