.subheading
  Require 2FA for Team #{@ssl_account.acct_number}
.settings_block
  .settings_block#u2f_settings
    = radio_button_tag :sec_type, 'u2f', @ssl_account.sec_type == 'u2f'
    = label_tag :sec_type_u2f, "Use U2f"
    .u2f_block.u2f_info
      -if u2fs.size > 0
        -u2fs.each do |u2f|
          .u2f_device_info_block.clearfix{:id => "u2f_device_#{u2f.id}"}
            .u2f_device_info
              =u2f.nick_name
            .u2f_device_info
              %span - registered on
              =u2f.created_at.strftime("%b %d, %Y")
            .u2f_device_info.right
              =button_tag 'Remove', :type=>'button', :class=>'remove_u2f_device', 'data-id'=>u2f.id
      -else
        .clearfix
        .u2f_no_devices 
          %em no devices are currently registered
    .u2f_block.add_nick_name.hidden
      =text_field_tag 'u2f_device_name', nil, :size=>30, :class=>'left u2f_device_name', :placeholder=>'Enter a nickname for this security key.'
      =button_tag 'Add', :type=>'button', :class=>'add_u2f_device disabled'
  -if Settings.duo_auto_enabled || Settings.duo_custom_enabled
    .settings_block#duo_settings
      = radio_button_tag :sec_type, 'duo', @ssl_account.sec_type == 'duo'
      = label_tag :sec_type_duo, "Use Duo"
      .clearfix    
      .duo_block.duo_check
        .clearfix
          = check_box_tag :duo_login_enable, @ssl_account.id, @ssl_account.duo_enabled, :disabled => !(@ssl_account.sec_type == 'duo')
          = label_tag :duo_login_enable, "Enable Duo login".html_safe
      .duo_block.duo_own{:style => "display: #{!Settings.duo_auto_enabled ? "none" : "block"}"}
        .clearfix
          = check_box_tag :duo_own_used, @ssl_account.id, @ssl_account.duo_own_used, :disabled => !(@ssl_account.duo_enabled) || !(@ssl_account.sec_type == 'duo')
          = label_tag :duo_own_used, "Use own Duo account".html_safe
      .duo_block.duo_info{:style => "display: #{(Settings.duo_custom_enabled && @ssl_account.duo_own_used) || !Settings.duo_auto_enabled ? "block" : "none"};"}
        .clearfix.duo_key
          = label_tag :duo_ikey, "Duo Integration Key".html_safe
          = text_field_tag :duo_ikey, duo ? duo.duo_ikey : "", :class => "click_to_select_all", :disabled => (Settings.duo_auto_enabled && !@ssl_account.duo_own_used) || !(@ssl_account.sec_type == 'duo')
        .clearfix.duo_key
          = label_tag :duo_skey, "Duo Secret Key".html_safe
          = text_field_tag :duo_skey, duo ? "Click to view." : "", :class => "click_to_select_all", :disabled => (Settings.duo_auto_enabled && !@ssl_account.duo_own_used) || !(@ssl_account.sec_type == 'duo'), 'data-skey' => "#{duo ? duo.duo_skey : ""}"
        .clearfix.duo_key
          = label_tag :duo_akey, "Duo A Key".html_safe
          = text_field_tag :duo_akey, duo ? duo.duo_akey : "", :class => "click_to_select_all", :disabled => "disabled"
          = button_tag "Generate", :type=>'button', :class=>'btn_generate', :disabled=>(Settings.duo_auto_enabled && !@ssl_account.duo_own_used) || !(@ssl_account.sec_type == 'duo')
        .clearfix.duo_key
          = label_tag :duo_hostname, "Duo API Hostname".html_safe
          = text_field_tag :duo_hostname, duo ? duo.duo_hostname : "", :class => "click_to_select_all", :disabled => (Settings.duo_auto_enabled && !@ssl_account.duo_own_used) || !(@ssl_account.sec_type == 'duo')
  ._2fa_block.register
    =button_tag 'Register', :type=>'button', :class=>'register_2fa'
