!!!
%html
  %head
    %meta{:content => 'text/html; charset=UTF-8', 'http-equiv' => 'Content-Type'}/
    %meta{:charset => 'utf-8'}/
    =stylesheet_link_tag wicked_pdf_asset_base64('invoice.css')
  %body
    #background
      %p#bg-text #{@invoice.status.upcase}
    
    %div#header.alwaysbreak
      %table
        %tr
          %td#header-logo
            =image_tag wicked_pdf_asset_base64('ssl_logo_print.png')
          %td#header-address
            SSL.com
            %br
            3100 Richmond Ave
            %br
            Ste 503
            %br
            Houston, TX, 77098
    
    #sub-header
      %table
        %tr
          %td#bill-to
            %p.font-small-grey Billed To
            -@invoice.invoice_bill_to_str.each do |line|
              =line.strip
              %br
          
          %td#invoice-sum
            %p.font-small-grey Invoice #
            %p#ref-num #{@invoice.reference_number}
            
            %p#date.font-small-grey Due Date
            %p#invoice-date #{@invoice.end_date.strftime('%F')}
            
            -if @invoice && !@invoice.vat.blank?
              %p.font-small-grey#date VAT #
              %p#invoice-date #{@invoice.vat}
          
          %td#invoice-total
            %p.font-small-grey Invoice Total
            %p#amount #{@invoice.get_amount_format}
    
    #line-items
      -descriptions = @invoice.get_item_descriptions
      %table
        %caption
          %p#bg-note
            *Invoice and charges are accurate
            %br
            ="as of #{DateTime.now.strftime('%F %I:%M %p')}."
        %thead
          %tr
            %th Description
            %th Domains
            %th Wildcard
            %th Line Total
        %tbody
          -@invoice.get_approved_items.each_with_index do |o, i|
            -cur_descr = descriptions[o.reference_number.to_s] 
            %tr.nobreak
              %td
                .description-ext
                  %strong
                    %small
                      =cur_descr[:item]
                  %br
                  =cur_descr[:description]
                .description
                  .domain-names-medium
                    -quantity = cur_descr[:new_domains]
                    Reprocessed on #{o.created_at.strftime('%F')} for #{quantity} additional #{(quantity > 1) ? 'domains' : 'domain'}.
              %td.quantity #{cur_descr[:non_wildcard]}
              %td.quantity #{cur_descr[:wildcard]}
              %td.price #{o.amount.format}
    
    %div#line-items-total.nobreak
      -payment = @invoice.payment
      -paid    = payment && payment.paid?
      -funded  = paid ? payment.get_funded_account_amount : 0
      -total   = @invoice.get_cents - funded
      -total_f = Money.new(total).format
      -due     = paid ? '$0.00' : total_f

      %table
        %tr
          %td#subtotal Subtotal
          %td.amount #{@invoice.get_amount_format}
        -if paid
          %tr
            %td#fund-lbl Funded Account Credit
            %td#fund-amt -#{Money.new(funded).format}
        %tr
          %td#total-lbl Total
          %td#total-amt #{total_f}
        %tr
          %td#paid-lbl Paid
          %td#paid-amt #{paid ? payment.amount.format : '$0.00'}
        %tr#amount-due
          %td#due-lbl Amount Due
          %td#due-amt #{due}
