-title = "Monthly Invoice"
-content_for :title, title
-system_admins = current_user.is_system_admins?
-descriptions  = @invoice.get_item_descriptions
-total_format  = @invoice.get_amount_format
-funded_amount = @order.get_funded_account_amount if @order
-items_params  = {descriptions: descriptions, total_format: total_format, funded_amount: funded_amount}
-invoice_ref   = @invoice.reference_number
-payment       = @invoice.payment
-ref_merchant  = payment.get_merchant unless payment.nil?

#validations.monthly-invoice
  #summary
    %div
      %span TYPE:
      %strong #{@invoice.class.to_s.gsub('Invoice', ' Invoice')}
    %div
      %span INVOICE #:
      %strong #{invoice_ref}
    %div
      %span STATUS:
      %strong #{@invoice.status.upcase.gsub('_', ' ')}
    %div
      %span ITEMS:
      %strong #{@invoice.get_approved_items.count}
    %div
      %span DUE:
      %strong #{@invoice.end_date.strftime('%F')}

  =render partial: 'items_list', locals: items_params.merge(approved_list: true)
  -if @invoice.get_removed_items.any?
    =render partial: 'items_list', locals: items_params.merge(approved_list: false)
       
-if payment
  =render partial: 'payment_section', locals: { refund_merchant: ref_merchant, system_admins: system_admins }

-if system_admins
  #monthly-invoice-actions
    %h3.order_results_header
      Admin Actions
    #invoice-container
      #btn-invoice-generate
        =link_to "&#x2713; Manage Items".html_safe,          |
          manage_items_invoice_path(@ssl_slug, invoice_ref), |
          class: 'button-mo-invoice btn-mo-manage', method: :get
          
      -if @invoice.show_payment_actions?
        #btn-invoice-generate
          -p_text_wire = Invoice::PAYMENT_METHODS_TEXT[:wire]
          =link_to "&#x27B2; Payment #{p_text_wire}".html_safe,                       |
            make_payment_other_invoice_path(@ssl_slug, invoice_ref, ptm_type: :wire), |
            class: 'button-mo-invoice', method: :put,                                 |
            data: { confirm: "Are you sure you want to pay by #{p_text_wire} and set invoice to paid?" }
      
        #btn-invoice-generate
          -p_text_other = Invoice::PAYMENT_METHODS_TEXT[:po]
          =link_to "&#x27B2; Payment #{p_text_other}".html_safe,                    |
            make_payment_other_invoice_path(@ssl_slug, invoice_ref, ptm_type: :po), |
            class: 'button-mo-invoice', method: :put,                               |
            data: { confirm: "Are you sure you want to pay by #{p_text_other} and set invoice to paid?" }
            
      #btn-invoice-generate
        =link_to "&#x2631; Update".html_safe, '#', class: 'button-mo-invoice', id: 'lnk-mo-invoice-update'
      
      -unless @invoice.archived?
        #btn-invoice-generate
          =link_to "&#x2716; Delete".html_safe, invoice_path(@ssl_slug, invoice_ref), |
            class: 'button-mo-invoice btn-mo-destroy', method: :delete,               |
            data: { confirm: "Are you sure you want to delete (archive) this invoice?" }

      -if @invoice.show_refund_actions?
        -if ref_merchant && %{stripe paypal authnet}.include?(ref_merchant) && !@invoice.merchant_refunded?
          #btn-invoice-generate
            -refunded = payment.get_total_merchant_refunds
            =link_to "<strong>Refund (#{ref_merchant.capitalize})</strong>".html_safe,       |
            refund_merchant_order_path(@ssl_slug, payment, mo_ref: invoice_ref, type: :new), |
            method: :get, class: 'button-mo-invoice', id: 'lnk-mo-invoice-refund'
        
        -if @invoice.paid_wire_transfer? || @invoice.paid_po_other?
          -type = @invoice.paid_wire_transfer? ? :wire : :po 
          =link_to "Refund #{Invoice::PAYMENT_METHODS_TEXT[type]}",      |
          refund_other_invoice_path(@ssl_slug, invoice_ref, refund_type: type), |
          method: :put, class: 'button-mo-invoice'
        
        -if @invoice.max_credit.cents > 0
          #btn-invoice-generate
            =link_to 'Credit', credit_invoice_path(@ssl_slug, invoice_ref), |
            class: 'button-mo-invoice', id: 'lnk-mo-invoice-credit'
    
    #invoice-admin-errors
    #invoice-container-admin
      =render partial: 'invoice_update'
    #invoice-container-credit
      =render partial: 'invoice_credit'
            
#monthly-invoice-actions
  %h3.order_results_header
    Actions
  #invoice-container
    #btn-invoice-dwnl
      =link_to "\u21E9 Download".html_safe, |
      download_invoice_path(@ssl_slug, invoice_ref), class: 'button-mo-invoice'
    
    #btn-invoice-update
      =link_to "&#x2631; Change Address".html_safe, '#', |
      id: 'lnk-update-invoice', class: 'button-mo-invoice'
    
    -if @invoice.show_payment_actions?
      #dlg-invoice-transfer.hidden
        %div
          Please use information below if you want to pay by wire transfer:
          %br/  
          %br/
          %strong JPMorgan Chase Bank, N.A.
          %br/
          %br/
          Routing:
          %strong #{Rails.application.secrets.ssl_routing_number}
          %br/
          Account:
          %strong #{Rails.application.secrets.ssl_account_number}
          %br/
          SWIFT:
          %strong CHASUS33TEX

      #btn-invoice-generate
        =link_to "Make Payment",                          |
        new_payment_invoice_path(@ssl_slug, invoice_ref), |
        class: 'button-mo-invoice', method: :get
      
      #btn-invoice-generate    
        =link_to "Wire Transfer".html_safe, '#', |
        id: 'dlg-wire-transfer-info', class: 'button-mo-invoice'
  
  #invoice-container-errors
  
  #invoice-container-ext
    =render partial: 'orders/invoice_update'

-if system_admins
  =render partial: 'system_audits'
