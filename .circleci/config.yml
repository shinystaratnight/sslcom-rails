aliases:
  - &copy-certassure-settings |
    cp config/client/certassure/settings.yml config/
  - &create-settings-yml |
    cp config/settings/test.yml config/settings.yml

  - &create-local-env-yml |
    mkdir -p config && echo "
                AWS_ACCESS_KEY_ID: ''
                AWS_SECRET_ACCESS_KEY: ''
                S3_BUCKET_NAME: ''
                S3_AVATAR_BUCKET_NAME: ''
                AWS_DEFAULT_REGION: 'us-east-1'
                DUO_INTEGRATION_KEY: '${DUO_INTEGRATION_KEY}'
                DUO_SECRET_KEY: '${DUO_SECRET_KEY}'
                DUO_APPLICATION_KEY: '${DUO_APPLICATION_KEY}'
                DUO_API_HOSTNAME: '${DUO_API_HOSTNAME}'
                DUO_SYSADMIN_INTEGRATION_KEY: '${DUO_INTEGRATION_KEY}'
                DUO_SYSADMIN_SECRET_KEY: '${DUO_SECRET_KEY}'
                DUO_SYSADMIN_APPLICATION_KEY: '${DUO_APPLICATION_KEY}'
                DUO_SYSADMIN_API_HOSTNAME: '${DUO_API_HOSTNAME}'
                GATEWAY: 'stripe'
                STRIPE_TEST_PUBLISHABLE_KEY: '${STRIPE_TEST_PUBLISHABLE_KEY}'
                STRIPE_TEST_SECRET_KEY: '${STRIPE_TEST_SECRET_KEY}'
                STRIPE_PUBLISHABLE_KEY: '${STRIPE_PUBLISHABLE_KEY}'
                STRIPE_SECRET_KEY: '${STRIPE_SECRET_KEY}'
            " > config/local_env.yml

  - &install-mysql-dependencies |
    sudo apt-get update
    sudo apt-get install -y unixodbc-dev default-mysql-server
    sudo gem uninstall bundler
    sudo rm /usr/local/bin/bundle
    sudo rm /usr/local/bin/bundler
    sudo gem install bundler:1.17.3

  - &precompile-assets |
    RACK_ENV="test" WEBPACKER_PRECOMPILE=false bundle exec rake assets:precompile
    RACK_ENV="test" bundle exec rake pillar_theme:webpacker:compile
    
  - &setup-database |
    export RAILS_ENV="test"
    export RACK_ENV="test"
    bundle exec rake db:create --trace
    bundle exec rake db:structure:load --trace
    bundle exec rake db:migrate --trace

  - &copy-database-yml |
    mkdir -p config && echo 'test:
      adapter: mysql2
      database: ssl_com_test
      username: root
      host: 127.0.0.1
    ' > config/database.yml

  - &install-code-climate-reporter |
    curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    chmod +x ./cc-test-reporter

defaults: &defaults
  parallelism: 2
  working_directory: ~/sslcom-rails
  docker:
    - image: circleci/ruby:2.6.6-stretch-node-browsers
      environment:
        RAILS_ENV: test
        DB_HOST: 127.0.0.1
        BUNDLE_JOBS: 1
        BUNDLE_RETRY: 1
        BUNDLE_PATH: vendor/bundle
        CIRCLE_CI: "true"
        CACHE_VERSION: "v3"
        CIRCLE_NODE_INDEX: 0
        CIRCLE_NODE_TOTAL: 2
    - image: circleci/mysql:5.7.28
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        MYSQL_ROOT_HOST: "%"
        CACHE_VERSION: "v3"

version: 2.1
jobs:
  rspec:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: Pull Sub-Modules
          command: |
            git submodule init
            git submodule update --remote

      - run:
          name: Install Mysql Libraries
          command: *install-mysql-dependencies

      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/sslcom-rails

      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache

      - run:
          name: Install bundle
          command: bin/bundle install --path vendor/bundle

      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/sslcom-rails/vendor/bundle

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: Create settings.yml
          command: *create-settings-yml

      - run:
          name: Copy local_env.yml
          command: *create-local-env-yml

      - run:
          name: Copy Database.yml
          command: *copy-database-yml

      - run:
          name: Copy Settings File
          command: cp config/client/certassure/settings.yml config/

      - run:
          name: Setup Database
          command: *setup-database

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Precompile Assets
          command: *precompile-assets

      - run:
          name: Run tests
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=filesize)
            bundle exec rspec --profile 10 \
                              --color \
                              --order random \
                              --format RspecJunitFormatter \
                              --out test-results/rspec/rspec.xml \
                              --format progress \
                              -- ${TESTFILES}
      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-artifacts

      - store_artifacts:
          path: tmp/capybara

  build:
    <<: *defaults
    parallelism: 1
    steps:
      - checkout

      - run:
          name: Pull Sub-Modules
          command: |
            git submodule init
            git submodule update --remote

      - run:
          name: Install Libraries for mySQL and Correct Bundler Version (1.17.3)
          command: *install-mysql-dependencies

      - restore_cache:
          keys:
            - gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-{{ arch }}-{{ .Branch }}
            - gem-cache

      - run:
          name: Bundle Install Gem Dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment

      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Create settings.yml
          command: *create-settings-yml

      - run:
          name: Copy local_env.yml
          command: *create-local-env-yml

      - run:
          name: Copy Database.yml
          command: *copy-database-yml

      - run:
          name: Copy CertAssureSetting
          command: *copy-certassure-settings

      - run:
          name: Setup Database
          command: *setup-database

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Precompile Assets
          command: *precompile-assets

      - run:
          name: Eager load classes to check for issues
          command: |
            bundle exec rails runner 'Rails.application.eager_load!'

  upload-coverage:
    docker:
      - image: circleci/ruby:2.5.1-stretch-node
    working_directory: ~/sslcom-rails

    steps:

      - attach_workspace:
          at: ~/sslcom-rails
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

      - attach_workspace:
          at: ~/sslcom-rails
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  build_and_coverage:
    jobs:
      - build
      - rspec
      - upload-coverage:
          requires:
            - rspec
