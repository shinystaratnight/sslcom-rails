version: 2
jobs:
  build:
    working_directory: ~/sslcom-rails
    docker:
      - image: circleci/ruby:2.6.2-node-browsers
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:5.7.28
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_ROOT_HOST: "%"
    steps:
      - checkout
      - restore_cache:
          keys:
            - sslcom-rails-{{ checksum "Gemfile.lock" }}
            - sslcom-rails-
            - v1-rubocop-cache-{{ checksum ".rubocop.yml" }}-{{ .Branch }}
            - v1-rubocop-cache-{{ checksum ".rubocop.yml" }}-master
            - v1-rubocop-cache-{{ checksum ".rubocop.yml" }}

      - run:
          name: Install Libraries for mySQL and Correct Bundler Version (1.17.3)
          command: |
            sudo apt-get install unixodbc-dev
            sudo apt-get -y install mysql-server
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            sudo gem install bundler -v 1.17.3

      - run:
          name: Bundle Install Gem Dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment

      # - run:
      #     name: Dependencies security audit
      #     command: |
      #       bundle exec bundle-audit check --update

      - run:
          name: Build the Settings YML files
          command: |-
            mkdir -p config && echo '
              api_product_codes:
                {100: "evucc256sslcom", 101: "ucc256sslcom", 102: "ev256sslcom",
                 103: "ov256sslcom", 104: "dv256sslcom", 105: "wc256sslcom", 106: "basic256sslcom",
                 107: "premium256sslcom",
                 204: "evucc256sslcom", 202: "ucc256sslcom", 203: "ev256sslcom",
                 200: "basic256sslcom", 201: "wc256sslcom", 300: "personalbasic256sslcom",
                 301: "personalpro256sslcom", 302: "personalbusiness256sslcom", 303: "personalenterprise256sslcom",
                 310: "naesbbasic256sslcom", 350: "codesigning256sslcom", 360: "evcodesigning256sslcom"}
              subca_mapping:
                dv: {product: "basicssl", label: "<i>SSL</i>.com Basic"}
                premiumssl: {product: "premiumssl", label: "<i>SSL</i>.com Premium"}
                ev: {product: "ev", label: "<i>SSL</i>.com Enterprise EV"}
                ov: {product: "high_assurance", label: "<i>SSL</i>.com High Assurance"}
                wildcard: {product: "wildcard", label: "Wildcard (Unlimited Subdomains)"}
                ucc: {product: "ucc", label: "Multi-Domain (SAN/UCC)"}
                evucc: {product: "evucc", label: "EV Multi-Domain (EV SAN/UCC)"}
              send_dv_first: true
            ' > config/settings.yml

      - run:
          name: Build the Local Environment File on the Fly
          command: |-
            mkdir -p config && echo '
              AWS_ACCESS_KEY_ID: ""
              AWS_SECRET_ACCESS_KEY: ""
              S3_BUCKET_NAME: ""
              AWS_DEFAULT_REGION: ""
            ' > config/local_env.yml

      - run:
          name: Build the Test Database YML file on the Fly
          command: |-
            mkdir -p config && echo 'test:
              adapter: mysql2
              database: ssl_com_test
              username: root
              host: 127.0.0.1
            ' > config/database.yml
      - run:
          name: Copy Settings File
          command: cp config/client/certassure/settings.yml config/

      - run:
          name: Rubocop Linting
          command:  bundle exec rake rubocop:git_diff

      - save_cache:
          key: v1-rubocop-cache-{{ checksum ".rubocop.yml" }}-{{ .Branch }}-{{ epoch }}
          paths:
            - ../.cache/rubocop_cache

      - save_cache:
          key: sslcom-rails-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Create the Test Database, Load the Structure, and Migrate the Latest Migrations
          command: |-
            export RAILS_ENV="test"
            export RACK_ENV="test"
            bundle exec rake db:create db:structure:load db:migrate --trace

      - run:
          name: Run Rails Application Tests
          command: bundle exec rake test

            # Yarn dependencies
      - restore_cache:
          keys:
            - v1-yarn-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-yarn-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
            - ~/.cache
          key: v1-yarn-{{ checksum "package.json" }}

      - run:
          name: Setup Database for Cypress Test
          command: |-
            export RAILS_ENV="test"
            export RACK_ENV="test"
            bundle exec rake db:create db:structure:load db:migrate db:seed --trace

      - run:
          name: Rails Server
          command: bundle exec rails server -e test -b 0.0.0.0 -p 5002
          background: true

      - run:
          name: Run Cypress
          command: yarn cypress run --project ./test

      - run:
          name: Precompile Assets
          command: bundle exec rake assets:precompile --trace

      - run:
          name: Eager load classes to check for issues
          command: |
              bundle exec rails runner 'Rails.application.eager_load!'

      - store_artifacts:
          path: coverage
